digraph G{
rankdir="LR";
"MODULE"[shape="box",fillcolor="white",style=filled];
"import logging,type='import_statement'\nline_star:0,line_end:0|char_star:0,char_end:14"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import logging,type='import_statement'\nline_star:0,line_end:0|char_star:0,char_end:14";
"import sys,type='import_statement'\nline_star:1,line_end:1|char_star:0,char_end:10"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import sys,type='import_statement'\nline_star:1,line_end:1|char_star:0,char_end:10";
"from io import StringIO,type='import_from_statement'\nline_star:2,line_end:2|char_star:0,char_end:23"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"from io import StringIO,type='import_from_statement'\nline_star:2,line_end:2|char_star:0,char_end:23";
"import pytest,type='import_statement'\nline_star:4,line_end:4|char_star:0,char_end:13"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import pytest,type='import_statement'\nline_star:4,line_end:4|char_star:0,char_end:13";
"from flask.logging import default_handler,type='import_from_statement'\nline_star:6,line_end:6|char_star:0,char_end:41"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"from flask.logging import default_handler,type='import_from_statement'\nline_star:6,line_end:6|char_star:0,char_end:41";
"from flask.logging import has_level_handler,type='import_from_statement'\nline_star:7,line_end:7|char_star:0,char_end:43"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"from flask.logging import has_level_handler,type='import_from_statement'\nline_star:7,line_end:7|char_star:0,char_end:43";
"from flask.logging import wsgi_errors_stream,type='import_from_statement'\nline_star:8,line_end:8|char_star:0,char_end:44"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"from flask.logging import wsgi_errors_stream,type='import_from_statement'\nline_star:8,line_end:8|char_star:0,char_end:44";
"@pytest.fixture(autouse=True)\ndef reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='decorated_definition'\nline_star:11,line_end:32|char_star:0,char_end:77"[shape="box",fillcolor="#c8c6a7",style=filled];
"MODULE"->"@pytest.fixture(autouse=True)\ndef reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='decorated_definition'\nline_star:11,line_end:32|char_star:0,char_end:77";
"@pytest.fixture(autouse=True),type='decorator'\nline_star:11,line_end:11|char_star:0,char_end:29"[shape="box",fillcolor="white",style=filled];
"@pytest.fixture(autouse=True)\ndef reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='decorated_definition'\nline_star:11,line_end:32|char_star:0,char_end:77"->"@pytest.fixture(autouse=True),type='decorator'\nline_star:11,line_end:11|char_star:0,char_end:29";
"def reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='function_definition'\nline_star:12,line_end:32|char_star:0,char_end:77"[shape="box",fillcolor="#cee6b4",style=filled];
"@pytest.fixture(autouse=True)\ndef reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='decorated_definition'\nline_star:11,line_end:32|char_star:0,char_end:77"->"def reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='function_definition'\nline_star:12,line_end:32|char_star:0,char_end:77";
"reset_logging,type='identifier'\nline_star:12,line_end:12|char_star:4,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"def reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='function_definition'\nline_star:12,line_end:32|char_star:0,char_end:77"->"reset_logging,type='identifier'\nline_star:12,line_end:12|char_star:4,char_end:17";
"(pytestconfig),type='parameters'\nline_star:12,line_end:12|char_star:17,char_end:31"[shape="box",fillcolor="white",style=filled];
"def reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='function_definition'\nline_star:12,line_end:32|char_star:0,char_end:77"->"(pytestconfig),type='parameters'\nline_star:12,line_end:12|char_star:17,char_end:31";
"pytestconfig,type='identifier'\nline_star:12,line_end:12|char_star:18,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"(pytestconfig),type='parameters'\nline_star:12,line_end:12|char_star:17,char_end:31"->"pytestconfig,type='identifier'\nline_star:12,line_end:12|char_star:18,char_end:30";
"type='INFORMATION BLOCK'\nline_star:13,line_end:32|char_star:4,char_end:77"[shape="point",fillcolor="#121013",style=filled];
"def reset_logging(pytestconfig):\n    root_handlers = logging.root.handlers[:]\n    logging.root.handlers = []\n    root_level = logging.root.level\n\n    logger = logging.getLogger('flask_test')\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    logging_plugin = pytestconfig.pluginmanager.unregister(name='logging-plugin')\n\n    yield\n\n    logging.root.handlers[:] = root_handlers\n    logging.root.setLevel(root_level)\n\n    logger.handlers = []\n    logger.setLevel(logging.NOTSET)\n\n    if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='function_definition'\nline_star:12,line_end:32|char_star:0,char_end:77"->"type='INFORMATION BLOCK'\nline_star:13,line_end:32|char_star:4,char_end:77";
"if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='if_statement'\nline_star:31,line_end:32|char_star:4,char_end:77"[shape="box",fillcolor="#9ecca4",style=filled];
"type='INFORMATION BLOCK'\nline_star:13,line_end:32|char_star:4,char_end:77"->"if logging_plugin:\n        pytestconfig.pluginmanager.register(logging_plugin, 'logging-plugin'),type='if_statement'\nline_star:31,line_end:32|char_star:4,char_end:77";
"def test_logger(app):\n    assert app.logger.name == 'flask_test'\n    assert app.logger.level == logging.NOTSET\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:35,line_end:38|char_star:0,char_end:51"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_logger(app):\n    assert app.logger.name == 'flask_test'\n    assert app.logger.level == logging.NOTSET\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:35,line_end:38|char_star:0,char_end:51";
"test_logger,type='identifier'\nline_star:35,line_end:35|char_star:4,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def test_logger(app):\n    assert app.logger.name == 'flask_test'\n    assert app.logger.level == logging.NOTSET\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:35,line_end:38|char_star:0,char_end:51"->"test_logger,type='identifier'\nline_star:35,line_end:35|char_star:4,char_end:15";
"(app),type='parameters'\nline_star:35,line_end:35|char_star:15,char_end:20"[shape="box",fillcolor="white",style=filled];
"def test_logger(app):\n    assert app.logger.name == 'flask_test'\n    assert app.logger.level == logging.NOTSET\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:35,line_end:38|char_star:0,char_end:51"->"(app),type='parameters'\nline_star:35,line_end:35|char_star:15,char_end:20";
"app,type='identifier'\nline_star:35,line_end:35|char_star:16,char_end:19"[shape="point",fillcolor="#121013",style=filled];
"(app),type='parameters'\nline_star:35,line_end:35|char_star:15,char_end:20"->"app,type='identifier'\nline_star:35,line_end:35|char_star:16,char_end:19";
"type='INFORMATION BLOCK'\nline_star:36,line_end:38|char_star:4,char_end:51"[shape="point",fillcolor="#121013",style=filled];
"def test_logger(app):\n    assert app.logger.name == 'flask_test'\n    assert app.logger.level == logging.NOTSET\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:35,line_end:38|char_star:0,char_end:51"->"type='INFORMATION BLOCK'\nline_star:36,line_end:38|char_star:4,char_end:51";
"assert app.logger.name == 'flask_test',type='assert_statement'\nline_star:36,line_end:36|char_star:4,char_end:42"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:36,line_end:38|char_star:4,char_end:51"->"assert app.logger.name == 'flask_test',type='assert_statement'\nline_star:36,line_end:36|char_star:4,char_end:42";
"app.logger.name == 'flask_test',type='comparison_operator'\nline_star:36,line_end:36|char_star:11,char_end:42"[shape="box",fillcolor="white",style=filled];
"assert app.logger.name == 'flask_test',type='assert_statement'\nline_star:36,line_end:36|char_star:4,char_end:42"->"app.logger.name == 'flask_test',type='comparison_operator'\nline_star:36,line_end:36|char_star:11,char_end:42";
"app.logger.name,type='attribute'\nline_star:36,line_end:36|char_star:11,char_end:26"[shape="box",fillcolor="white",style=filled];
"app.logger.name == 'flask_test',type='comparison_operator'\nline_star:36,line_end:36|char_star:11,char_end:42"->"app.logger.name,type='attribute'\nline_star:36,line_end:36|char_star:11,char_end:26";
"app.logger,type='attribute'\nline_star:36,line_end:36|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"app.logger.name,type='attribute'\nline_star:36,line_end:36|char_star:11,char_end:26"->"app.logger,type='attribute'\nline_star:36,line_end:36|char_star:11,char_end:21";
"app,type='identifier'\nline_star:36,line_end:36|char_star:11,char_end:14"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:36,line_end:36|char_star:11,char_end:21"->"app,type='identifier'\nline_star:36,line_end:36|char_star:11,char_end:14";
"logger,type='identifier'\nline_star:36,line_end:36|char_star:15,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:36,line_end:36|char_star:11,char_end:21"->"logger,type='identifier'\nline_star:36,line_end:36|char_star:15,char_end:21";
"name,type='identifier'\nline_star:36,line_end:36|char_star:22,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"app.logger.name,type='attribute'\nline_star:36,line_end:36|char_star:11,char_end:26"->"name,type='identifier'\nline_star:36,line_end:36|char_star:22,char_end:26";
"assert app.logger.level == logging.NOTSET,type='assert_statement'\nline_star:37,line_end:37|char_star:4,char_end:45"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:36,line_end:38|char_star:4,char_end:51"->"assert app.logger.level == logging.NOTSET,type='assert_statement'\nline_star:37,line_end:37|char_star:4,char_end:45";
"app.logger.level == logging.NOTSET,type='comparison_operator'\nline_star:37,line_end:37|char_star:11,char_end:45"[shape="box",fillcolor="white",style=filled];
"assert app.logger.level == logging.NOTSET,type='assert_statement'\nline_star:37,line_end:37|char_star:4,char_end:45"->"app.logger.level == logging.NOTSET,type='comparison_operator'\nline_star:37,line_end:37|char_star:11,char_end:45";
"app.logger.level,type='attribute'\nline_star:37,line_end:37|char_star:11,char_end:27"[shape="box",fillcolor="white",style=filled];
"app.logger.level == logging.NOTSET,type='comparison_operator'\nline_star:37,line_end:37|char_star:11,char_end:45"->"app.logger.level,type='attribute'\nline_star:37,line_end:37|char_star:11,char_end:27";
"app.logger,type='attribute'\nline_star:37,line_end:37|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"app.logger.level,type='attribute'\nline_star:37,line_end:37|char_star:11,char_end:27"->"app.logger,type='attribute'\nline_star:37,line_end:37|char_star:11,char_end:21";
"app,type='identifier'\nline_star:37,line_end:37|char_star:11,char_end:14"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:37,line_end:37|char_star:11,char_end:21"->"app,type='identifier'\nline_star:37,line_end:37|char_star:11,char_end:14";
"logger,type='identifier'\nline_star:37,line_end:37|char_star:15,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:37,line_end:37|char_star:11,char_end:21"->"logger,type='identifier'\nline_star:37,line_end:37|char_star:15,char_end:21";
"level,type='identifier'\nline_star:37,line_end:37|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"app.logger.level,type='attribute'\nline_star:37,line_end:37|char_star:11,char_end:27"->"level,type='identifier'\nline_star:37,line_end:37|char_star:22,char_end:27";
"logging.NOTSET,type='attribute'\nline_star:37,line_end:37|char_star:31,char_end:45"[shape="box",fillcolor="white",style=filled];
"app.logger.level == logging.NOTSET,type='comparison_operator'\nline_star:37,line_end:37|char_star:11,char_end:45"->"logging.NOTSET,type='attribute'\nline_star:37,line_end:37|char_star:31,char_end:45";
"logging,type='identifier'\nline_star:37,line_end:37|char_star:31,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"logging.NOTSET,type='attribute'\nline_star:37,line_end:37|char_star:31,char_end:45"->"logging,type='identifier'\nline_star:37,line_end:37|char_star:31,char_end:38";
"NOTSET,type='identifier'\nline_star:37,line_end:37|char_star:39,char_end:45"[shape="point",fillcolor="#121013",style=filled];
"logging.NOTSET,type='attribute'\nline_star:37,line_end:37|char_star:31,char_end:45"->"NOTSET,type='identifier'\nline_star:37,line_end:37|char_star:39,char_end:45";
"assert app.logger.handlers == [default_handler],type='assert_statement'\nline_star:38,line_end:38|char_star:4,char_end:51"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:36,line_end:38|char_star:4,char_end:51"->"assert app.logger.handlers == [default_handler],type='assert_statement'\nline_star:38,line_end:38|char_star:4,char_end:51";
"app.logger.handlers == [default_handler],type='comparison_operator'\nline_star:38,line_end:38|char_star:11,char_end:51"[shape="box",fillcolor="white",style=filled];
"assert app.logger.handlers == [default_handler],type='assert_statement'\nline_star:38,line_end:38|char_star:4,char_end:51"->"app.logger.handlers == [default_handler],type='comparison_operator'\nline_star:38,line_end:38|char_star:11,char_end:51";
"app.logger.handlers,type='attribute'\nline_star:38,line_end:38|char_star:11,char_end:30"[shape="box",fillcolor="white",style=filled];
"app.logger.handlers == [default_handler],type='comparison_operator'\nline_star:38,line_end:38|char_star:11,char_end:51"->"app.logger.handlers,type='attribute'\nline_star:38,line_end:38|char_star:11,char_end:30";
"app.logger,type='attribute'\nline_star:38,line_end:38|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"app.logger.handlers,type='attribute'\nline_star:38,line_end:38|char_star:11,char_end:30"->"app.logger,type='attribute'\nline_star:38,line_end:38|char_star:11,char_end:21";
"app,type='identifier'\nline_star:38,line_end:38|char_star:11,char_end:14"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:38,line_end:38|char_star:11,char_end:21"->"app,type='identifier'\nline_star:38,line_end:38|char_star:11,char_end:14";
"logger,type='identifier'\nline_star:38,line_end:38|char_star:15,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:38,line_end:38|char_star:11,char_end:21"->"logger,type='identifier'\nline_star:38,line_end:38|char_star:15,char_end:21";
"handlers,type='identifier'\nline_star:38,line_end:38|char_star:22,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"app.logger.handlers,type='attribute'\nline_star:38,line_end:38|char_star:11,char_end:30"->"handlers,type='identifier'\nline_star:38,line_end:38|char_star:22,char_end:30";
"[default_handler],type='list'\nline_star:38,line_end:38|char_star:34,char_end:51"[shape="box",fillcolor="white",style=filled];
"app.logger.handlers == [default_handler],type='comparison_operator'\nline_star:38,line_end:38|char_star:11,char_end:51"->"[default_handler],type='list'\nline_star:38,line_end:38|char_star:34,char_end:51";
"default_handler,type='identifier'\nline_star:38,line_end:38|char_star:35,char_end:50"[shape="point",fillcolor="#121013",style=filled];
"[default_handler],type='list'\nline_star:38,line_end:38|char_star:34,char_end:51"->"default_handler,type='identifier'\nline_star:38,line_end:38|char_star:35,char_end:50";
"def test_logger_debug(app):\n    app.debug = True\n    assert app.logger.level == logging.DEBUG\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:41,line_end:44|char_star:0,char_end:51"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_logger_debug(app):\n    app.debug = True\n    assert app.logger.level == logging.DEBUG\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:41,line_end:44|char_star:0,char_end:51";
"test_logger_debug,type='identifier'\nline_star:41,line_end:41|char_star:4,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"def test_logger_debug(app):\n    app.debug = True\n    assert app.logger.level == logging.DEBUG\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:41,line_end:44|char_star:0,char_end:51"->"test_logger_debug,type='identifier'\nline_star:41,line_end:41|char_star:4,char_end:21";
"(app),type='parameters'\nline_star:41,line_end:41|char_star:21,char_end:26"[shape="box",fillcolor="white",style=filled];
"def test_logger_debug(app):\n    app.debug = True\n    assert app.logger.level == logging.DEBUG\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:41,line_end:44|char_star:0,char_end:51"->"(app),type='parameters'\nline_star:41,line_end:41|char_star:21,char_end:26";
"app,type='identifier'\nline_star:41,line_end:41|char_star:22,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"(app),type='parameters'\nline_star:41,line_end:41|char_star:21,char_end:26"->"app,type='identifier'\nline_star:41,line_end:41|char_star:22,char_end:25";
"type='INFORMATION BLOCK'\nline_star:42,line_end:44|char_star:4,char_end:51"[shape="point",fillcolor="#121013",style=filled];
"def test_logger_debug(app):\n    app.debug = True\n    assert app.logger.level == logging.DEBUG\n    assert app.logger.handlers == [default_handler],type='function_definition'\nline_star:41,line_end:44|char_star:0,char_end:51"->"type='INFORMATION BLOCK'\nline_star:42,line_end:44|char_star:4,char_end:51";
"assert app.logger.level == logging.DEBUG,type='assert_statement'\nline_star:43,line_end:43|char_star:4,char_end:44"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:42,line_end:44|char_star:4,char_end:51"->"assert app.logger.level == logging.DEBUG,type='assert_statement'\nline_star:43,line_end:43|char_star:4,char_end:44";
"app.logger.level == logging.DEBUG,type='comparison_operator'\nline_star:43,line_end:43|char_star:11,char_end:44"[shape="box",fillcolor="white",style=filled];
"assert app.logger.level == logging.DEBUG,type='assert_statement'\nline_star:43,line_end:43|char_star:4,char_end:44"->"app.logger.level == logging.DEBUG,type='comparison_operator'\nline_star:43,line_end:43|char_star:11,char_end:44";
"app.logger.level,type='attribute'\nline_star:43,line_end:43|char_star:11,char_end:27"[shape="box",fillcolor="white",style=filled];
"app.logger.level == logging.DEBUG,type='comparison_operator'\nline_star:43,line_end:43|char_star:11,char_end:44"->"app.logger.level,type='attribute'\nline_star:43,line_end:43|char_star:11,char_end:27";
"app.logger,type='attribute'\nline_star:43,line_end:43|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"app.logger.level,type='attribute'\nline_star:43,line_end:43|char_star:11,char_end:27"->"app.logger,type='attribute'\nline_star:43,line_end:43|char_star:11,char_end:21";
"app,type='identifier'\nline_star:43,line_end:43|char_star:11,char_end:14"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:43,line_end:43|char_star:11,char_end:21"->"app,type='identifier'\nline_star:43,line_end:43|char_star:11,char_end:14";
"logger,type='identifier'\nline_star:43,line_end:43|char_star:15,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:43,line_end:43|char_star:11,char_end:21"->"logger,type='identifier'\nline_star:43,line_end:43|char_star:15,char_end:21";
"level,type='identifier'\nline_star:43,line_end:43|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"app.logger.level,type='attribute'\nline_star:43,line_end:43|char_star:11,char_end:27"->"level,type='identifier'\nline_star:43,line_end:43|char_star:22,char_end:27";
"logging.DEBUG,type='attribute'\nline_star:43,line_end:43|char_star:31,char_end:44"[shape="box",fillcolor="white",style=filled];
"app.logger.level == logging.DEBUG,type='comparison_operator'\nline_star:43,line_end:43|char_star:11,char_end:44"->"logging.DEBUG,type='attribute'\nline_star:43,line_end:43|char_star:31,char_end:44";
"logging,type='identifier'\nline_star:43,line_end:43|char_star:31,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"logging.DEBUG,type='attribute'\nline_star:43,line_end:43|char_star:31,char_end:44"->"logging,type='identifier'\nline_star:43,line_end:43|char_star:31,char_end:38";
"DEBUG,type='identifier'\nline_star:43,line_end:43|char_star:39,char_end:44"[shape="point",fillcolor="#121013",style=filled];
"logging.DEBUG,type='attribute'\nline_star:43,line_end:43|char_star:31,char_end:44"->"DEBUG,type='identifier'\nline_star:43,line_end:43|char_star:39,char_end:44";
"assert app.logger.handlers == [default_handler],type='assert_statement'\nline_star:44,line_end:44|char_star:4,char_end:51"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:42,line_end:44|char_star:4,char_end:51"->"assert app.logger.handlers == [default_handler],type='assert_statement'\nline_star:44,line_end:44|char_star:4,char_end:51";
"app.logger.handlers == [default_handler],type='comparison_operator'\nline_star:44,line_end:44|char_star:11,char_end:51"[shape="box",fillcolor="white",style=filled];
"assert app.logger.handlers == [default_handler],type='assert_statement'\nline_star:44,line_end:44|char_star:4,char_end:51"->"app.logger.handlers == [default_handler],type='comparison_operator'\nline_star:44,line_end:44|char_star:11,char_end:51";
"app.logger.handlers,type='attribute'\nline_star:44,line_end:44|char_star:11,char_end:30"[shape="box",fillcolor="white",style=filled];
"app.logger.handlers == [default_handler],type='comparison_operator'\nline_star:44,line_end:44|char_star:11,char_end:51"->"app.logger.handlers,type='attribute'\nline_star:44,line_end:44|char_star:11,char_end:30";
"app.logger,type='attribute'\nline_star:44,line_end:44|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"app.logger.handlers,type='attribute'\nline_star:44,line_end:44|char_star:11,char_end:30"->"app.logger,type='attribute'\nline_star:44,line_end:44|char_star:11,char_end:21";
"app,type='identifier'\nline_star:44,line_end:44|char_star:11,char_end:14"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:44,line_end:44|char_star:11,char_end:21"->"app,type='identifier'\nline_star:44,line_end:44|char_star:11,char_end:14";
"logger,type='identifier'\nline_star:44,line_end:44|char_star:15,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:44,line_end:44|char_star:11,char_end:21"->"logger,type='identifier'\nline_star:44,line_end:44|char_star:15,char_end:21";
"handlers,type='identifier'\nline_star:44,line_end:44|char_star:22,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"app.logger.handlers,type='attribute'\nline_star:44,line_end:44|char_star:11,char_end:30"->"handlers,type='identifier'\nline_star:44,line_end:44|char_star:22,char_end:30";
"[default_handler],type='list'\nline_star:44,line_end:44|char_star:34,char_end:51"[shape="box",fillcolor="white",style=filled];
"app.logger.handlers == [default_handler],type='comparison_operator'\nline_star:44,line_end:44|char_star:11,char_end:51"->"[default_handler],type='list'\nline_star:44,line_end:44|char_star:34,char_end:51";
"default_handler,type='identifier'\nline_star:44,line_end:44|char_star:35,char_end:50"[shape="point",fillcolor="#121013",style=filled];
"[default_handler],type='list'\nline_star:44,line_end:44|char_star:34,char_end:51"->"default_handler,type='identifier'\nline_star:44,line_end:44|char_star:35,char_end:50";
"def test_existing_handler(app):\n    logging.root.addHandler(logging.StreamHandler())\n    assert app.logger.level == logging.NOTSET\n    assert not app.logger.handlers,type='function_definition'\nline_star:47,line_end:50|char_star:0,char_end:34"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_existing_handler(app):\n    logging.root.addHandler(logging.StreamHandler())\n    assert app.logger.level == logging.NOTSET\n    assert not app.logger.handlers,type='function_definition'\nline_star:47,line_end:50|char_star:0,char_end:34";
"test_existing_handler,type='identifier'\nline_star:47,line_end:47|char_star:4,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"def test_existing_handler(app):\n    logging.root.addHandler(logging.StreamHandler())\n    assert app.logger.level == logging.NOTSET\n    assert not app.logger.handlers,type='function_definition'\nline_star:47,line_end:50|char_star:0,char_end:34"->"test_existing_handler,type='identifier'\nline_star:47,line_end:47|char_star:4,char_end:25";
"(app),type='parameters'\nline_star:47,line_end:47|char_star:25,char_end:30"[shape="box",fillcolor="white",style=filled];
"def test_existing_handler(app):\n    logging.root.addHandler(logging.StreamHandler())\n    assert app.logger.level == logging.NOTSET\n    assert not app.logger.handlers,type='function_definition'\nline_star:47,line_end:50|char_star:0,char_end:34"->"(app),type='parameters'\nline_star:47,line_end:47|char_star:25,char_end:30";
"app,type='identifier'\nline_star:47,line_end:47|char_star:26,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"(app),type='parameters'\nline_star:47,line_end:47|char_star:25,char_end:30"->"app,type='identifier'\nline_star:47,line_end:47|char_star:26,char_end:29";
"type='INFORMATION BLOCK'\nline_star:48,line_end:50|char_star:4,char_end:34"[shape="point",fillcolor="#121013",style=filled];
"def test_existing_handler(app):\n    logging.root.addHandler(logging.StreamHandler())\n    assert app.logger.level == logging.NOTSET\n    assert not app.logger.handlers,type='function_definition'\nline_star:47,line_end:50|char_star:0,char_end:34"->"type='INFORMATION BLOCK'\nline_star:48,line_end:50|char_star:4,char_end:34";
"assert app.logger.level == logging.NOTSET,type='assert_statement'\nline_star:49,line_end:49|char_star:4,char_end:45"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:48,line_end:50|char_star:4,char_end:34"->"assert app.logger.level == logging.NOTSET,type='assert_statement'\nline_star:49,line_end:49|char_star:4,char_end:45";
"app.logger.level == logging.NOTSET,type='comparison_operator'\nline_star:49,line_end:49|char_star:11,char_end:45"[shape="box",fillcolor="white",style=filled];
"assert app.logger.level == logging.NOTSET,type='assert_statement'\nline_star:49,line_end:49|char_star:4,char_end:45"->"app.logger.level == logging.NOTSET,type='comparison_operator'\nline_star:49,line_end:49|char_star:11,char_end:45";
"app.logger.level,type='attribute'\nline_star:49,line_end:49|char_star:11,char_end:27"[shape="box",fillcolor="white",style=filled];
"app.logger.level == logging.NOTSET,type='comparison_operator'\nline_star:49,line_end:49|char_star:11,char_end:45"->"app.logger.level,type='attribute'\nline_star:49,line_end:49|char_star:11,char_end:27";
"app.logger,type='attribute'\nline_star:49,line_end:49|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"app.logger.level,type='attribute'\nline_star:49,line_end:49|char_star:11,char_end:27"->"app.logger,type='attribute'\nline_star:49,line_end:49|char_star:11,char_end:21";
"app,type='identifier'\nline_star:49,line_end:49|char_star:11,char_end:14"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:49,line_end:49|char_star:11,char_end:21"->"app,type='identifier'\nline_star:49,line_end:49|char_star:11,char_end:14";
"logger,type='identifier'\nline_star:49,line_end:49|char_star:15,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:49,line_end:49|char_star:11,char_end:21"->"logger,type='identifier'\nline_star:49,line_end:49|char_star:15,char_end:21";
"level,type='identifier'\nline_star:49,line_end:49|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"app.logger.level,type='attribute'\nline_star:49,line_end:49|char_star:11,char_end:27"->"level,type='identifier'\nline_star:49,line_end:49|char_star:22,char_end:27";
"logging.NOTSET,type='attribute'\nline_star:49,line_end:49|char_star:31,char_end:45"[shape="box",fillcolor="white",style=filled];
"app.logger.level == logging.NOTSET,type='comparison_operator'\nline_star:49,line_end:49|char_star:11,char_end:45"->"logging.NOTSET,type='attribute'\nline_star:49,line_end:49|char_star:31,char_end:45";
"logging,type='identifier'\nline_star:49,line_end:49|char_star:31,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"logging.NOTSET,type='attribute'\nline_star:49,line_end:49|char_star:31,char_end:45"->"logging,type='identifier'\nline_star:49,line_end:49|char_star:31,char_end:38";
"NOTSET,type='identifier'\nline_star:49,line_end:49|char_star:39,char_end:45"[shape="point",fillcolor="#121013",style=filled];
"logging.NOTSET,type='attribute'\nline_star:49,line_end:49|char_star:31,char_end:45"->"NOTSET,type='identifier'\nline_star:49,line_end:49|char_star:39,char_end:45";
"assert not app.logger.handlers,type='assert_statement'\nline_star:50,line_end:50|char_star:4,char_end:34"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:48,line_end:50|char_star:4,char_end:34"->"assert not app.logger.handlers,type='assert_statement'\nline_star:50,line_end:50|char_star:4,char_end:34";
"not app.logger.handlers,type='not_operator'\nline_star:50,line_end:50|char_star:11,char_end:34"[shape="box",fillcolor="white",style=filled];
"assert not app.logger.handlers,type='assert_statement'\nline_star:50,line_end:50|char_star:4,char_end:34"->"not app.logger.handlers,type='not_operator'\nline_star:50,line_end:50|char_star:11,char_end:34";
"app.logger.handlers,type='attribute'\nline_star:50,line_end:50|char_star:15,char_end:34"[shape="box",fillcolor="white",style=filled];
"not app.logger.handlers,type='not_operator'\nline_star:50,line_end:50|char_star:11,char_end:34"->"app.logger.handlers,type='attribute'\nline_star:50,line_end:50|char_star:15,char_end:34";
"app.logger,type='attribute'\nline_star:50,line_end:50|char_star:15,char_end:25"[shape="box",fillcolor="white",style=filled];
"app.logger.handlers,type='attribute'\nline_star:50,line_end:50|char_star:15,char_end:34"->"app.logger,type='attribute'\nline_star:50,line_end:50|char_star:15,char_end:25";
"app,type='identifier'\nline_star:50,line_end:50|char_star:15,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:50,line_end:50|char_star:15,char_end:25"->"app,type='identifier'\nline_star:50,line_end:50|char_star:15,char_end:18";
"logger,type='identifier'\nline_star:50,line_end:50|char_star:19,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"app.logger,type='attribute'\nline_star:50,line_end:50|char_star:15,char_end:25"->"logger,type='identifier'\nline_star:50,line_end:50|char_star:19,char_end:25";
"handlers,type='identifier'\nline_star:50,line_end:50|char_star:26,char_end:34"[shape="point",fillcolor="#121013",style=filled];
"app.logger.handlers,type='attribute'\nline_star:50,line_end:50|char_star:15,char_end:34"->"handlers,type='identifier'\nline_star:50,line_end:50|char_star:26,char_end:34";
"def test_wsgi_errors_stream(app, client):\n    @app.route('/')\n    def index():\n        app.logger.error('test')\n        return ''\n\n    stream = StringIO()\n    client.get('/', errors_stream=stream)\n    assert 'ERROR in test_logging: test' in stream.getvalue()\n\n    assert wsgi_errors_stream._get_current_object() is sys.stderr\n\n    with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='function_definition'\nline_star:53,line_end:66|char_star:0,char_end:65"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_wsgi_errors_stream(app, client):\n    @app.route('/')\n    def index():\n        app.logger.error('test')\n        return ''\n\n    stream = StringIO()\n    client.get('/', errors_stream=stream)\n    assert 'ERROR in test_logging: test' in stream.getvalue()\n\n    assert wsgi_errors_stream._get_current_object() is sys.stderr\n\n    with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='function_definition'\nline_star:53,line_end:66|char_star:0,char_end:65";
"test_wsgi_errors_stream,type='identifier'\nline_star:53,line_end:53|char_star:4,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"def test_wsgi_errors_stream(app, client):\n    @app.route('/')\n    def index():\n        app.logger.error('test')\n        return ''\n\n    stream = StringIO()\n    client.get('/', errors_stream=stream)\n    assert 'ERROR in test_logging: test' in stream.getvalue()\n\n    assert wsgi_errors_stream._get_current_object() is sys.stderr\n\n    with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='function_definition'\nline_star:53,line_end:66|char_star:0,char_end:65"->"test_wsgi_errors_stream,type='identifier'\nline_star:53,line_end:53|char_star:4,char_end:27";
"(app, client),type='parameters'\nline_star:53,line_end:53|char_star:27,char_end:40"[shape="box",fillcolor="white",style=filled];
"def test_wsgi_errors_stream(app, client):\n    @app.route('/')\n    def index():\n        app.logger.error('test')\n        return ''\n\n    stream = StringIO()\n    client.get('/', errors_stream=stream)\n    assert 'ERROR in test_logging: test' in stream.getvalue()\n\n    assert wsgi_errors_stream._get_current_object() is sys.stderr\n\n    with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='function_definition'\nline_star:53,line_end:66|char_star:0,char_end:65"->"(app, client),type='parameters'\nline_star:53,line_end:53|char_star:27,char_end:40";
"app,type='identifier'\nline_star:53,line_end:53|char_star:28,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:53,line_end:53|char_star:27,char_end:40"->"app,type='identifier'\nline_star:53,line_end:53|char_star:28,char_end:31";
"client,type='identifier'\nline_star:53,line_end:53|char_star:33,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:53,line_end:53|char_star:27,char_end:40"->"client,type='identifier'\nline_star:53,line_end:53|char_star:33,char_end:39";
"type='INFORMATION BLOCK'\nline_star:54,line_end:66|char_star:4,char_end:65"[shape="point",fillcolor="#121013",style=filled];
"def test_wsgi_errors_stream(app, client):\n    @app.route('/')\n    def index():\n        app.logger.error('test')\n        return ''\n\n    stream = StringIO()\n    client.get('/', errors_stream=stream)\n    assert 'ERROR in test_logging: test' in stream.getvalue()\n\n    assert wsgi_errors_stream._get_current_object() is sys.stderr\n\n    with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='function_definition'\nline_star:53,line_end:66|char_star:0,char_end:65"->"type='INFORMATION BLOCK'\nline_star:54,line_end:66|char_star:4,char_end:65";
"@app.route('/')\n    def index():\n        app.logger.error('test')\n        return '',type='decorated_definition'\nline_star:54,line_end:57|char_star:4,char_end:17"[shape="box",fillcolor="#c8c6a7",style=filled];
"type='INFORMATION BLOCK'\nline_star:54,line_end:66|char_star:4,char_end:65"->"@app.route('/')\n    def index():\n        app.logger.error('test')\n        return '',type='decorated_definition'\nline_star:54,line_end:57|char_star:4,char_end:17";
"@app.route('/'),type='decorator'\nline_star:54,line_end:54|char_star:4,char_end:19"[shape="box",fillcolor="white",style=filled];
"@app.route('/')\n    def index():\n        app.logger.error('test')\n        return '',type='decorated_definition'\nline_star:54,line_end:57|char_star:4,char_end:17"->"@app.route('/'),type='decorator'\nline_star:54,line_end:54|char_star:4,char_end:19";
"def index():\n        app.logger.error('test')\n        return '',type='function_definition'\nline_star:55,line_end:57|char_star:4,char_end:17"[shape="box",fillcolor="#cee6b4",style=filled];
"@app.route('/')\n    def index():\n        app.logger.error('test')\n        return '',type='decorated_definition'\nline_star:54,line_end:57|char_star:4,char_end:17"->"def index():\n        app.logger.error('test')\n        return '',type='function_definition'\nline_star:55,line_end:57|char_star:4,char_end:17";
"index,type='identifier'\nline_star:55,line_end:55|char_star:8,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"def index():\n        app.logger.error('test')\n        return '',type='function_definition'\nline_star:55,line_end:57|char_star:4,char_end:17"->"index,type='identifier'\nline_star:55,line_end:55|char_star:8,char_end:13";
"type='INFORMATION BLOCK'\nline_star:56,line_end:57|char_star:8,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"def index():\n        app.logger.error('test')\n        return '',type='function_definition'\nline_star:55,line_end:57|char_star:4,char_end:17"->"type='INFORMATION BLOCK'\nline_star:56,line_end:57|char_star:8,char_end:17";
"return '',type='return_statement'\nline_star:57,line_end:57|char_star:8,char_end:17"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:56,line_end:57|char_star:8,char_end:17"->"return '',type='return_statement'\nline_star:57,line_end:57|char_star:8,char_end:17";
"assert 'ERROR in test_logging: test' in stream.getvalue(),type='assert_statement'\nline_star:61,line_end:61|char_star:4,char_end:61"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:54,line_end:66|char_star:4,char_end:65"->"assert 'ERROR in test_logging: test' in stream.getvalue(),type='assert_statement'\nline_star:61,line_end:61|char_star:4,char_end:61";
"'ERROR in test_logging: test' in stream.getvalue(),type='comparison_operator'\nline_star:61,line_end:61|char_star:11,char_end:61"[shape="box",fillcolor="white",style=filled];
"assert 'ERROR in test_logging: test' in stream.getvalue(),type='assert_statement'\nline_star:61,line_end:61|char_star:4,char_end:61"->"'ERROR in test_logging: test' in stream.getvalue(),type='comparison_operator'\nline_star:61,line_end:61|char_star:11,char_end:61";
"stream.getvalue(),type='call'\nline_star:61,line_end:61|char_star:44,char_end:61"[shape="box",fillcolor="white",style=filled];
"'ERROR in test_logging: test' in stream.getvalue(),type='comparison_operator'\nline_star:61,line_end:61|char_star:11,char_end:61"->"stream.getvalue(),type='call'\nline_star:61,line_end:61|char_star:44,char_end:61";
"stream.getvalue,type='attribute'\nline_star:61,line_end:61|char_star:44,char_end:59"[shape="box",fillcolor="white",style=filled];
"stream.getvalue(),type='call'\nline_star:61,line_end:61|char_star:44,char_end:61"->"stream.getvalue,type='attribute'\nline_star:61,line_end:61|char_star:44,char_end:59";
"stream,type='identifier'\nline_star:61,line_end:61|char_star:44,char_end:50"[shape="point",fillcolor="#121013",style=filled];
"stream.getvalue,type='attribute'\nline_star:61,line_end:61|char_star:44,char_end:59"->"stream,type='identifier'\nline_star:61,line_end:61|char_star:44,char_end:50";
"getvalue,type='identifier'\nline_star:61,line_end:61|char_star:51,char_end:59"[shape="point",fillcolor="#121013",style=filled];
"stream.getvalue,type='attribute'\nline_star:61,line_end:61|char_star:44,char_end:59"->"getvalue,type='identifier'\nline_star:61,line_end:61|char_star:51,char_end:59";
"assert wsgi_errors_stream._get_current_object() is sys.stderr,type='assert_statement'\nline_star:63,line_end:63|char_star:4,char_end:65"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:54,line_end:66|char_star:4,char_end:65"->"assert wsgi_errors_stream._get_current_object() is sys.stderr,type='assert_statement'\nline_star:63,line_end:63|char_star:4,char_end:65";
"wsgi_errors_stream._get_current_object() is sys.stderr,type='comparison_operator'\nline_star:63,line_end:63|char_star:11,char_end:65"[shape="box",fillcolor="white",style=filled];
"assert wsgi_errors_stream._get_current_object() is sys.stderr,type='assert_statement'\nline_star:63,line_end:63|char_star:4,char_end:65"->"wsgi_errors_stream._get_current_object() is sys.stderr,type='comparison_operator'\nline_star:63,line_end:63|char_star:11,char_end:65";
"wsgi_errors_stream._get_current_object(),type='call'\nline_star:63,line_end:63|char_star:11,char_end:51"[shape="box",fillcolor="white",style=filled];
"wsgi_errors_stream._get_current_object() is sys.stderr,type='comparison_operator'\nline_star:63,line_end:63|char_star:11,char_end:65"->"wsgi_errors_stream._get_current_object(),type='call'\nline_star:63,line_end:63|char_star:11,char_end:51";
"wsgi_errors_stream._get_current_object,type='attribute'\nline_star:63,line_end:63|char_star:11,char_end:49"[shape="box",fillcolor="white",style=filled];
"wsgi_errors_stream._get_current_object(),type='call'\nline_star:63,line_end:63|char_star:11,char_end:51"->"wsgi_errors_stream._get_current_object,type='attribute'\nline_star:63,line_end:63|char_star:11,char_end:49";
"wsgi_errors_stream,type='identifier'\nline_star:63,line_end:63|char_star:11,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"wsgi_errors_stream._get_current_object,type='attribute'\nline_star:63,line_end:63|char_star:11,char_end:49"->"wsgi_errors_stream,type='identifier'\nline_star:63,line_end:63|char_star:11,char_end:29";
"_get_current_object,type='identifier'\nline_star:63,line_end:63|char_star:30,char_end:49"[shape="point",fillcolor="#121013",style=filled];
"wsgi_errors_stream._get_current_object,type='attribute'\nline_star:63,line_end:63|char_star:11,char_end:49"->"_get_current_object,type='identifier'\nline_star:63,line_end:63|char_star:30,char_end:49";
"sys.stderr,type='attribute'\nline_star:63,line_end:63|char_star:55,char_end:65"[shape="box",fillcolor="white",style=filled];
"wsgi_errors_stream._get_current_object() is sys.stderr,type='comparison_operator'\nline_star:63,line_end:63|char_star:11,char_end:65"->"sys.stderr,type='attribute'\nline_star:63,line_end:63|char_star:55,char_end:65";
"sys,type='identifier'\nline_star:63,line_end:63|char_star:55,char_end:58"[shape="point",fillcolor="#121013",style=filled];
"sys.stderr,type='attribute'\nline_star:63,line_end:63|char_star:55,char_end:65"->"sys,type='identifier'\nline_star:63,line_end:63|char_star:55,char_end:58";
"stderr,type='identifier'\nline_star:63,line_end:63|char_star:59,char_end:65"[shape="point",fillcolor="#121013",style=filled];
"sys.stderr,type='attribute'\nline_star:63,line_end:63|char_star:55,char_end:65"->"stderr,type='identifier'\nline_star:63,line_end:63|char_star:59,char_end:65";
"with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='with_statement'\nline_star:65,line_end:66|char_star:4,char_end:65"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:54,line_end:66|char_star:4,char_end:65"->"with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='with_statement'\nline_star:65,line_end:66|char_star:4,char_end:65";
"app.test_request_context(errors_stream=stream),type='with_clause'\nline_star:65,line_end:65|char_star:9,char_end:55"[shape="box",fillcolor="white",style=filled];
"with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='with_statement'\nline_star:65,line_end:66|char_star:4,char_end:65"->"app.test_request_context(errors_stream=stream),type='with_clause'\nline_star:65,line_end:65|char_star:9,char_end:55";
"type='INFORMATION BLOCK'\nline_star:66,line_end:66|char_star:8,char_end:65"[shape="point",fillcolor="#121013",style=filled];
"with app.test_request_context(errors_stream=stream):\n        assert wsgi_errors_stream._get_current_object() is stream,type='with_statement'\nline_star:65,line_end:66|char_star:4,char_end:65"->"type='INFORMATION BLOCK'\nline_star:66,line_end:66|char_star:8,char_end:65";
"assert wsgi_errors_stream._get_current_object() is stream,type='assert_statement'\nline_star:66,line_end:66|char_star:8,char_end:65"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:66,line_end:66|char_star:8,char_end:65"->"assert wsgi_errors_stream._get_current_object() is stream,type='assert_statement'\nline_star:66,line_end:66|char_star:8,char_end:65";
"wsgi_errors_stream._get_current_object() is stream,type='comparison_operator'\nline_star:66,line_end:66|char_star:15,char_end:65"[shape="box",fillcolor="white",style=filled];
"assert wsgi_errors_stream._get_current_object() is stream,type='assert_statement'\nline_star:66,line_end:66|char_star:8,char_end:65"->"wsgi_errors_stream._get_current_object() is stream,type='comparison_operator'\nline_star:66,line_end:66|char_star:15,char_end:65";
"wsgi_errors_stream._get_current_object(),type='call'\nline_star:66,line_end:66|char_star:15,char_end:55"[shape="box",fillcolor="white",style=filled];
"wsgi_errors_stream._get_current_object() is stream,type='comparison_operator'\nline_star:66,line_end:66|char_star:15,char_end:65"->"wsgi_errors_stream._get_current_object(),type='call'\nline_star:66,line_end:66|char_star:15,char_end:55";
"wsgi_errors_stream._get_current_object,type='attribute'\nline_star:66,line_end:66|char_star:15,char_end:53"[shape="box",fillcolor="white",style=filled];
"wsgi_errors_stream._get_current_object(),type='call'\nline_star:66,line_end:66|char_star:15,char_end:55"->"wsgi_errors_stream._get_current_object,type='attribute'\nline_star:66,line_end:66|char_star:15,char_end:53";
"wsgi_errors_stream,type='identifier'\nline_star:66,line_end:66|char_star:15,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"wsgi_errors_stream._get_current_object,type='attribute'\nline_star:66,line_end:66|char_star:15,char_end:53"->"wsgi_errors_stream,type='identifier'\nline_star:66,line_end:66|char_star:15,char_end:33";
"_get_current_object,type='identifier'\nline_star:66,line_end:66|char_star:34,char_end:53"[shape="point",fillcolor="#121013",style=filled];
"wsgi_errors_stream._get_current_object,type='attribute'\nline_star:66,line_end:66|char_star:15,char_end:53"->"_get_current_object,type='identifier'\nline_star:66,line_end:66|char_star:34,char_end:53";
"stream,type='identifier'\nline_star:66,line_end:66|char_star:59,char_end:65"[shape="point",fillcolor="#121013",style=filled];
"wsgi_errors_stream._get_current_object() is stream,type='comparison_operator'\nline_star:66,line_end:66|char_star:15,char_end:65"->"stream,type='identifier'\nline_star:66,line_end:66|char_star:59,char_end:65";
"def test_has_level_handler():\n    logger = logging.getLogger('flask.app')\n    assert not has_level_handler(logger)\n\n    handler = logging.StreamHandler()\n    logging.root.addHandler(handler)\n    assert has_level_handler(logger)\n\n    logger.propagate = False\n    assert not has_level_handler(logger)\n    logger.propagate = True\n\n    handler.setLevel(logging.ERROR)\n    assert not has_level_handler(logger),type='function_definition'\nline_star:69,line_end:82|char_star:0,char_end:40"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_has_level_handler():\n    logger = logging.getLogger('flask.app')\n    assert not has_level_handler(logger)\n\n    handler = logging.StreamHandler()\n    logging.root.addHandler(handler)\n    assert has_level_handler(logger)\n\n    logger.propagate = False\n    assert not has_level_handler(logger)\n    logger.propagate = True\n\n    handler.setLevel(logging.ERROR)\n    assert not has_level_handler(logger),type='function_definition'\nline_star:69,line_end:82|char_star:0,char_end:40";
"test_has_level_handler,type='identifier'\nline_star:69,line_end:69|char_star:4,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"def test_has_level_handler():\n    logger = logging.getLogger('flask.app')\n    assert not has_level_handler(logger)\n\n    handler = logging.StreamHandler()\n    logging.root.addHandler(handler)\n    assert has_level_handler(logger)\n\n    logger.propagate = False\n    assert not has_level_handler(logger)\n    logger.propagate = True\n\n    handler.setLevel(logging.ERROR)\n    assert not has_level_handler(logger),type='function_definition'\nline_star:69,line_end:82|char_star:0,char_end:40"->"test_has_level_handler,type='identifier'\nline_star:69,line_end:69|char_star:4,char_end:26";
"type='INFORMATION BLOCK'\nline_star:70,line_end:82|char_star:4,char_end:40"[shape="point",fillcolor="#121013",style=filled];
"def test_has_level_handler():\n    logger = logging.getLogger('flask.app')\n    assert not has_level_handler(logger)\n\n    handler = logging.StreamHandler()\n    logging.root.addHandler(handler)\n    assert has_level_handler(logger)\n\n    logger.propagate = False\n    assert not has_level_handler(logger)\n    logger.propagate = True\n\n    handler.setLevel(logging.ERROR)\n    assert not has_level_handler(logger),type='function_definition'\nline_star:69,line_end:82|char_star:0,char_end:40"->"type='INFORMATION BLOCK'\nline_star:70,line_end:82|char_star:4,char_end:40";
"assert not has_level_handler(logger),type='assert_statement'\nline_star:71,line_end:71|char_star:4,char_end:40"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:70,line_end:82|char_star:4,char_end:40"->"assert not has_level_handler(logger),type='assert_statement'\nline_star:71,line_end:71|char_star:4,char_end:40";
"not has_level_handler(logger),type='not_operator'\nline_star:71,line_end:71|char_star:11,char_end:40"[shape="box",fillcolor="white",style=filled];
"assert not has_level_handler(logger),type='assert_statement'\nline_star:71,line_end:71|char_star:4,char_end:40"->"not has_level_handler(logger),type='not_operator'\nline_star:71,line_end:71|char_star:11,char_end:40";
"has_level_handler(logger),type='call'\nline_star:71,line_end:71|char_star:15,char_end:40"[shape="box",fillcolor="white",style=filled];
"not has_level_handler(logger),type='not_operator'\nline_star:71,line_end:71|char_star:11,char_end:40"->"has_level_handler(logger),type='call'\nline_star:71,line_end:71|char_star:15,char_end:40";
"has_level_handler,type='identifier'\nline_star:71,line_end:71|char_star:15,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"has_level_handler(logger),type='call'\nline_star:71,line_end:71|char_star:15,char_end:40"->"has_level_handler,type='identifier'\nline_star:71,line_end:71|char_star:15,char_end:32";
"(logger),type='argument_list'\nline_star:71,line_end:71|char_star:32,char_end:40"[shape="box",fillcolor="white",style=filled];
"has_level_handler(logger),type='call'\nline_star:71,line_end:71|char_star:15,char_end:40"->"(logger),type='argument_list'\nline_star:71,line_end:71|char_star:32,char_end:40";
"logger,type='identifier'\nline_star:71,line_end:71|char_star:33,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"(logger),type='argument_list'\nline_star:71,line_end:71|char_star:32,char_end:40"->"logger,type='identifier'\nline_star:71,line_end:71|char_star:33,char_end:39";
"assert has_level_handler(logger),type='assert_statement'\nline_star:75,line_end:75|char_star:4,char_end:36"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:70,line_end:82|char_star:4,char_end:40"->"assert has_level_handler(logger),type='assert_statement'\nline_star:75,line_end:75|char_star:4,char_end:36";
"has_level_handler(logger),type='call'\nline_star:75,line_end:75|char_star:11,char_end:36"[shape="box",fillcolor="white",style=filled];
"assert has_level_handler(logger),type='assert_statement'\nline_star:75,line_end:75|char_star:4,char_end:36"->"has_level_handler(logger),type='call'\nline_star:75,line_end:75|char_star:11,char_end:36";
"has_level_handler,type='identifier'\nline_star:75,line_end:75|char_star:11,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"has_level_handler(logger),type='call'\nline_star:75,line_end:75|char_star:11,char_end:36"->"has_level_handler,type='identifier'\nline_star:75,line_end:75|char_star:11,char_end:28";
"(logger),type='argument_list'\nline_star:75,line_end:75|char_star:28,char_end:36"[shape="box",fillcolor="white",style=filled];
"has_level_handler(logger),type='call'\nline_star:75,line_end:75|char_star:11,char_end:36"->"(logger),type='argument_list'\nline_star:75,line_end:75|char_star:28,char_end:36";
"logger,type='identifier'\nline_star:75,line_end:75|char_star:29,char_end:35"[shape="point",fillcolor="#121013",style=filled];
"(logger),type='argument_list'\nline_star:75,line_end:75|char_star:28,char_end:36"->"logger,type='identifier'\nline_star:75,line_end:75|char_star:29,char_end:35";
"assert not has_level_handler(logger),type='assert_statement'\nline_star:78,line_end:78|char_star:4,char_end:40"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:70,line_end:82|char_star:4,char_end:40"->"assert not has_level_handler(logger),type='assert_statement'\nline_star:78,line_end:78|char_star:4,char_end:40";
"not has_level_handler(logger),type='not_operator'\nline_star:78,line_end:78|char_star:11,char_end:40"[shape="box",fillcolor="white",style=filled];
"assert not has_level_handler(logger),type='assert_statement'\nline_star:78,line_end:78|char_star:4,char_end:40"->"not has_level_handler(logger),type='not_operator'\nline_star:78,line_end:78|char_star:11,char_end:40";
"has_level_handler(logger),type='call'\nline_star:78,line_end:78|char_star:15,char_end:40"[shape="box",fillcolor="white",style=filled];
"not has_level_handler(logger),type='not_operator'\nline_star:78,line_end:78|char_star:11,char_end:40"->"has_level_handler(logger),type='call'\nline_star:78,line_end:78|char_star:15,char_end:40";
"has_level_handler,type='identifier'\nline_star:78,line_end:78|char_star:15,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"has_level_handler(logger),type='call'\nline_star:78,line_end:78|char_star:15,char_end:40"->"has_level_handler,type='identifier'\nline_star:78,line_end:78|char_star:15,char_end:32";
"(logger),type='argument_list'\nline_star:78,line_end:78|char_star:32,char_end:40"[shape="box",fillcolor="white",style=filled];
"has_level_handler(logger),type='call'\nline_star:78,line_end:78|char_star:15,char_end:40"->"(logger),type='argument_list'\nline_star:78,line_end:78|char_star:32,char_end:40";
"logger,type='identifier'\nline_star:78,line_end:78|char_star:33,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"(logger),type='argument_list'\nline_star:78,line_end:78|char_star:32,char_end:40"->"logger,type='identifier'\nline_star:78,line_end:78|char_star:33,char_end:39";
"assert not has_level_handler(logger),type='assert_statement'\nline_star:82,line_end:82|char_star:4,char_end:40"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:70,line_end:82|char_star:4,char_end:40"->"assert not has_level_handler(logger),type='assert_statement'\nline_star:82,line_end:82|char_star:4,char_end:40";
"not has_level_handler(logger),type='not_operator'\nline_star:82,line_end:82|char_star:11,char_end:40"[shape="box",fillcolor="white",style=filled];
"assert not has_level_handler(logger),type='assert_statement'\nline_star:82,line_end:82|char_star:4,char_end:40"->"not has_level_handler(logger),type='not_operator'\nline_star:82,line_end:82|char_star:11,char_end:40";
"has_level_handler(logger),type='call'\nline_star:82,line_end:82|char_star:15,char_end:40"[shape="box",fillcolor="white",style=filled];
"not has_level_handler(logger),type='not_operator'\nline_star:82,line_end:82|char_star:11,char_end:40"->"has_level_handler(logger),type='call'\nline_star:82,line_end:82|char_star:15,char_end:40";
"has_level_handler,type='identifier'\nline_star:82,line_end:82|char_star:15,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"has_level_handler(logger),type='call'\nline_star:82,line_end:82|char_star:15,char_end:40"->"has_level_handler,type='identifier'\nline_star:82,line_end:82|char_star:15,char_end:32";
"(logger),type='argument_list'\nline_star:82,line_end:82|char_star:32,char_end:40"[shape="box",fillcolor="white",style=filled];
"has_level_handler(logger),type='call'\nline_star:82,line_end:82|char_star:15,char_end:40"->"(logger),type='argument_list'\nline_star:82,line_end:82|char_star:32,char_end:40";
"logger,type='identifier'\nline_star:82,line_end:82|char_star:33,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"(logger),type='argument_list'\nline_star:82,line_end:82|char_star:32,char_end:40"->"logger,type='identifier'\nline_star:82,line_end:82|char_star:33,char_end:39";
"def test_log_view_exception(app, client):\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    app.testing = False\n    stream = StringIO()\n    rv = client.get('/', errors_stream=stream)\n    assert rv.status_code == 500\n    assert rv.data\n    err = stream.getvalue()\n    assert 'Exception on / [GET]' in err\n    assert 'Exception: test' in err,type='function_definition'\nline_star:85,line_end:97|char_star:0,char_end:35"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_log_view_exception(app, client):\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    app.testing = False\n    stream = StringIO()\n    rv = client.get('/', errors_stream=stream)\n    assert rv.status_code == 500\n    assert rv.data\n    err = stream.getvalue()\n    assert 'Exception on / [GET]' in err\n    assert 'Exception: test' in err,type='function_definition'\nline_star:85,line_end:97|char_star:0,char_end:35";
"test_log_view_exception,type='identifier'\nline_star:85,line_end:85|char_star:4,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"def test_log_view_exception(app, client):\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    app.testing = False\n    stream = StringIO()\n    rv = client.get('/', errors_stream=stream)\n    assert rv.status_code == 500\n    assert rv.data\n    err = stream.getvalue()\n    assert 'Exception on / [GET]' in err\n    assert 'Exception: test' in err,type='function_definition'\nline_star:85,line_end:97|char_star:0,char_end:35"->"test_log_view_exception,type='identifier'\nline_star:85,line_end:85|char_star:4,char_end:27";
"(app, client),type='parameters'\nline_star:85,line_end:85|char_star:27,char_end:40"[shape="box",fillcolor="white",style=filled];
"def test_log_view_exception(app, client):\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    app.testing = False\n    stream = StringIO()\n    rv = client.get('/', errors_stream=stream)\n    assert rv.status_code == 500\n    assert rv.data\n    err = stream.getvalue()\n    assert 'Exception on / [GET]' in err\n    assert 'Exception: test' in err,type='function_definition'\nline_star:85,line_end:97|char_star:0,char_end:35"->"(app, client),type='parameters'\nline_star:85,line_end:85|char_star:27,char_end:40";
"app,type='identifier'\nline_star:85,line_end:85|char_star:28,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:85,line_end:85|char_star:27,char_end:40"->"app,type='identifier'\nline_star:85,line_end:85|char_star:28,char_end:31";
"client,type='identifier'\nline_star:85,line_end:85|char_star:33,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:85,line_end:85|char_star:27,char_end:40"->"client,type='identifier'\nline_star:85,line_end:85|char_star:33,char_end:39";
"type='INFORMATION BLOCK'\nline_star:86,line_end:97|char_star:4,char_end:35"[shape="point",fillcolor="#121013",style=filled];
"def test_log_view_exception(app, client):\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    app.testing = False\n    stream = StringIO()\n    rv = client.get('/', errors_stream=stream)\n    assert rv.status_code == 500\n    assert rv.data\n    err = stream.getvalue()\n    assert 'Exception on / [GET]' in err\n    assert 'Exception: test' in err,type='function_definition'\nline_star:85,line_end:97|char_star:0,char_end:35"->"type='INFORMATION BLOCK'\nline_star:86,line_end:97|char_star:4,char_end:35";
"@app.route('/')\n    def index():\n        raise Exception('test'),type='decorated_definition'\nline_star:86,line_end:88|char_star:4,char_end:31"[shape="box",fillcolor="#c8c6a7",style=filled];
"type='INFORMATION BLOCK'\nline_star:86,line_end:97|char_star:4,char_end:35"->"@app.route('/')\n    def index():\n        raise Exception('test'),type='decorated_definition'\nline_star:86,line_end:88|char_star:4,char_end:31";
"@app.route('/'),type='decorator'\nline_star:86,line_end:86|char_star:4,char_end:19"[shape="box",fillcolor="white",style=filled];
"@app.route('/')\n    def index():\n        raise Exception('test'),type='decorated_definition'\nline_star:86,line_end:88|char_star:4,char_end:31"->"@app.route('/'),type='decorator'\nline_star:86,line_end:86|char_star:4,char_end:19";
"def index():\n        raise Exception('test'),type='function_definition'\nline_star:87,line_end:88|char_star:4,char_end:31"[shape="box",fillcolor="#cee6b4",style=filled];
"@app.route('/')\n    def index():\n        raise Exception('test'),type='decorated_definition'\nline_star:86,line_end:88|char_star:4,char_end:31"->"def index():\n        raise Exception('test'),type='function_definition'\nline_star:87,line_end:88|char_star:4,char_end:31";
"index,type='identifier'\nline_star:87,line_end:87|char_star:8,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"def index():\n        raise Exception('test'),type='function_definition'\nline_star:87,line_end:88|char_star:4,char_end:31"->"index,type='identifier'\nline_star:87,line_end:87|char_star:8,char_end:13";
"type='INFORMATION BLOCK'\nline_star:88,line_end:88|char_star:8,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"def index():\n        raise Exception('test'),type='function_definition'\nline_star:87,line_end:88|char_star:4,char_end:31"->"type='INFORMATION BLOCK'\nline_star:88,line_end:88|char_star:8,char_end:31";
"raise Exception('test'),type='raise_statement'\nline_star:88,line_end:88|char_star:8,char_end:31"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:88,line_end:88|char_star:8,char_end:31"->"raise Exception('test'),type='raise_statement'\nline_star:88,line_end:88|char_star:8,char_end:31";
"raise,type='raise'\nline_star:88,line_end:88|char_star:8,char_end:13"[shape="box",fillcolor="white",style=filled];
"raise Exception('test'),type='raise_statement'\nline_star:88,line_end:88|char_star:8,char_end:31"->"raise,type='raise'\nline_star:88,line_end:88|char_star:8,char_end:13";
"Exception('test'),type='call'\nline_star:88,line_end:88|char_star:14,char_end:31"[shape="box",fillcolor="white",style=filled];
"raise Exception('test'),type='raise_statement'\nline_star:88,line_end:88|char_star:8,char_end:31"->"Exception('test'),type='call'\nline_star:88,line_end:88|char_star:14,char_end:31";
"Exception,type='identifier'\nline_star:88,line_end:88|char_star:14,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"Exception('test'),type='call'\nline_star:88,line_end:88|char_star:14,char_end:31"->"Exception,type='identifier'\nline_star:88,line_end:88|char_star:14,char_end:23";
"('test'),type='argument_list'\nline_star:88,line_end:88|char_star:23,char_end:31"[shape="box",fillcolor="white",style=filled];
"Exception('test'),type='call'\nline_star:88,line_end:88|char_star:14,char_end:31"->"('test'),type='argument_list'\nline_star:88,line_end:88|char_star:23,char_end:31";
"assert rv.status_code == 500,type='assert_statement'\nline_star:93,line_end:93|char_star:4,char_end:32"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:86,line_end:97|char_star:4,char_end:35"->"assert rv.status_code == 500,type='assert_statement'\nline_star:93,line_end:93|char_star:4,char_end:32";
"rv.status_code == 500,type='comparison_operator'\nline_star:93,line_end:93|char_star:11,char_end:32"[shape="box",fillcolor="white",style=filled];
"assert rv.status_code == 500,type='assert_statement'\nline_star:93,line_end:93|char_star:4,char_end:32"->"rv.status_code == 500,type='comparison_operator'\nline_star:93,line_end:93|char_star:11,char_end:32";
"rv.status_code,type='attribute'\nline_star:93,line_end:93|char_star:11,char_end:25"[shape="box",fillcolor="white",style=filled];
"rv.status_code == 500,type='comparison_operator'\nline_star:93,line_end:93|char_star:11,char_end:32"->"rv.status_code,type='attribute'\nline_star:93,line_end:93|char_star:11,char_end:25";
"rv,type='identifier'\nline_star:93,line_end:93|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.status_code,type='attribute'\nline_star:93,line_end:93|char_star:11,char_end:25"->"rv,type='identifier'\nline_star:93,line_end:93|char_star:11,char_end:13";
"status_code,type='identifier'\nline_star:93,line_end:93|char_star:14,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"rv.status_code,type='attribute'\nline_star:93,line_end:93|char_star:11,char_end:25"->"status_code,type='identifier'\nline_star:93,line_end:93|char_star:14,char_end:25";
"assert rv.data,type='assert_statement'\nline_star:94,line_end:94|char_star:4,char_end:18"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:86,line_end:97|char_star:4,char_end:35"->"assert rv.data,type='assert_statement'\nline_star:94,line_end:94|char_star:4,char_end:18";
"rv.data,type='attribute'\nline_star:94,line_end:94|char_star:11,char_end:18"[shape="box",fillcolor="white",style=filled];
"assert rv.data,type='assert_statement'\nline_star:94,line_end:94|char_star:4,char_end:18"->"rv.data,type='attribute'\nline_star:94,line_end:94|char_star:11,char_end:18";
"rv,type='identifier'\nline_star:94,line_end:94|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:94,line_end:94|char_star:11,char_end:18"->"rv,type='identifier'\nline_star:94,line_end:94|char_star:11,char_end:13";
"data,type='identifier'\nline_star:94,line_end:94|char_star:14,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:94,line_end:94|char_star:11,char_end:18"->"data,type='identifier'\nline_star:94,line_end:94|char_star:14,char_end:18";
"assert 'Exception on / [GET]' in err,type='assert_statement'\nline_star:96,line_end:96|char_star:4,char_end:40"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:86,line_end:97|char_star:4,char_end:35"->"assert 'Exception on / [GET]' in err,type='assert_statement'\nline_star:96,line_end:96|char_star:4,char_end:40";
"'Exception on / [GET]' in err,type='comparison_operator'\nline_star:96,line_end:96|char_star:11,char_end:40"[shape="box",fillcolor="white",style=filled];
"assert 'Exception on / [GET]' in err,type='assert_statement'\nline_star:96,line_end:96|char_star:4,char_end:40"->"'Exception on / [GET]' in err,type='comparison_operator'\nline_star:96,line_end:96|char_star:11,char_end:40";
"err,type='identifier'\nline_star:96,line_end:96|char_star:37,char_end:40"[shape="point",fillcolor="#121013",style=filled];
"'Exception on / [GET]' in err,type='comparison_operator'\nline_star:96,line_end:96|char_star:11,char_end:40"->"err,type='identifier'\nline_star:96,line_end:96|char_star:37,char_end:40";
"assert 'Exception: test' in err,type='assert_statement'\nline_star:97,line_end:97|char_star:4,char_end:35"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:86,line_end:97|char_star:4,char_end:35"->"assert 'Exception: test' in err,type='assert_statement'\nline_star:97,line_end:97|char_star:4,char_end:35";
"'Exception: test' in err,type='comparison_operator'\nline_star:97,line_end:97|char_star:11,char_end:35"[shape="box",fillcolor="white",style=filled];
"assert 'Exception: test' in err,type='assert_statement'\nline_star:97,line_end:97|char_star:4,char_end:35"->"'Exception: test' in err,type='comparison_operator'\nline_star:97,line_end:97|char_star:11,char_end:35";
"err,type='identifier'\nline_star:97,line_end:97|char_star:32,char_end:35"[shape="point",fillcolor="#121013",style=filled];
"'Exception: test' in err,type='comparison_operator'\nline_star:97,line_end:97|char_star:11,char_end:35"->"err,type='identifier'\nline_star:97,line_end:97|char_star:32,char_end:35";
"import logging\nimport sys\nfrom io import StringIO\nimport pytest\nfrom flask.logging import default_handler\nfrom flask.logging import has_level_handler\nfrom flask.logging import wsgi_errors_strea"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import logging\nimport sys\nfrom io import StringIO\nimport pytest\nfrom flask.logging import default_handler\nfrom flask.logging import has_level_handler\nfrom flask.logging import wsgi_errors_strea"
}
