digraph G{
rankdir="LR";
"MODULE"[shape="box",fillcolor="white",style=filled];
"from io import StringIO,type='import_from_statement'\nline_star:0,line_end:0|char_star:0,char_end:23"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"from io import StringIO,type='import_from_statement'\nline_star:0,line_end:0|char_star:0,char_end:23";
"import flask,type='import_statement'\nline_star:2,line_end:2|char_star:0,char_end:12"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import flask,type='import_statement'\nline_star:2,line_end:2|char_star:0,char_end:12";
"def test_suppressed_exception_logging():\n    class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass\n\n    out = StringIO()\n    app = SuppressedFlask(__name__)\n\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    rv = app.test_client().get('/', errors_stream=out)\n    assert rv.status_code == 500\n    assert b'Internal Server Error' in rv.data\n    assert not out.getvalue(),type='function_definition'\nline_star:5,line_end:20|char_star:0,char_end:29"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_suppressed_exception_logging():\n    class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass\n\n    out = StringIO()\n    app = SuppressedFlask(__name__)\n\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    rv = app.test_client().get('/', errors_stream=out)\n    assert rv.status_code == 500\n    assert b'Internal Server Error' in rv.data\n    assert not out.getvalue(),type='function_definition'\nline_star:5,line_end:20|char_star:0,char_end:29";
"test_suppressed_exception_logging,type='identifier'\nline_star:5,line_end:5|char_star:4,char_end:37"[shape="point",fillcolor="#121013",style=filled];
"def test_suppressed_exception_logging():\n    class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass\n\n    out = StringIO()\n    app = SuppressedFlask(__name__)\n\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    rv = app.test_client().get('/', errors_stream=out)\n    assert rv.status_code == 500\n    assert b'Internal Server Error' in rv.data\n    assert not out.getvalue(),type='function_definition'\nline_star:5,line_end:20|char_star:0,char_end:29"->"test_suppressed_exception_logging,type='identifier'\nline_star:5,line_end:5|char_star:4,char_end:37";
"type='INFORMATION BLOCK'\nline_star:6,line_end:20|char_star:4,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"def test_suppressed_exception_logging():\n    class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass\n\n    out = StringIO()\n    app = SuppressedFlask(__name__)\n\n    @app.route('/')\n    def index():\n        raise Exception('test')\n\n    rv = app.test_client().get('/', errors_stream=out)\n    assert rv.status_code == 500\n    assert b'Internal Server Error' in rv.data\n    assert not out.getvalue(),type='function_definition'\nline_star:5,line_end:20|char_star:0,char_end:29"->"type='INFORMATION BLOCK'\nline_star:6,line_end:20|char_star:4,char_end:29";
"class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass,type='class_definition'\nline_star:6,line_end:8|char_star:4,char_end:16"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:20|char_star:4,char_end:29"->"class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass,type='class_definition'\nline_star:6,line_end:8|char_star:4,char_end:16";
"SuppressedFlask,type='identifier'\nline_star:6,line_end:6|char_star:10,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass,type='class_definition'\nline_star:6,line_end:8|char_star:4,char_end:16"->"SuppressedFlask,type='identifier'\nline_star:6,line_end:6|char_star:10,char_end:25";
"(flask.Flask),type='argument_list'\nline_star:6,line_end:6|char_star:25,char_end:38"[shape="box",fillcolor="white",style=filled];
"class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass,type='class_definition'\nline_star:6,line_end:8|char_star:4,char_end:16"->"(flask.Flask),type='argument_list'\nline_star:6,line_end:6|char_star:25,char_end:38";
"flask.Flask,type='attribute'\nline_star:6,line_end:6|char_star:26,char_end:37"[shape="box",fillcolor="white",style=filled];
"(flask.Flask),type='argument_list'\nline_star:6,line_end:6|char_star:25,char_end:38"->"flask.Flask,type='attribute'\nline_star:6,line_end:6|char_star:26,char_end:37";
"flask,type='identifier'\nline_star:6,line_end:6|char_star:26,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"flask.Flask,type='attribute'\nline_star:6,line_end:6|char_star:26,char_end:37"->"flask,type='identifier'\nline_star:6,line_end:6|char_star:26,char_end:31";
"Flask,type='identifier'\nline_star:6,line_end:6|char_star:32,char_end:37"[shape="point",fillcolor="#121013",style=filled];
"flask.Flask,type='attribute'\nline_star:6,line_end:6|char_star:26,char_end:37"->"Flask,type='identifier'\nline_star:6,line_end:6|char_star:32,char_end:37";
"type='INFORMATION BLOCK'\nline_star:7,line_end:8|char_star:8,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"class SuppressedFlask(flask.Flask):\n        def log_exception(self, exc_info):\n            pass,type='class_definition'\nline_star:6,line_end:8|char_star:4,char_end:16"->"type='INFORMATION BLOCK'\nline_star:7,line_end:8|char_star:8,char_end:16";
"def log_exception(self, exc_info):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:7,line_end:8|char_star:8,char_end:16"->"def log_exception(self, exc_info):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16";
"log_exception,type='identifier'\nline_star:7,line_end:7|char_star:12,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"def log_exception(self, exc_info):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16"->"log_exception,type='identifier'\nline_star:7,line_end:7|char_star:12,char_end:25";
"(self, exc_info),type='parameters'\nline_star:7,line_end:7|char_star:25,char_end:41"[shape="box",fillcolor="white",style=filled];
"def log_exception(self, exc_info):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16"->"(self, exc_info),type='parameters'\nline_star:7,line_end:7|char_star:25,char_end:41";
"self,type='identifier'\nline_star:7,line_end:7|char_star:26,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"(self, exc_info),type='parameters'\nline_star:7,line_end:7|char_star:25,char_end:41"->"self,type='identifier'\nline_star:7,line_end:7|char_star:26,char_end:30";
"exc_info,type='identifier'\nline_star:7,line_end:7|char_star:32,char_end:40"[shape="point",fillcolor="#121013",style=filled];
"(self, exc_info),type='parameters'\nline_star:7,line_end:7|char_star:25,char_end:41"->"exc_info,type='identifier'\nline_star:7,line_end:7|char_star:32,char_end:40";
"type='INFORMATION BLOCK'\nline_star:8,line_end:8|char_star:12,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"def log_exception(self, exc_info):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16"->"type='INFORMATION BLOCK'\nline_star:8,line_end:8|char_star:12,char_end:16";
"pass,type='pass_statement'\nline_star:8,line_end:8|char_star:12,char_end:16"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:8,line_end:8|char_star:12,char_end:16"->"pass,type='pass_statement'\nline_star:8,line_end:8|char_star:12,char_end:16";
"pass,type='pass'\nline_star:8,line_end:8|char_star:12,char_end:16"[shape="box",fillcolor="white",style=filled];
"pass,type='pass_statement'\nline_star:8,line_end:8|char_star:12,char_end:16"->"pass,type='pass'\nline_star:8,line_end:8|char_star:12,char_end:16";
"@app.route('/')\n    def index():\n        raise Exception('test'),type='decorated_definition'\nline_star:13,line_end:15|char_star:4,char_end:31"[shape="box",fillcolor="#c8c6a7",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:20|char_star:4,char_end:29"->"@app.route('/')\n    def index():\n        raise Exception('test'),type='decorated_definition'\nline_star:13,line_end:15|char_star:4,char_end:31";
"@app.route('/'),type='decorator'\nline_star:13,line_end:13|char_star:4,char_end:19"[shape="box",fillcolor="white",style=filled];
"@app.route('/')\n    def index():\n        raise Exception('test'),type='decorated_definition'\nline_star:13,line_end:15|char_star:4,char_end:31"->"@app.route('/'),type='decorator'\nline_star:13,line_end:13|char_star:4,char_end:19";
"def index():\n        raise Exception('test'),type='function_definition'\nline_star:14,line_end:15|char_star:4,char_end:31"[shape="box",fillcolor="#cee6b4",style=filled];
"@app.route('/')\n    def index():\n        raise Exception('test'),type='decorated_definition'\nline_star:13,line_end:15|char_star:4,char_end:31"->"def index():\n        raise Exception('test'),type='function_definition'\nline_star:14,line_end:15|char_star:4,char_end:31";
"index,type='identifier'\nline_star:14,line_end:14|char_star:8,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"def index():\n        raise Exception('test'),type='function_definition'\nline_star:14,line_end:15|char_star:4,char_end:31"->"index,type='identifier'\nline_star:14,line_end:14|char_star:8,char_end:13";
"type='INFORMATION BLOCK'\nline_star:15,line_end:15|char_star:8,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"def index():\n        raise Exception('test'),type='function_definition'\nline_star:14,line_end:15|char_star:4,char_end:31"->"type='INFORMATION BLOCK'\nline_star:15,line_end:15|char_star:8,char_end:31";
"raise Exception('test'),type='raise_statement'\nline_star:15,line_end:15|char_star:8,char_end:31"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:15,line_end:15|char_star:8,char_end:31"->"raise Exception('test'),type='raise_statement'\nline_star:15,line_end:15|char_star:8,char_end:31";
"raise,type='raise'\nline_star:15,line_end:15|char_star:8,char_end:13"[shape="box",fillcolor="white",style=filled];
"raise Exception('test'),type='raise_statement'\nline_star:15,line_end:15|char_star:8,char_end:31"->"raise,type='raise'\nline_star:15,line_end:15|char_star:8,char_end:13";
"Exception('test'),type='call'\nline_star:15,line_end:15|char_star:14,char_end:31"[shape="box",fillcolor="white",style=filled];
"raise Exception('test'),type='raise_statement'\nline_star:15,line_end:15|char_star:8,char_end:31"->"Exception('test'),type='call'\nline_star:15,line_end:15|char_star:14,char_end:31";
"Exception,type='identifier'\nline_star:15,line_end:15|char_star:14,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"Exception('test'),type='call'\nline_star:15,line_end:15|char_star:14,char_end:31"->"Exception,type='identifier'\nline_star:15,line_end:15|char_star:14,char_end:23";
"('test'),type='argument_list'\nline_star:15,line_end:15|char_star:23,char_end:31"[shape="box",fillcolor="white",style=filled];
"Exception('test'),type='call'\nline_star:15,line_end:15|char_star:14,char_end:31"->"('test'),type='argument_list'\nline_star:15,line_end:15|char_star:23,char_end:31";
"assert rv.status_code == 500,type='assert_statement'\nline_star:18,line_end:18|char_star:4,char_end:32"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:20|char_star:4,char_end:29"->"assert rv.status_code == 500,type='assert_statement'\nline_star:18,line_end:18|char_star:4,char_end:32";
"rv.status_code == 500,type='comparison_operator'\nline_star:18,line_end:18|char_star:11,char_end:32"[shape="box",fillcolor="white",style=filled];
"assert rv.status_code == 500,type='assert_statement'\nline_star:18,line_end:18|char_star:4,char_end:32"->"rv.status_code == 500,type='comparison_operator'\nline_star:18,line_end:18|char_star:11,char_end:32";
"rv.status_code,type='attribute'\nline_star:18,line_end:18|char_star:11,char_end:25"[shape="box",fillcolor="white",style=filled];
"rv.status_code == 500,type='comparison_operator'\nline_star:18,line_end:18|char_star:11,char_end:32"->"rv.status_code,type='attribute'\nline_star:18,line_end:18|char_star:11,char_end:25";
"rv,type='identifier'\nline_star:18,line_end:18|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.status_code,type='attribute'\nline_star:18,line_end:18|char_star:11,char_end:25"->"rv,type='identifier'\nline_star:18,line_end:18|char_star:11,char_end:13";
"status_code,type='identifier'\nline_star:18,line_end:18|char_star:14,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"rv.status_code,type='attribute'\nline_star:18,line_end:18|char_star:11,char_end:25"->"status_code,type='identifier'\nline_star:18,line_end:18|char_star:14,char_end:25";
"assert b'Internal Server Error' in rv.data,type='assert_statement'\nline_star:19,line_end:19|char_star:4,char_end:46"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:20|char_star:4,char_end:29"->"assert b'Internal Server Error' in rv.data,type='assert_statement'\nline_star:19,line_end:19|char_star:4,char_end:46";
"b'Internal Server Error' in rv.data,type='comparison_operator'\nline_star:19,line_end:19|char_star:11,char_end:46"[shape="box",fillcolor="white",style=filled];
"assert b'Internal Server Error' in rv.data,type='assert_statement'\nline_star:19,line_end:19|char_star:4,char_end:46"->"b'Internal Server Error' in rv.data,type='comparison_operator'\nline_star:19,line_end:19|char_star:11,char_end:46";
"rv.data,type='attribute'\nline_star:19,line_end:19|char_star:39,char_end:46"[shape="box",fillcolor="white",style=filled];
"b'Internal Server Error' in rv.data,type='comparison_operator'\nline_star:19,line_end:19|char_star:11,char_end:46"->"rv.data,type='attribute'\nline_star:19,line_end:19|char_star:39,char_end:46";
"rv,type='identifier'\nline_star:19,line_end:19|char_star:39,char_end:41"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:19,line_end:19|char_star:39,char_end:46"->"rv,type='identifier'\nline_star:19,line_end:19|char_star:39,char_end:41";
"data,type='identifier'\nline_star:19,line_end:19|char_star:42,char_end:46"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:19,line_end:19|char_star:39,char_end:46"->"data,type='identifier'\nline_star:19,line_end:19|char_star:42,char_end:46";
"assert not out.getvalue(),type='assert_statement'\nline_star:20,line_end:20|char_star:4,char_end:29"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:20|char_star:4,char_end:29"->"assert not out.getvalue(),type='assert_statement'\nline_star:20,line_end:20|char_star:4,char_end:29";
"not out.getvalue(),type='not_operator'\nline_star:20,line_end:20|char_star:11,char_end:29"[shape="box",fillcolor="white",style=filled];
"assert not out.getvalue(),type='assert_statement'\nline_star:20,line_end:20|char_star:4,char_end:29"->"not out.getvalue(),type='not_operator'\nline_star:20,line_end:20|char_star:11,char_end:29";
"out.getvalue(),type='call'\nline_star:20,line_end:20|char_star:15,char_end:29"[shape="box",fillcolor="white",style=filled];
"not out.getvalue(),type='not_operator'\nline_star:20,line_end:20|char_star:11,char_end:29"->"out.getvalue(),type='call'\nline_star:20,line_end:20|char_star:15,char_end:29";
"out.getvalue,type='attribute'\nline_star:20,line_end:20|char_star:15,char_end:27"[shape="box",fillcolor="white",style=filled];
"out.getvalue(),type='call'\nline_star:20,line_end:20|char_star:15,char_end:29"->"out.getvalue,type='attribute'\nline_star:20,line_end:20|char_star:15,char_end:27";
"out,type='identifier'\nline_star:20,line_end:20|char_star:15,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"out.getvalue,type='attribute'\nline_star:20,line_end:20|char_star:15,char_end:27"->"out,type='identifier'\nline_star:20,line_end:20|char_star:15,char_end:18";
"getvalue,type='identifier'\nline_star:20,line_end:20|char_star:19,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"out.getvalue,type='attribute'\nline_star:20,line_end:20|char_star:15,char_end:27"->"getvalue,type='identifier'\nline_star:20,line_end:20|char_star:19,char_end:27";
"from io import StringIO\nimport flas"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"from io import StringIO\nimport flas"
}
