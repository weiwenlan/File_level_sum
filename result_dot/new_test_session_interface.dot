digraph G{
rankdir="LR";
"MODULE"[shape="box",fillcolor="white",style=filled];
"import flask,type='import_statement'\nline_star:0,line_end:0|char_star:0,char_end:12"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import flask,type='import_statement'\nline_star:0,line_end:0|char_star:0,char_end:12";
"from flask.sessions import SessionInterface,type='import_from_statement'\nline_star:1,line_end:1|char_star:0,char_end:43"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"from flask.sessions import SessionInterface,type='import_from_statement'\nline_star:1,line_end:1|char_star:0,char_end:43";
"def test_open_session_endpoint_not_none():\n    # Define a session interface that breaks if request.endpoint is None\n    class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None\n\n    def index():\n        return 'Hello World!'\n\n    # Confirm a 200 response, indicating that request.endpoint was NOT None\n    app = flask.Flask(__name__)\n    app.route('/')(index)\n    app.session_interface = MySessionInterface()\n    response = app.test_client().open('/')\n    assert response.status_code == 200,type='function_definition'\nline_star:4,line_end:21|char_star:0,char_end:38"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_open_session_endpoint_not_none():\n    # Define a session interface that breaks if request.endpoint is None\n    class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None\n\n    def index():\n        return 'Hello World!'\n\n    # Confirm a 200 response, indicating that request.endpoint was NOT None\n    app = flask.Flask(__name__)\n    app.route('/')(index)\n    app.session_interface = MySessionInterface()\n    response = app.test_client().open('/')\n    assert response.status_code == 200,type='function_definition'\nline_star:4,line_end:21|char_star:0,char_end:38";
"test_open_session_endpoint_not_none,type='identifier'\nline_star:4,line_end:4|char_star:4,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"def test_open_session_endpoint_not_none():\n    # Define a session interface that breaks if request.endpoint is None\n    class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None\n\n    def index():\n        return 'Hello World!'\n\n    # Confirm a 200 response, indicating that request.endpoint was NOT None\n    app = flask.Flask(__name__)\n    app.route('/')(index)\n    app.session_interface = MySessionInterface()\n    response = app.test_client().open('/')\n    assert response.status_code == 200,type='function_definition'\nline_star:4,line_end:21|char_star:0,char_end:38"->"test_open_session_endpoint_not_none,type='identifier'\nline_star:4,line_end:4|char_star:4,char_end:39";
"# Define a session interface that breaks if request.endpoint is None,type='comment'\nline_star:5,line_end:5|char_star:4,char_end:72"[shape="box",fillcolor="#f0c929",style=filled];
"def test_open_session_endpoint_not_none():\n    # Define a session interface that breaks if request.endpoint is None\n    class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None\n\n    def index():\n        return 'Hello World!'\n\n    # Confirm a 200 response, indicating that request.endpoint was NOT None\n    app = flask.Flask(__name__)\n    app.route('/')(index)\n    app.session_interface = MySessionInterface()\n    response = app.test_client().open('/')\n    assert response.status_code == 200,type='function_definition'\nline_star:4,line_end:21|char_star:0,char_end:38"->"# Define a session interface that breaks if request.endpoint is None,type='comment'\nline_star:5,line_end:5|char_star:4,char_end:72";
"type='INFORMATION BLOCK'\nline_star:6,line_end:21|char_star:4,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"def test_open_session_endpoint_not_none():\n    # Define a session interface that breaks if request.endpoint is None\n    class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None\n\n    def index():\n        return 'Hello World!'\n\n    # Confirm a 200 response, indicating that request.endpoint was NOT None\n    app = flask.Flask(__name__)\n    app.route('/')(index)\n    app.session_interface = MySessionInterface()\n    response = app.test_client().open('/')\n    assert response.status_code == 200,type='function_definition'\nline_star:4,line_end:21|char_star:0,char_end:38"->"type='INFORMATION BLOCK'\nline_star:6,line_end:21|char_star:4,char_end:38";
"class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None,type='class_definition'\nline_star:6,line_end:11|char_star:4,char_end:47"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:21|char_star:4,char_end:38"->"class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None,type='class_definition'\nline_star:6,line_end:11|char_star:4,char_end:47";
"MySessionInterface,type='identifier'\nline_star:6,line_end:6|char_star:10,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None,type='class_definition'\nline_star:6,line_end:11|char_star:4,char_end:47"->"MySessionInterface,type='identifier'\nline_star:6,line_end:6|char_star:10,char_end:28";
"(SessionInterface),type='argument_list'\nline_star:6,line_end:6|char_star:28,char_end:46"[shape="box",fillcolor="white",style=filled];
"class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None,type='class_definition'\nline_star:6,line_end:11|char_star:4,char_end:47"->"(SessionInterface),type='argument_list'\nline_star:6,line_end:6|char_star:28,char_end:46";
"SessionInterface,type='identifier'\nline_star:6,line_end:6|char_star:29,char_end:45"[shape="point",fillcolor="#121013",style=filled];
"(SessionInterface),type='argument_list'\nline_star:6,line_end:6|char_star:28,char_end:46"->"SessionInterface,type='identifier'\nline_star:6,line_end:6|char_star:29,char_end:45";
"type='INFORMATION BLOCK'\nline_star:7,line_end:11|char_star:8,char_end:47"[shape="point",fillcolor="#121013",style=filled];
"class MySessionInterface(SessionInterface):\n        def save_session(self):\n            pass\n\n        def open_session(self, _, request):\n            assert request.endpoint is not None,type='class_definition'\nline_star:6,line_end:11|char_star:4,char_end:47"->"type='INFORMATION BLOCK'\nline_star:7,line_end:11|char_star:8,char_end:47";
"def save_session(self):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:7,line_end:11|char_star:8,char_end:47"->"def save_session(self):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16";
"save_session,type='identifier'\nline_star:7,line_end:7|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def save_session(self):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16"->"save_session,type='identifier'\nline_star:7,line_end:7|char_star:12,char_end:24";
"(self),type='parameters'\nline_star:7,line_end:7|char_star:24,char_end:30"[shape="box",fillcolor="white",style=filled];
"def save_session(self):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16"->"(self),type='parameters'\nline_star:7,line_end:7|char_star:24,char_end:30";
"self,type='identifier'\nline_star:7,line_end:7|char_star:25,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:7,line_end:7|char_star:24,char_end:30"->"self,type='identifier'\nline_star:7,line_end:7|char_star:25,char_end:29";
"type='INFORMATION BLOCK'\nline_star:8,line_end:8|char_star:12,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"def save_session(self):\n            pass,type='function_definition'\nline_star:7,line_end:8|char_star:8,char_end:16"->"type='INFORMATION BLOCK'\nline_star:8,line_end:8|char_star:12,char_end:16";
"pass,type='pass_statement'\nline_star:8,line_end:8|char_star:12,char_end:16"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:8,line_end:8|char_star:12,char_end:16"->"pass,type='pass_statement'\nline_star:8,line_end:8|char_star:12,char_end:16";
"pass,type='pass'\nline_star:8,line_end:8|char_star:12,char_end:16"[shape="box",fillcolor="white",style=filled];
"pass,type='pass_statement'\nline_star:8,line_end:8|char_star:12,char_end:16"->"pass,type='pass'\nline_star:8,line_end:8|char_star:12,char_end:16";
"def open_session(self, _, request):\n            assert request.endpoint is not None,type='function_definition'\nline_star:10,line_end:11|char_star:8,char_end:47"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:7,line_end:11|char_star:8,char_end:47"->"def open_session(self, _, request):\n            assert request.endpoint is not None,type='function_definition'\nline_star:10,line_end:11|char_star:8,char_end:47";
"open_session,type='identifier'\nline_star:10,line_end:10|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def open_session(self, _, request):\n            assert request.endpoint is not None,type='function_definition'\nline_star:10,line_end:11|char_star:8,char_end:47"->"open_session,type='identifier'\nline_star:10,line_end:10|char_star:12,char_end:24";
"(self, _, request),type='parameters'\nline_star:10,line_end:10|char_star:24,char_end:42"[shape="box",fillcolor="white",style=filled];
"def open_session(self, _, request):\n            assert request.endpoint is not None,type='function_definition'\nline_star:10,line_end:11|char_star:8,char_end:47"->"(self, _, request),type='parameters'\nline_star:10,line_end:10|char_star:24,char_end:42";
"self,type='identifier'\nline_star:10,line_end:10|char_star:25,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"(self, _, request),type='parameters'\nline_star:10,line_end:10|char_star:24,char_end:42"->"self,type='identifier'\nline_star:10,line_end:10|char_star:25,char_end:29";
"_,type='identifier'\nline_star:10,line_end:10|char_star:31,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"(self, _, request),type='parameters'\nline_star:10,line_end:10|char_star:24,char_end:42"->"_,type='identifier'\nline_star:10,line_end:10|char_star:31,char_end:32";
"request,type='identifier'\nline_star:10,line_end:10|char_star:34,char_end:41"[shape="point",fillcolor="#121013",style=filled];
"(self, _, request),type='parameters'\nline_star:10,line_end:10|char_star:24,char_end:42"->"request,type='identifier'\nline_star:10,line_end:10|char_star:34,char_end:41";
"type='INFORMATION BLOCK'\nline_star:11,line_end:11|char_star:12,char_end:47"[shape="point",fillcolor="#121013",style=filled];
"def open_session(self, _, request):\n            assert request.endpoint is not None,type='function_definition'\nline_star:10,line_end:11|char_star:8,char_end:47"->"type='INFORMATION BLOCK'\nline_star:11,line_end:11|char_star:12,char_end:47";
"assert request.endpoint is not None,type='assert_statement'\nline_star:11,line_end:11|char_star:12,char_end:47"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:11,line_end:11|char_star:12,char_end:47"->"assert request.endpoint is not None,type='assert_statement'\nline_star:11,line_end:11|char_star:12,char_end:47";
"request.endpoint is not None,type='comparison_operator'\nline_star:11,line_end:11|char_star:19,char_end:47"[shape="box",fillcolor="white",style=filled];
"assert request.endpoint is not None,type='assert_statement'\nline_star:11,line_end:11|char_star:12,char_end:47"->"request.endpoint is not None,type='comparison_operator'\nline_star:11,line_end:11|char_star:19,char_end:47";
"request.endpoint,type='attribute'\nline_star:11,line_end:11|char_star:19,char_end:35"[shape="box",fillcolor="white",style=filled];
"request.endpoint is not None,type='comparison_operator'\nline_star:11,line_end:11|char_star:19,char_end:47"->"request.endpoint,type='attribute'\nline_star:11,line_end:11|char_star:19,char_end:35";
"request,type='identifier'\nline_star:11,line_end:11|char_star:19,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"request.endpoint,type='attribute'\nline_star:11,line_end:11|char_star:19,char_end:35"->"request,type='identifier'\nline_star:11,line_end:11|char_star:19,char_end:26";
"endpoint,type='identifier'\nline_star:11,line_end:11|char_star:27,char_end:35"[shape="point",fillcolor="#121013",style=filled];
"request.endpoint,type='attribute'\nline_star:11,line_end:11|char_star:19,char_end:35"->"endpoint,type='identifier'\nline_star:11,line_end:11|char_star:27,char_end:35";
"def index():\n        return 'Hello World!',type='function_definition'\nline_star:13,line_end:14|char_star:4,char_end:29"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:21|char_star:4,char_end:38"->"def index():\n        return 'Hello World!',type='function_definition'\nline_star:13,line_end:14|char_star:4,char_end:29";
"index,type='identifier'\nline_star:13,line_end:13|char_star:8,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"def index():\n        return 'Hello World!',type='function_definition'\nline_star:13,line_end:14|char_star:4,char_end:29"->"index,type='identifier'\nline_star:13,line_end:13|char_star:8,char_end:13";
"type='INFORMATION BLOCK'\nline_star:14,line_end:14|char_star:8,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"def index():\n        return 'Hello World!',type='function_definition'\nline_star:13,line_end:14|char_star:4,char_end:29"->"type='INFORMATION BLOCK'\nline_star:14,line_end:14|char_star:8,char_end:29";
"return 'Hello World!',type='return_statement'\nline_star:14,line_end:14|char_star:8,char_end:29"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:14,line_end:14|char_star:8,char_end:29"->"return 'Hello World!',type='return_statement'\nline_star:14,line_end:14|char_star:8,char_end:29";
"# Confirm a 200 response, indicating that request.endpoint was NOT None,type='comment'\nline_star:16,line_end:16|char_star:4,char_end:75"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:21|char_star:4,char_end:38"->"# Confirm a 200 response, indicating that request.endpoint was NOT None,type='comment'\nline_star:16,line_end:16|char_star:4,char_end:75";
"assert response.status_code == 200,type='assert_statement'\nline_star:21,line_end:21|char_star:4,char_end:38"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:6,line_end:21|char_star:4,char_end:38"->"assert response.status_code == 200,type='assert_statement'\nline_star:21,line_end:21|char_star:4,char_end:38";
"response.status_code == 200,type='comparison_operator'\nline_star:21,line_end:21|char_star:11,char_end:38"[shape="box",fillcolor="white",style=filled];
"assert response.status_code == 200,type='assert_statement'\nline_star:21,line_end:21|char_star:4,char_end:38"->"response.status_code == 200,type='comparison_operator'\nline_star:21,line_end:21|char_star:11,char_end:38";
"response.status_code,type='attribute'\nline_star:21,line_end:21|char_star:11,char_end:31"[shape="box",fillcolor="white",style=filled];
"response.status_code == 200,type='comparison_operator'\nline_star:21,line_end:21|char_star:11,char_end:38"->"response.status_code,type='attribute'\nline_star:21,line_end:21|char_star:11,char_end:31";
"response,type='identifier'\nline_star:21,line_end:21|char_star:11,char_end:19"[shape="point",fillcolor="#121013",style=filled];
"response.status_code,type='attribute'\nline_star:21,line_end:21|char_star:11,char_end:31"->"response,type='identifier'\nline_star:21,line_end:21|char_star:11,char_end:19";
"status_code,type='identifier'\nline_star:21,line_end:21|char_star:20,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"response.status_code,type='attribute'\nline_star:21,line_end:21|char_star:11,char_end:31"->"status_code,type='identifier'\nline_star:21,line_end:21|char_star:20,char_end:31";
"import flask\nfrom flask.sessions import SessionInterfac"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import flask\nfrom flask.sessions import SessionInterfac"
}
