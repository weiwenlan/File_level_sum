digraph G{
rankdir="LR";
"MODULE"[shape="box",fillcolor="white",style=filled];
"import pytest,type='import_statement'\nline_star:0,line_end:0|char_star:0,char_end:13"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import pytest,type='import_statement'\nline_star:0,line_end:0|char_star:0,char_end:13";
"from werkzeug.http import parse_set_header,type='import_from_statement'\nline_star:1,line_end:1|char_star:0,char_end:42"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"from werkzeug.http import parse_set_header,type='import_from_statement'\nline_star:1,line_end:1|char_star:0,char_end:42";
"import flask.views,type='import_statement'\nline_star:3,line_end:3|char_star:0,char_end:18"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import flask.views,type='import_statement'\nline_star:3,line_end:3|char_star:0,char_end:18";
"def common_test(app):\n    c = app.test_client()\n\n    assert c.get('/').data == b'GET'\n    assert c.post('/').data == b'POST'\n    assert c.put('/').status_code == 405\n    meths = parse_set_header(c.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:6,line_end:13|char_star:0,char_end:62"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def common_test(app):\n    c = app.test_client()\n\n    assert c.get('/').data == b'GET'\n    assert c.post('/').data == b'POST'\n    assert c.put('/').status_code == 405\n    meths = parse_set_header(c.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:6,line_end:13|char_star:0,char_end:62";
"common_test,type='identifier'\nline_star:6,line_end:6|char_star:4,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def common_test(app):\n    c = app.test_client()\n\n    assert c.get('/').data == b'GET'\n    assert c.post('/').data == b'POST'\n    assert c.put('/').status_code == 405\n    meths = parse_set_header(c.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:6,line_end:13|char_star:0,char_end:62"->"common_test,type='identifier'\nline_star:6,line_end:6|char_star:4,char_end:15";
"(app),type='parameters'\nline_star:6,line_end:6|char_star:15,char_end:20"[shape="box",fillcolor="white",style=filled];
"def common_test(app):\n    c = app.test_client()\n\n    assert c.get('/').data == b'GET'\n    assert c.post('/').data == b'POST'\n    assert c.put('/').status_code == 405\n    meths = parse_set_header(c.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:6,line_end:13|char_star:0,char_end:62"->"(app),type='parameters'\nline_star:6,line_end:6|char_star:15,char_end:20";
"app,type='identifier'\nline_star:6,line_end:6|char_star:16,char_end:19"[shape="point",fillcolor="#121013",style=filled];
"(app),type='parameters'\nline_star:6,line_end:6|char_star:15,char_end:20"->"app,type='identifier'\nline_star:6,line_end:6|char_star:16,char_end:19";
"type='INFORMATION BLOCK'\nline_star:7,line_end:13|char_star:4,char_end:62"[shape="point",fillcolor="#121013",style=filled];
"def common_test(app):\n    c = app.test_client()\n\n    assert c.get('/').data == b'GET'\n    assert c.post('/').data == b'POST'\n    assert c.put('/').status_code == 405\n    meths = parse_set_header(c.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:6,line_end:13|char_star:0,char_end:62"->"type='INFORMATION BLOCK'\nline_star:7,line_end:13|char_star:4,char_end:62";
"assert c.get('/').data == b'GET',type='assert_statement'\nline_star:9,line_end:9|char_star:4,char_end:36"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:7,line_end:13|char_star:4,char_end:62"->"assert c.get('/').data == b'GET',type='assert_statement'\nline_star:9,line_end:9|char_star:4,char_end:36";
"c.get('/').data == b'GET',type='comparison_operator'\nline_star:9,line_end:9|char_star:11,char_end:36"[shape="box",fillcolor="white",style=filled];
"assert c.get('/').data == b'GET',type='assert_statement'\nline_star:9,line_end:9|char_star:4,char_end:36"->"c.get('/').data == b'GET',type='comparison_operator'\nline_star:9,line_end:9|char_star:11,char_end:36";
"c.get('/').data,type='attribute'\nline_star:9,line_end:9|char_star:11,char_end:26"[shape="box",fillcolor="white",style=filled];
"c.get('/').data == b'GET',type='comparison_operator'\nline_star:9,line_end:9|char_star:11,char_end:36"->"c.get('/').data,type='attribute'\nline_star:9,line_end:9|char_star:11,char_end:26";
"c.get('/'),type='call'\nline_star:9,line_end:9|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"c.get('/').data,type='attribute'\nline_star:9,line_end:9|char_star:11,char_end:26"->"c.get('/'),type='call'\nline_star:9,line_end:9|char_star:11,char_end:21";
"c.get,type='attribute'\nline_star:9,line_end:9|char_star:11,char_end:16"[shape="box",fillcolor="white",style=filled];
"c.get('/'),type='call'\nline_star:9,line_end:9|char_star:11,char_end:21"->"c.get,type='attribute'\nline_star:9,line_end:9|char_star:11,char_end:16";
"c,type='identifier'\nline_star:9,line_end:9|char_star:11,char_end:12"[shape="point",fillcolor="#121013",style=filled];
"c.get,type='attribute'\nline_star:9,line_end:9|char_star:11,char_end:16"->"c,type='identifier'\nline_star:9,line_end:9|char_star:11,char_end:12";
"get,type='identifier'\nline_star:9,line_end:9|char_star:13,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"c.get,type='attribute'\nline_star:9,line_end:9|char_star:11,char_end:16"->"get,type='identifier'\nline_star:9,line_end:9|char_star:13,char_end:16";
"('/'),type='argument_list'\nline_star:9,line_end:9|char_star:16,char_end:21"[shape="box",fillcolor="white",style=filled];
"c.get('/'),type='call'\nline_star:9,line_end:9|char_star:11,char_end:21"->"('/'),type='argument_list'\nline_star:9,line_end:9|char_star:16,char_end:21";
"data,type='identifier'\nline_star:9,line_end:9|char_star:22,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"c.get('/').data,type='attribute'\nline_star:9,line_end:9|char_star:11,char_end:26"->"data,type='identifier'\nline_star:9,line_end:9|char_star:22,char_end:26";
"assert c.post('/').data == b'POST',type='assert_statement'\nline_star:10,line_end:10|char_star:4,char_end:38"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:7,line_end:13|char_star:4,char_end:62"->"assert c.post('/').data == b'POST',type='assert_statement'\nline_star:10,line_end:10|char_star:4,char_end:38";
"c.post('/').data == b'POST',type='comparison_operator'\nline_star:10,line_end:10|char_star:11,char_end:38"[shape="box",fillcolor="white",style=filled];
"assert c.post('/').data == b'POST',type='assert_statement'\nline_star:10,line_end:10|char_star:4,char_end:38"->"c.post('/').data == b'POST',type='comparison_operator'\nline_star:10,line_end:10|char_star:11,char_end:38";
"c.post('/').data,type='attribute'\nline_star:10,line_end:10|char_star:11,char_end:27"[shape="box",fillcolor="white",style=filled];
"c.post('/').data == b'POST',type='comparison_operator'\nline_star:10,line_end:10|char_star:11,char_end:38"->"c.post('/').data,type='attribute'\nline_star:10,line_end:10|char_star:11,char_end:27";
"c.post('/'),type='call'\nline_star:10,line_end:10|char_star:11,char_end:22"[shape="box",fillcolor="white",style=filled];
"c.post('/').data,type='attribute'\nline_star:10,line_end:10|char_star:11,char_end:27"->"c.post('/'),type='call'\nline_star:10,line_end:10|char_star:11,char_end:22";
"c.post,type='attribute'\nline_star:10,line_end:10|char_star:11,char_end:17"[shape="box",fillcolor="white",style=filled];
"c.post('/'),type='call'\nline_star:10,line_end:10|char_star:11,char_end:22"->"c.post,type='attribute'\nline_star:10,line_end:10|char_star:11,char_end:17";
"c,type='identifier'\nline_star:10,line_end:10|char_star:11,char_end:12"[shape="point",fillcolor="#121013",style=filled];
"c.post,type='attribute'\nline_star:10,line_end:10|char_star:11,char_end:17"->"c,type='identifier'\nline_star:10,line_end:10|char_star:11,char_end:12";
"post,type='identifier'\nline_star:10,line_end:10|char_star:13,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"c.post,type='attribute'\nline_star:10,line_end:10|char_star:11,char_end:17"->"post,type='identifier'\nline_star:10,line_end:10|char_star:13,char_end:17";
"('/'),type='argument_list'\nline_star:10,line_end:10|char_star:17,char_end:22"[shape="box",fillcolor="white",style=filled];
"c.post('/'),type='call'\nline_star:10,line_end:10|char_star:11,char_end:22"->"('/'),type='argument_list'\nline_star:10,line_end:10|char_star:17,char_end:22";
"data,type='identifier'\nline_star:10,line_end:10|char_star:23,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"c.post('/').data,type='attribute'\nline_star:10,line_end:10|char_star:11,char_end:27"->"data,type='identifier'\nline_star:10,line_end:10|char_star:23,char_end:27";
"assert c.put('/').status_code == 405,type='assert_statement'\nline_star:11,line_end:11|char_star:4,char_end:40"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:7,line_end:13|char_star:4,char_end:62"->"assert c.put('/').status_code == 405,type='assert_statement'\nline_star:11,line_end:11|char_star:4,char_end:40";
"c.put('/').status_code == 405,type='comparison_operator'\nline_star:11,line_end:11|char_star:11,char_end:40"[shape="box",fillcolor="white",style=filled];
"assert c.put('/').status_code == 405,type='assert_statement'\nline_star:11,line_end:11|char_star:4,char_end:40"->"c.put('/').status_code == 405,type='comparison_operator'\nline_star:11,line_end:11|char_star:11,char_end:40";
"c.put('/').status_code,type='attribute'\nline_star:11,line_end:11|char_star:11,char_end:33"[shape="box",fillcolor="white",style=filled];
"c.put('/').status_code == 405,type='comparison_operator'\nline_star:11,line_end:11|char_star:11,char_end:40"->"c.put('/').status_code,type='attribute'\nline_star:11,line_end:11|char_star:11,char_end:33";
"c.put('/'),type='call'\nline_star:11,line_end:11|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"c.put('/').status_code,type='attribute'\nline_star:11,line_end:11|char_star:11,char_end:33"->"c.put('/'),type='call'\nline_star:11,line_end:11|char_star:11,char_end:21";
"c.put,type='attribute'\nline_star:11,line_end:11|char_star:11,char_end:16"[shape="box",fillcolor="white",style=filled];
"c.put('/'),type='call'\nline_star:11,line_end:11|char_star:11,char_end:21"->"c.put,type='attribute'\nline_star:11,line_end:11|char_star:11,char_end:16";
"c,type='identifier'\nline_star:11,line_end:11|char_star:11,char_end:12"[shape="point",fillcolor="#121013",style=filled];
"c.put,type='attribute'\nline_star:11,line_end:11|char_star:11,char_end:16"->"c,type='identifier'\nline_star:11,line_end:11|char_star:11,char_end:12";
"put,type='identifier'\nline_star:11,line_end:11|char_star:13,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"c.put,type='attribute'\nline_star:11,line_end:11|char_star:11,char_end:16"->"put,type='identifier'\nline_star:11,line_end:11|char_star:13,char_end:16";
"('/'),type='argument_list'\nline_star:11,line_end:11|char_star:16,char_end:21"[shape="box",fillcolor="white",style=filled];
"c.put('/'),type='call'\nline_star:11,line_end:11|char_star:11,char_end:21"->"('/'),type='argument_list'\nline_star:11,line_end:11|char_star:16,char_end:21";
"status_code,type='identifier'\nline_star:11,line_end:11|char_star:22,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"c.put('/').status_code,type='attribute'\nline_star:11,line_end:11|char_star:11,char_end:33"->"status_code,type='identifier'\nline_star:11,line_end:11|char_star:22,char_end:33";
"assert sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='assert_statement'\nline_star:13,line_end:13|char_star:4,char_end:62"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:7,line_end:13|char_star:4,char_end:62"->"assert sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='assert_statement'\nline_star:13,line_end:13|char_star:4,char_end:62";
"sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='comparison_operator'\nline_star:13,line_end:13|char_star:11,char_end:62"[shape="box",fillcolor="white",style=filled];
"assert sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='assert_statement'\nline_star:13,line_end:13|char_star:4,char_end:62"->"sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='comparison_operator'\nline_star:13,line_end:13|char_star:11,char_end:62";
"sorted(meths),type='call'\nline_star:13,line_end:13|char_star:11,char_end:24"[shape="box",fillcolor="white",style=filled];
"sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='comparison_operator'\nline_star:13,line_end:13|char_star:11,char_end:62"->"sorted(meths),type='call'\nline_star:13,line_end:13|char_star:11,char_end:24";
"sorted,type='identifier'\nline_star:13,line_end:13|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"sorted(meths),type='call'\nline_star:13,line_end:13|char_star:11,char_end:24"->"sorted,type='identifier'\nline_star:13,line_end:13|char_star:11,char_end:17";
"(meths),type='argument_list'\nline_star:13,line_end:13|char_star:17,char_end:24"[shape="box",fillcolor="white",style=filled];
"sorted(meths),type='call'\nline_star:13,line_end:13|char_star:11,char_end:24"->"(meths),type='argument_list'\nline_star:13,line_end:13|char_star:17,char_end:24";
"meths,type='identifier'\nline_star:13,line_end:13|char_star:18,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"(meths),type='argument_list'\nline_star:13,line_end:13|char_star:17,char_end:24"->"meths,type='identifier'\nline_star:13,line_end:13|char_star:18,char_end:23";
"['GET', 'HEAD', 'OPTIONS', 'POST'],type='list'\nline_star:13,line_end:13|char_star:28,char_end:62"[shape="box",fillcolor="white",style=filled];
"sorted(meths) == ['GET', 'HEAD', 'OPTIONS', 'POST'],type='comparison_operator'\nline_star:13,line_end:13|char_star:11,char_end:62"->"['GET', 'HEAD', 'OPTIONS', 'POST'],type='list'\nline_star:13,line_end:13|char_star:28,char_end:62";
"def test_basic_view(app):\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    common_test(app),type='function_definition'\nline_star:16,line_end:24|char_star:0,char_end:20"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_basic_view(app):\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    common_test(app),type='function_definition'\nline_star:16,line_end:24|char_star:0,char_end:20";
"test_basic_view,type='identifier'\nline_star:16,line_end:16|char_star:4,char_end:19"[shape="point",fillcolor="#121013",style=filled];
"def test_basic_view(app):\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    common_test(app),type='function_definition'\nline_star:16,line_end:24|char_star:0,char_end:20"->"test_basic_view,type='identifier'\nline_star:16,line_end:16|char_star:4,char_end:19";
"(app),type='parameters'\nline_star:16,line_end:16|char_star:19,char_end:24"[shape="box",fillcolor="white",style=filled];
"def test_basic_view(app):\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    common_test(app),type='function_definition'\nline_star:16,line_end:24|char_star:0,char_end:20"->"(app),type='parameters'\nline_star:16,line_end:16|char_star:19,char_end:24";
"app,type='identifier'\nline_star:16,line_end:16|char_star:20,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"(app),type='parameters'\nline_star:16,line_end:16|char_star:19,char_end:24"->"app,type='identifier'\nline_star:16,line_end:16|char_star:20,char_end:23";
"type='INFORMATION BLOCK'\nline_star:17,line_end:24|char_star:4,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"def test_basic_view(app):\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    common_test(app),type='function_definition'\nline_star:16,line_end:24|char_star:0,char_end:20"->"type='INFORMATION BLOCK'\nline_star:17,line_end:24|char_star:4,char_end:20";
"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:17,line_end:21|char_star:4,char_end:39"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:17,line_end:24|char_star:4,char_end:20"->"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:17,line_end:21|char_star:4,char_end:39";
"Index,type='identifier'\nline_star:17,line_end:17|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:17,line_end:21|char_star:4,char_end:39"->"Index,type='identifier'\nline_star:17,line_end:17|char_star:10,char_end:15";
"(flask.views.View),type='argument_list'\nline_star:17,line_end:17|char_star:15,char_end:33"[shape="box",fillcolor="white",style=filled];
"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:17,line_end:21|char_star:4,char_end:39"->"(flask.views.View),type='argument_list'\nline_star:17,line_end:17|char_star:15,char_end:33";
"flask.views.View,type='attribute'\nline_star:17,line_end:17|char_star:16,char_end:32"[shape="box",fillcolor="white",style=filled];
"(flask.views.View),type='argument_list'\nline_star:17,line_end:17|char_star:15,char_end:33"->"flask.views.View,type='attribute'\nline_star:17,line_end:17|char_star:16,char_end:32";
"flask.views,type='attribute'\nline_star:17,line_end:17|char_star:16,char_end:27"[shape="box",fillcolor="white",style=filled];
"flask.views.View,type='attribute'\nline_star:17,line_end:17|char_star:16,char_end:32"->"flask.views,type='attribute'\nline_star:17,line_end:17|char_star:16,char_end:27";
"flask,type='identifier'\nline_star:17,line_end:17|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:17,line_end:17|char_star:16,char_end:27"->"flask,type='identifier'\nline_star:17,line_end:17|char_star:16,char_end:21";
"views,type='identifier'\nline_star:17,line_end:17|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:17,line_end:17|char_star:16,char_end:27"->"views,type='identifier'\nline_star:17,line_end:17|char_star:22,char_end:27";
"View,type='identifier'\nline_star:17,line_end:17|char_star:28,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"flask.views.View,type='attribute'\nline_star:17,line_end:17|char_star:16,char_end:32"->"View,type='identifier'\nline_star:17,line_end:17|char_star:28,char_end:32";
"type='INFORMATION BLOCK'\nline_star:18,line_end:21|char_star:8,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:17,line_end:21|char_star:4,char_end:39"->"type='INFORMATION BLOCK'\nline_star:18,line_end:21|char_star:8,char_end:39";
"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:20,line_end:21|char_star:8,char_end:39"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:18,line_end:21|char_star:8,char_end:39"->"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:20,line_end:21|char_star:8,char_end:39";
"dispatch_request,type='identifier'\nline_star:20,line_end:20|char_star:12,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:20,line_end:21|char_star:8,char_end:39"->"dispatch_request,type='identifier'\nline_star:20,line_end:20|char_star:12,char_end:28";
"(self),type='parameters'\nline_star:20,line_end:20|char_star:28,char_end:34"[shape="box",fillcolor="white",style=filled];
"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:20,line_end:21|char_star:8,char_end:39"->"(self),type='parameters'\nline_star:20,line_end:20|char_star:28,char_end:34";
"self,type='identifier'\nline_star:20,line_end:20|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:20,line_end:20|char_star:28,char_end:34"->"self,type='identifier'\nline_star:20,line_end:20|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:21,line_end:21|char_star:12,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:20,line_end:21|char_star:8,char_end:39"->"type='INFORMATION BLOCK'\nline_star:21,line_end:21|char_star:12,char_end:39";
"return flask.request.method,type='return_statement'\nline_star:21,line_end:21|char_star:12,char_end:39"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:21,line_end:21|char_star:12,char_end:39"->"return flask.request.method,type='return_statement'\nline_star:21,line_end:21|char_star:12,char_end:39";
"def test_method_based_view(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    common_test(app),type='function_definition'\nline_star:27,line_end:37|char_star:0,char_end:20"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_method_based_view(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    common_test(app),type='function_definition'\nline_star:27,line_end:37|char_star:0,char_end:20";
"test_method_based_view,type='identifier'\nline_star:27,line_end:27|char_star:4,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"def test_method_based_view(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    common_test(app),type='function_definition'\nline_star:27,line_end:37|char_star:0,char_end:20"->"test_method_based_view,type='identifier'\nline_star:27,line_end:27|char_star:4,char_end:26";
"(app),type='parameters'\nline_star:27,line_end:27|char_star:26,char_end:31"[shape="box",fillcolor="white",style=filled];
"def test_method_based_view(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    common_test(app),type='function_definition'\nline_star:27,line_end:37|char_star:0,char_end:20"->"(app),type='parameters'\nline_star:27,line_end:27|char_star:26,char_end:31";
"app,type='identifier'\nline_star:27,line_end:27|char_star:27,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"(app),type='parameters'\nline_star:27,line_end:27|char_star:26,char_end:31"->"app,type='identifier'\nline_star:27,line_end:27|char_star:27,char_end:30";
"type='INFORMATION BLOCK'\nline_star:28,line_end:37|char_star:4,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"def test_method_based_view(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    common_test(app),type='function_definition'\nline_star:27,line_end:37|char_star:0,char_end:20"->"type='INFORMATION BLOCK'\nline_star:28,line_end:37|char_star:4,char_end:20";
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:28,line_end:33|char_star:4,char_end:25"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:28,line_end:37|char_star:4,char_end:20"->"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:28,line_end:33|char_star:4,char_end:25";
"Index,type='identifier'\nline_star:28,line_end:28|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:28,line_end:33|char_star:4,char_end:25"->"Index,type='identifier'\nline_star:28,line_end:28|char_star:10,char_end:15";
"(flask.views.MethodView),type='argument_list'\nline_star:28,line_end:28|char_star:15,char_end:39"[shape="box",fillcolor="white",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:28,line_end:33|char_star:4,char_end:25"->"(flask.views.MethodView),type='argument_list'\nline_star:28,line_end:28|char_star:15,char_end:39";
"flask.views.MethodView,type='attribute'\nline_star:28,line_end:28|char_star:16,char_end:38"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:28,line_end:28|char_star:15,char_end:39"->"flask.views.MethodView,type='attribute'\nline_star:28,line_end:28|char_star:16,char_end:38";
"flask.views,type='attribute'\nline_star:28,line_end:28|char_star:16,char_end:27"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:28,line_end:28|char_star:16,char_end:38"->"flask.views,type='attribute'\nline_star:28,line_end:28|char_star:16,char_end:27";
"flask,type='identifier'\nline_star:28,line_end:28|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:28,line_end:28|char_star:16,char_end:27"->"flask,type='identifier'\nline_star:28,line_end:28|char_star:16,char_end:21";
"views,type='identifier'\nline_star:28,line_end:28|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:28,line_end:28|char_star:16,char_end:27"->"views,type='identifier'\nline_star:28,line_end:28|char_star:22,char_end:27";
"MethodView,type='identifier'\nline_star:28,line_end:28|char_star:28,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:28,line_end:28|char_star:16,char_end:38"->"MethodView,type='identifier'\nline_star:28,line_end:28|char_star:28,char_end:38";
"type='INFORMATION BLOCK'\nline_star:29,line_end:33|char_star:8,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:28,line_end:33|char_star:4,char_end:25"->"type='INFORMATION BLOCK'\nline_star:29,line_end:33|char_star:8,char_end:25";
"def get(self):\n            return 'GET',type='function_definition'\nline_star:29,line_end:30|char_star:8,char_end:24"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:29,line_end:33|char_star:8,char_end:25"->"def get(self):\n            return 'GET',type='function_definition'\nline_star:29,line_end:30|char_star:8,char_end:24";
"get,type='identifier'\nline_star:29,line_end:29|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:29,line_end:30|char_star:8,char_end:24"->"get,type='identifier'\nline_star:29,line_end:29|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:29,line_end:29|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:29,line_end:30|char_star:8,char_end:24"->"(self),type='parameters'\nline_star:29,line_end:29|char_star:15,char_end:21";
"self,type='identifier'\nline_star:29,line_end:29|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:29,line_end:29|char_star:15,char_end:21"->"self,type='identifier'\nline_star:29,line_end:29|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:30,line_end:30|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:29,line_end:30|char_star:8,char_end:24"->"type='INFORMATION BLOCK'\nline_star:30,line_end:30|char_star:12,char_end:24";
"return 'GET',type='return_statement'\nline_star:30,line_end:30|char_star:12,char_end:24"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:30,line_end:30|char_star:12,char_end:24"->"return 'GET',type='return_statement'\nline_star:30,line_end:30|char_star:12,char_end:24";
"def post(self):\n            return 'POST',type='function_definition'\nline_star:32,line_end:33|char_star:8,char_end:25"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:29,line_end:33|char_star:8,char_end:25"->"def post(self):\n            return 'POST',type='function_definition'\nline_star:32,line_end:33|char_star:8,char_end:25";
"post,type='identifier'\nline_star:32,line_end:32|char_star:12,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:32,line_end:33|char_star:8,char_end:25"->"post,type='identifier'\nline_star:32,line_end:32|char_star:12,char_end:16";
"(self),type='parameters'\nline_star:32,line_end:32|char_star:16,char_end:22"[shape="box",fillcolor="white",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:32,line_end:33|char_star:8,char_end:25"->"(self),type='parameters'\nline_star:32,line_end:32|char_star:16,char_end:22";
"self,type='identifier'\nline_star:32,line_end:32|char_star:17,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:32,line_end:32|char_star:16,char_end:22"->"self,type='identifier'\nline_star:32,line_end:32|char_star:17,char_end:21";
"type='INFORMATION BLOCK'\nline_star:33,line_end:33|char_star:12,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:32,line_end:33|char_star:8,char_end:25"->"type='INFORMATION BLOCK'\nline_star:33,line_end:33|char_star:12,char_end:25";
"return 'POST',type='return_statement'\nline_star:33,line_end:33|char_star:12,char_end:25"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:33,line_end:33|char_star:12,char_end:25"->"return 'POST',type='return_statement'\nline_star:33,line_end:33|char_star:12,char_end:25";
"def test_view_patching(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0\n\n    class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    view = Index.as_view('index')\n    view.view_class = Other\n    app.add_url_rule('/', view_func=view)\n    common_test(app),type='function_definition'\nline_star:40,line_end:58|char_star:0,char_end:20"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_view_patching(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0\n\n    class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    view = Index.as_view('index')\n    view.view_class = Other\n    app.add_url_rule('/', view_func=view)\n    common_test(app),type='function_definition'\nline_star:40,line_end:58|char_star:0,char_end:20";
"test_view_patching,type='identifier'\nline_star:40,line_end:40|char_star:4,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"def test_view_patching(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0\n\n    class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    view = Index.as_view('index')\n    view.view_class = Other\n    app.add_url_rule('/', view_func=view)\n    common_test(app),type='function_definition'\nline_star:40,line_end:58|char_star:0,char_end:20"->"test_view_patching,type='identifier'\nline_star:40,line_end:40|char_star:4,char_end:22";
"(app),type='parameters'\nline_star:40,line_end:40|char_star:22,char_end:27"[shape="box",fillcolor="white",style=filled];
"def test_view_patching(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0\n\n    class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    view = Index.as_view('index')\n    view.view_class = Other\n    app.add_url_rule('/', view_func=view)\n    common_test(app),type='function_definition'\nline_star:40,line_end:58|char_star:0,char_end:20"->"(app),type='parameters'\nline_star:40,line_end:40|char_star:22,char_end:27";
"app,type='identifier'\nline_star:40,line_end:40|char_star:23,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"(app),type='parameters'\nline_star:40,line_end:40|char_star:22,char_end:27"->"app,type='identifier'\nline_star:40,line_end:40|char_star:23,char_end:26";
"type='INFORMATION BLOCK'\nline_star:41,line_end:58|char_star:4,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"def test_view_patching(app):\n    class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0\n\n    class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    view = Index.as_view('index')\n    view.view_class = Other\n    app.add_url_rule('/', view_func=view)\n    common_test(app),type='function_definition'\nline_star:40,line_end:58|char_star:0,char_end:20"->"type='INFORMATION BLOCK'\nline_star:41,line_end:58|char_star:4,char_end:20";
"class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0,type='class_definition'\nline_star:41,line_end:46|char_star:4,char_end:18"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:41,line_end:58|char_star:4,char_end:20"->"class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0,type='class_definition'\nline_star:41,line_end:46|char_star:4,char_end:18";
"Index,type='identifier'\nline_star:41,line_end:41|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0,type='class_definition'\nline_star:41,line_end:46|char_star:4,char_end:18"->"Index,type='identifier'\nline_star:41,line_end:41|char_star:10,char_end:15";
"(flask.views.MethodView),type='argument_list'\nline_star:41,line_end:41|char_star:15,char_end:39"[shape="box",fillcolor="white",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0,type='class_definition'\nline_star:41,line_end:46|char_star:4,char_end:18"->"(flask.views.MethodView),type='argument_list'\nline_star:41,line_end:41|char_star:15,char_end:39";
"flask.views.MethodView,type='attribute'\nline_star:41,line_end:41|char_star:16,char_end:38"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:41,line_end:41|char_star:15,char_end:39"->"flask.views.MethodView,type='attribute'\nline_star:41,line_end:41|char_star:16,char_end:38";
"flask.views,type='attribute'\nline_star:41,line_end:41|char_star:16,char_end:27"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:41,line_end:41|char_star:16,char_end:38"->"flask.views,type='attribute'\nline_star:41,line_end:41|char_star:16,char_end:27";
"flask,type='identifier'\nline_star:41,line_end:41|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:41,line_end:41|char_star:16,char_end:27"->"flask,type='identifier'\nline_star:41,line_end:41|char_star:16,char_end:21";
"views,type='identifier'\nline_star:41,line_end:41|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:41,line_end:41|char_star:16,char_end:27"->"views,type='identifier'\nline_star:41,line_end:41|char_star:22,char_end:27";
"MethodView,type='identifier'\nline_star:41,line_end:41|char_star:28,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:41,line_end:41|char_star:16,char_end:38"->"MethodView,type='identifier'\nline_star:41,line_end:41|char_star:28,char_end:38";
"type='INFORMATION BLOCK'\nline_star:42,line_end:46|char_star:8,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            1 // 0\n\n        def post(self):\n            1 // 0,type='class_definition'\nline_star:41,line_end:46|char_star:4,char_end:18"->"type='INFORMATION BLOCK'\nline_star:42,line_end:46|char_star:8,char_end:18";
"def get(self):\n            1 // 0,type='function_definition'\nline_star:42,line_end:43|char_star:8,char_end:18"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:42,line_end:46|char_star:8,char_end:18"->"def get(self):\n            1 // 0,type='function_definition'\nline_star:42,line_end:43|char_star:8,char_end:18";
"get,type='identifier'\nline_star:42,line_end:42|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            1 // 0,type='function_definition'\nline_star:42,line_end:43|char_star:8,char_end:18"->"get,type='identifier'\nline_star:42,line_end:42|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:42,line_end:42|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            1 // 0,type='function_definition'\nline_star:42,line_end:43|char_star:8,char_end:18"->"(self),type='parameters'\nline_star:42,line_end:42|char_star:15,char_end:21";
"self,type='identifier'\nline_star:42,line_end:42|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:42,line_end:42|char_star:15,char_end:21"->"self,type='identifier'\nline_star:42,line_end:42|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:43,line_end:43|char_star:12,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            1 // 0,type='function_definition'\nline_star:42,line_end:43|char_star:8,char_end:18"->"type='INFORMATION BLOCK'\nline_star:43,line_end:43|char_star:12,char_end:18";
"def post(self):\n            1 // 0,type='function_definition'\nline_star:45,line_end:46|char_star:8,char_end:18"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:42,line_end:46|char_star:8,char_end:18"->"def post(self):\n            1 // 0,type='function_definition'\nline_star:45,line_end:46|char_star:8,char_end:18";
"post,type='identifier'\nline_star:45,line_end:45|char_star:12,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            1 // 0,type='function_definition'\nline_star:45,line_end:46|char_star:8,char_end:18"->"post,type='identifier'\nline_star:45,line_end:45|char_star:12,char_end:16";
"(self),type='parameters'\nline_star:45,line_end:45|char_star:16,char_end:22"[shape="box",fillcolor="white",style=filled];
"def post(self):\n            1 // 0,type='function_definition'\nline_star:45,line_end:46|char_star:8,char_end:18"->"(self),type='parameters'\nline_star:45,line_end:45|char_star:16,char_end:22";
"self,type='identifier'\nline_star:45,line_end:45|char_star:17,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:45,line_end:45|char_star:16,char_end:22"->"self,type='identifier'\nline_star:45,line_end:45|char_star:17,char_end:21";
"type='INFORMATION BLOCK'\nline_star:46,line_end:46|char_star:12,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            1 // 0,type='function_definition'\nline_star:45,line_end:46|char_star:8,char_end:18"->"type='INFORMATION BLOCK'\nline_star:46,line_end:46|char_star:12,char_end:18";
"class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:48,line_end:53|char_star:4,char_end:25"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:41,line_end:58|char_star:4,char_end:20"->"class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:48,line_end:53|char_star:4,char_end:25";
"Other,type='identifier'\nline_star:48,line_end:48|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:48,line_end:53|char_star:4,char_end:25"->"Other,type='identifier'\nline_star:48,line_end:48|char_star:10,char_end:15";
"(Index),type='argument_list'\nline_star:48,line_end:48|char_star:15,char_end:22"[shape="box",fillcolor="white",style=filled];
"class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:48,line_end:53|char_star:4,char_end:25"->"(Index),type='argument_list'\nline_star:48,line_end:48|char_star:15,char_end:22";
"Index,type='identifier'\nline_star:48,line_end:48|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"(Index),type='argument_list'\nline_star:48,line_end:48|char_star:15,char_end:22"->"Index,type='identifier'\nline_star:48,line_end:48|char_star:16,char_end:21";
"type='INFORMATION BLOCK'\nline_star:49,line_end:53|char_star:8,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"class Other(Index):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:48,line_end:53|char_star:4,char_end:25"->"type='INFORMATION BLOCK'\nline_star:49,line_end:53|char_star:8,char_end:25";
"def get(self):\n            return 'GET',type='function_definition'\nline_star:49,line_end:50|char_star:8,char_end:24"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:49,line_end:53|char_star:8,char_end:25"->"def get(self):\n            return 'GET',type='function_definition'\nline_star:49,line_end:50|char_star:8,char_end:24";
"get,type='identifier'\nline_star:49,line_end:49|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:49,line_end:50|char_star:8,char_end:24"->"get,type='identifier'\nline_star:49,line_end:49|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:49,line_end:49|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:49,line_end:50|char_star:8,char_end:24"->"(self),type='parameters'\nline_star:49,line_end:49|char_star:15,char_end:21";
"self,type='identifier'\nline_star:49,line_end:49|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:49,line_end:49|char_star:15,char_end:21"->"self,type='identifier'\nline_star:49,line_end:49|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:50,line_end:50|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:49,line_end:50|char_star:8,char_end:24"->"type='INFORMATION BLOCK'\nline_star:50,line_end:50|char_star:12,char_end:24";
"return 'GET',type='return_statement'\nline_star:50,line_end:50|char_star:12,char_end:24"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:50,line_end:50|char_star:12,char_end:24"->"return 'GET',type='return_statement'\nline_star:50,line_end:50|char_star:12,char_end:24";
"def post(self):\n            return 'POST',type='function_definition'\nline_star:52,line_end:53|char_star:8,char_end:25"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:49,line_end:53|char_star:8,char_end:25"->"def post(self):\n            return 'POST',type='function_definition'\nline_star:52,line_end:53|char_star:8,char_end:25";
"post,type='identifier'\nline_star:52,line_end:52|char_star:12,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:52,line_end:53|char_star:8,char_end:25"->"post,type='identifier'\nline_star:52,line_end:52|char_star:12,char_end:16";
"(self),type='parameters'\nline_star:52,line_end:52|char_star:16,char_end:22"[shape="box",fillcolor="white",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:52,line_end:53|char_star:8,char_end:25"->"(self),type='parameters'\nline_star:52,line_end:52|char_star:16,char_end:22";
"self,type='identifier'\nline_star:52,line_end:52|char_star:17,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:52,line_end:52|char_star:16,char_end:22"->"self,type='identifier'\nline_star:52,line_end:52|char_star:17,char_end:21";
"type='INFORMATION BLOCK'\nline_star:53,line_end:53|char_star:12,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:52,line_end:53|char_star:8,char_end:25"->"type='INFORMATION BLOCK'\nline_star:53,line_end:53|char_star:12,char_end:25";
"return 'POST',type='return_statement'\nline_star:53,line_end:53|char_star:12,char_end:25"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:53,line_end:53|char_star:12,char_end:25"->"return 'POST',type='return_statement'\nline_star:53,line_end:53|char_star:12,char_end:25";
"def test_view_inheritance(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE'\n\n    app.add_url_rule('/', view_func=BetterIndex.as_view('index'))\n\n    meths = parse_set_header(client.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:61,line_end:76|char_star:0,char_end:72"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_view_inheritance(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE'\n\n    app.add_url_rule('/', view_func=BetterIndex.as_view('index'))\n\n    meths = parse_set_header(client.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:61,line_end:76|char_star:0,char_end:72";
"test_view_inheritance,type='identifier'\nline_star:61,line_end:61|char_star:4,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"def test_view_inheritance(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE'\n\n    app.add_url_rule('/', view_func=BetterIndex.as_view('index'))\n\n    meths = parse_set_header(client.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:61,line_end:76|char_star:0,char_end:72"->"test_view_inheritance,type='identifier'\nline_star:61,line_end:61|char_star:4,char_end:25";
"(app, client),type='parameters'\nline_star:61,line_end:61|char_star:25,char_end:38"[shape="box",fillcolor="white",style=filled];
"def test_view_inheritance(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE'\n\n    app.add_url_rule('/', view_func=BetterIndex.as_view('index'))\n\n    meths = parse_set_header(client.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:61,line_end:76|char_star:0,char_end:72"->"(app, client),type='parameters'\nline_star:61,line_end:61|char_star:25,char_end:38";
"app,type='identifier'\nline_star:61,line_end:61|char_star:26,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:61,line_end:61|char_star:25,char_end:38"->"app,type='identifier'\nline_star:61,line_end:61|char_star:26,char_end:29";
"client,type='identifier'\nline_star:61,line_end:61|char_star:31,char_end:37"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:61,line_end:61|char_star:25,char_end:38"->"client,type='identifier'\nline_star:61,line_end:61|char_star:31,char_end:37";
"type='INFORMATION BLOCK'\nline_star:62,line_end:76|char_star:4,char_end:72"[shape="point",fillcolor="#121013",style=filled];
"def test_view_inheritance(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST'\n\n    class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE'\n\n    app.add_url_rule('/', view_func=BetterIndex.as_view('index'))\n\n    meths = parse_set_header(client.open('/', method='OPTIONS').headers['Allow'])\n    assert sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='function_definition'\nline_star:61,line_end:76|char_star:0,char_end:72"->"type='INFORMATION BLOCK'\nline_star:62,line_end:76|char_star:4,char_end:72";
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:62,line_end:67|char_star:4,char_end:25"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:62,line_end:76|char_star:4,char_end:72"->"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:62,line_end:67|char_star:4,char_end:25";
"Index,type='identifier'\nline_star:62,line_end:62|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:62,line_end:67|char_star:4,char_end:25"->"Index,type='identifier'\nline_star:62,line_end:62|char_star:10,char_end:15";
"(flask.views.MethodView),type='argument_list'\nline_star:62,line_end:62|char_star:15,char_end:39"[shape="box",fillcolor="white",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:62,line_end:67|char_star:4,char_end:25"->"(flask.views.MethodView),type='argument_list'\nline_star:62,line_end:62|char_star:15,char_end:39";
"flask.views.MethodView,type='attribute'\nline_star:62,line_end:62|char_star:16,char_end:38"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:62,line_end:62|char_star:15,char_end:39"->"flask.views.MethodView,type='attribute'\nline_star:62,line_end:62|char_star:16,char_end:38";
"flask.views,type='attribute'\nline_star:62,line_end:62|char_star:16,char_end:27"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:62,line_end:62|char_star:16,char_end:38"->"flask.views,type='attribute'\nline_star:62,line_end:62|char_star:16,char_end:27";
"flask,type='identifier'\nline_star:62,line_end:62|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:62,line_end:62|char_star:16,char_end:27"->"flask,type='identifier'\nline_star:62,line_end:62|char_star:16,char_end:21";
"views,type='identifier'\nline_star:62,line_end:62|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:62,line_end:62|char_star:16,char_end:27"->"views,type='identifier'\nline_star:62,line_end:62|char_star:22,char_end:27";
"MethodView,type='identifier'\nline_star:62,line_end:62|char_star:28,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:62,line_end:62|char_star:16,char_end:38"->"MethodView,type='identifier'\nline_star:62,line_end:62|char_star:28,char_end:38";
"type='INFORMATION BLOCK'\nline_star:63,line_end:67|char_star:8,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:62,line_end:67|char_star:4,char_end:25"->"type='INFORMATION BLOCK'\nline_star:63,line_end:67|char_star:8,char_end:25";
"def get(self):\n            return 'GET',type='function_definition'\nline_star:63,line_end:64|char_star:8,char_end:24"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:63,line_end:67|char_star:8,char_end:25"->"def get(self):\n            return 'GET',type='function_definition'\nline_star:63,line_end:64|char_star:8,char_end:24";
"get,type='identifier'\nline_star:63,line_end:63|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:63,line_end:64|char_star:8,char_end:24"->"get,type='identifier'\nline_star:63,line_end:63|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:63,line_end:63|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:63,line_end:64|char_star:8,char_end:24"->"(self),type='parameters'\nline_star:63,line_end:63|char_star:15,char_end:21";
"self,type='identifier'\nline_star:63,line_end:63|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:63,line_end:63|char_star:15,char_end:21"->"self,type='identifier'\nline_star:63,line_end:63|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:64,line_end:64|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:63,line_end:64|char_star:8,char_end:24"->"type='INFORMATION BLOCK'\nline_star:64,line_end:64|char_star:12,char_end:24";
"return 'GET',type='return_statement'\nline_star:64,line_end:64|char_star:12,char_end:24"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:64,line_end:64|char_star:12,char_end:24"->"return 'GET',type='return_statement'\nline_star:64,line_end:64|char_star:12,char_end:24";
"def post(self):\n            return 'POST',type='function_definition'\nline_star:66,line_end:67|char_star:8,char_end:25"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:63,line_end:67|char_star:8,char_end:25"->"def post(self):\n            return 'POST',type='function_definition'\nline_star:66,line_end:67|char_star:8,char_end:25";
"post,type='identifier'\nline_star:66,line_end:66|char_star:12,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:66,line_end:67|char_star:8,char_end:25"->"post,type='identifier'\nline_star:66,line_end:66|char_star:12,char_end:16";
"(self),type='parameters'\nline_star:66,line_end:66|char_star:16,char_end:22"[shape="box",fillcolor="white",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:66,line_end:67|char_star:8,char_end:25"->"(self),type='parameters'\nline_star:66,line_end:66|char_star:16,char_end:22";
"self,type='identifier'\nline_star:66,line_end:66|char_star:17,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:66,line_end:66|char_star:16,char_end:22"->"self,type='identifier'\nline_star:66,line_end:66|char_star:17,char_end:21";
"type='INFORMATION BLOCK'\nline_star:67,line_end:67|char_star:12,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:66,line_end:67|char_star:8,char_end:25"->"type='INFORMATION BLOCK'\nline_star:67,line_end:67|char_star:12,char_end:25";
"return 'POST',type='return_statement'\nline_star:67,line_end:67|char_star:12,char_end:25"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:67,line_end:67|char_star:12,char_end:25"->"return 'POST',type='return_statement'\nline_star:67,line_end:67|char_star:12,char_end:25";
"class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:69,line_end:71|char_star:4,char_end:27"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:62,line_end:76|char_star:4,char_end:72"->"class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:69,line_end:71|char_star:4,char_end:27";
"BetterIndex,type='identifier'\nline_star:69,line_end:69|char_star:10,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:69,line_end:71|char_star:4,char_end:27"->"BetterIndex,type='identifier'\nline_star:69,line_end:69|char_star:10,char_end:21";
"(Index),type='argument_list'\nline_star:69,line_end:69|char_star:21,char_end:28"[shape="box",fillcolor="white",style=filled];
"class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:69,line_end:71|char_star:4,char_end:27"->"(Index),type='argument_list'\nline_star:69,line_end:69|char_star:21,char_end:28";
"Index,type='identifier'\nline_star:69,line_end:69|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"(Index),type='argument_list'\nline_star:69,line_end:69|char_star:21,char_end:28"->"Index,type='identifier'\nline_star:69,line_end:69|char_star:22,char_end:27";
"type='INFORMATION BLOCK'\nline_star:70,line_end:71|char_star:8,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"class BetterIndex(Index):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:69,line_end:71|char_star:4,char_end:27"->"type='INFORMATION BLOCK'\nline_star:70,line_end:71|char_star:8,char_end:27";
"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:70,line_end:71|char_star:8,char_end:27"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:70,line_end:71|char_star:8,char_end:27"->"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:70,line_end:71|char_star:8,char_end:27";
"delete,type='identifier'\nline_star:70,line_end:70|char_star:12,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:70,line_end:71|char_star:8,char_end:27"->"delete,type='identifier'\nline_star:70,line_end:70|char_star:12,char_end:18";
"(self),type='parameters'\nline_star:70,line_end:70|char_star:18,char_end:24"[shape="box",fillcolor="white",style=filled];
"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:70,line_end:71|char_star:8,char_end:27"->"(self),type='parameters'\nline_star:70,line_end:70|char_star:18,char_end:24";
"self,type='identifier'\nline_star:70,line_end:70|char_star:19,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:70,line_end:70|char_star:18,char_end:24"->"self,type='identifier'\nline_star:70,line_end:70|char_star:19,char_end:23";
"type='INFORMATION BLOCK'\nline_star:71,line_end:71|char_star:12,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:70,line_end:71|char_star:8,char_end:27"->"type='INFORMATION BLOCK'\nline_star:71,line_end:71|char_star:12,char_end:27";
"return 'DELETE',type='return_statement'\nline_star:71,line_end:71|char_star:12,char_end:27"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:71,line_end:71|char_star:12,char_end:27"->"return 'DELETE',type='return_statement'\nline_star:71,line_end:71|char_star:12,char_end:27";
"assert sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='assert_statement'\nline_star:76,line_end:76|char_star:4,char_end:72"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:62,line_end:76|char_star:4,char_end:72"->"assert sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='assert_statement'\nline_star:76,line_end:76|char_star:4,char_end:72";
"sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='comparison_operator'\nline_star:76,line_end:76|char_star:11,char_end:72"[shape="box",fillcolor="white",style=filled];
"assert sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='assert_statement'\nline_star:76,line_end:76|char_star:4,char_end:72"->"sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='comparison_operator'\nline_star:76,line_end:76|char_star:11,char_end:72";
"sorted(meths),type='call'\nline_star:76,line_end:76|char_star:11,char_end:24"[shape="box",fillcolor="white",style=filled];
"sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='comparison_operator'\nline_star:76,line_end:76|char_star:11,char_end:72"->"sorted(meths),type='call'\nline_star:76,line_end:76|char_star:11,char_end:24";
"sorted,type='identifier'\nline_star:76,line_end:76|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"sorted(meths),type='call'\nline_star:76,line_end:76|char_star:11,char_end:24"->"sorted,type='identifier'\nline_star:76,line_end:76|char_star:11,char_end:17";
"(meths),type='argument_list'\nline_star:76,line_end:76|char_star:17,char_end:24"[shape="box",fillcolor="white",style=filled];
"sorted(meths),type='call'\nline_star:76,line_end:76|char_star:11,char_end:24"->"(meths),type='argument_list'\nline_star:76,line_end:76|char_star:17,char_end:24";
"meths,type='identifier'\nline_star:76,line_end:76|char_star:18,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"(meths),type='argument_list'\nline_star:76,line_end:76|char_star:17,char_end:24"->"meths,type='identifier'\nline_star:76,line_end:76|char_star:18,char_end:23";
"['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='list'\nline_star:76,line_end:76|char_star:28,char_end:72"[shape="box",fillcolor="white",style=filled];
"sorted(meths) == ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='comparison_operator'\nline_star:76,line_end:76|char_star:11,char_end:72"->"['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST'],type='list'\nline_star:76,line_end:76|char_star:28,char_end:72";
"def test_view_decorators(app, client):\n    def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function\n\n    class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.headers['X-Parachute'] == 'awesome'\n    assert rv.data == b'Awesome',type='function_definition'\nline_star:79,line_end:97|char_star:0,char_end:32"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_view_decorators(app, client):\n    def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function\n\n    class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.headers['X-Parachute'] == 'awesome'\n    assert rv.data == b'Awesome',type='function_definition'\nline_star:79,line_end:97|char_star:0,char_end:32";
"test_view_decorators,type='identifier'\nline_star:79,line_end:79|char_star:4,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def test_view_decorators(app, client):\n    def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function\n\n    class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.headers['X-Parachute'] == 'awesome'\n    assert rv.data == b'Awesome',type='function_definition'\nline_star:79,line_end:97|char_star:0,char_end:32"->"test_view_decorators,type='identifier'\nline_star:79,line_end:79|char_star:4,char_end:24";
"(app, client),type='parameters'\nline_star:79,line_end:79|char_star:24,char_end:37"[shape="box",fillcolor="white",style=filled];
"def test_view_decorators(app, client):\n    def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function\n\n    class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.headers['X-Parachute'] == 'awesome'\n    assert rv.data == b'Awesome',type='function_definition'\nline_star:79,line_end:97|char_star:0,char_end:32"->"(app, client),type='parameters'\nline_star:79,line_end:79|char_star:24,char_end:37";
"app,type='identifier'\nline_star:79,line_end:79|char_star:25,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:79,line_end:79|char_star:24,char_end:37"->"app,type='identifier'\nline_star:79,line_end:79|char_star:25,char_end:28";
"client,type='identifier'\nline_star:79,line_end:79|char_star:30,char_end:36"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:79,line_end:79|char_star:24,char_end:37"->"client,type='identifier'\nline_star:79,line_end:79|char_star:30,char_end:36";
"type='INFORMATION BLOCK'\nline_star:80,line_end:97|char_star:4,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"def test_view_decorators(app, client):\n    def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function\n\n    class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome'\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.headers['X-Parachute'] == 'awesome'\n    assert rv.data == b'Awesome',type='function_definition'\nline_star:79,line_end:97|char_star:0,char_end:32"->"type='INFORMATION BLOCK'\nline_star:80,line_end:97|char_star:4,char_end:32";
"def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function,type='function_definition'\nline_star:80,line_end:86|char_star:4,char_end:27"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:80,line_end:97|char_star:4,char_end:32"->"def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function,type='function_definition'\nline_star:80,line_end:86|char_star:4,char_end:27";
"add_x_parachute,type='identifier'\nline_star:80,line_end:80|char_star:8,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function,type='function_definition'\nline_star:80,line_end:86|char_star:4,char_end:27"->"add_x_parachute,type='identifier'\nline_star:80,line_end:80|char_star:8,char_end:23";
"(f),type='parameters'\nline_star:80,line_end:80|char_star:23,char_end:26"[shape="box",fillcolor="white",style=filled];
"def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function,type='function_definition'\nline_star:80,line_end:86|char_star:4,char_end:27"->"(f),type='parameters'\nline_star:80,line_end:80|char_star:23,char_end:26";
"f,type='identifier'\nline_star:80,line_end:80|char_star:24,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"(f),type='parameters'\nline_star:80,line_end:80|char_star:23,char_end:26"->"f,type='identifier'\nline_star:80,line_end:80|char_star:24,char_end:25";
"type='INFORMATION BLOCK'\nline_star:81,line_end:86|char_star:8,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"def add_x_parachute(f):\n        def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp\n\n        return new_function,type='function_definition'\nline_star:80,line_end:86|char_star:4,char_end:27"->"type='INFORMATION BLOCK'\nline_star:81,line_end:86|char_star:8,char_end:27";
"def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp,type='function_definition'\nline_star:81,line_end:84|char_star:8,char_end:23"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:81,line_end:86|char_star:8,char_end:27"->"def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp,type='function_definition'\nline_star:81,line_end:84|char_star:8,char_end:23";
"new_function,type='identifier'\nline_star:81,line_end:81|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp,type='function_definition'\nline_star:81,line_end:84|char_star:8,char_end:23"->"new_function,type='identifier'\nline_star:81,line_end:81|char_star:12,char_end:24";
"(*args, **kwargs),type='parameters'\nline_star:81,line_end:81|char_star:24,char_end:41"[shape="box",fillcolor="white",style=filled];
"def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp,type='function_definition'\nline_star:81,line_end:84|char_star:8,char_end:23"->"(*args, **kwargs),type='parameters'\nline_star:81,line_end:81|char_star:24,char_end:41";
"*args,type='list_splat_pattern'\nline_star:81,line_end:81|char_star:25,char_end:30"[shape="box",fillcolor="white",style=filled];
"(*args, **kwargs),type='parameters'\nline_star:81,line_end:81|char_star:24,char_end:41"->"*args,type='list_splat_pattern'\nline_star:81,line_end:81|char_star:25,char_end:30";
"*,type='*'\nline_star:81,line_end:81|char_star:25,char_end:26"[shape="box",fillcolor="white",style=filled];
"*args,type='list_splat_pattern'\nline_star:81,line_end:81|char_star:25,char_end:30"->"*,type='*'\nline_star:81,line_end:81|char_star:25,char_end:26";
"args,type='identifier'\nline_star:81,line_end:81|char_star:26,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"*args,type='list_splat_pattern'\nline_star:81,line_end:81|char_star:25,char_end:30"->"args,type='identifier'\nline_star:81,line_end:81|char_star:26,char_end:30";
"**kwargs,type='dictionary_splat_pattern'\nline_star:81,line_end:81|char_star:32,char_end:40"[shape="box",fillcolor="white",style=filled];
"(*args, **kwargs),type='parameters'\nline_star:81,line_end:81|char_star:24,char_end:41"->"**kwargs,type='dictionary_splat_pattern'\nline_star:81,line_end:81|char_star:32,char_end:40";
"**,type='**'\nline_star:81,line_end:81|char_star:32,char_end:34"[shape="box",fillcolor="white",style=filled];
"**kwargs,type='dictionary_splat_pattern'\nline_star:81,line_end:81|char_star:32,char_end:40"->"**,type='**'\nline_star:81,line_end:81|char_star:32,char_end:34";
"kwargs,type='identifier'\nline_star:81,line_end:81|char_star:34,char_end:40"[shape="point",fillcolor="#121013",style=filled];
"**kwargs,type='dictionary_splat_pattern'\nline_star:81,line_end:81|char_star:32,char_end:40"->"kwargs,type='identifier'\nline_star:81,line_end:81|char_star:34,char_end:40";
"type='INFORMATION BLOCK'\nline_star:82,line_end:84|char_star:12,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"def new_function(*args, **kwargs):\n            resp = flask.make_response(f(*args, **kwargs))\n            resp.headers['X-Parachute'] = 'awesome'\n            return resp,type='function_definition'\nline_star:81,line_end:84|char_star:8,char_end:23"->"type='INFORMATION BLOCK'\nline_star:82,line_end:84|char_star:12,char_end:23";
"return resp,type='return_statement'\nline_star:84,line_end:84|char_star:12,char_end:23"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:82,line_end:84|char_star:12,char_end:23"->"return resp,type='return_statement'\nline_star:84,line_end:84|char_star:12,char_end:23";
"return new_function,type='return_statement'\nline_star:86,line_end:86|char_star:8,char_end:27"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:81,line_end:86|char_star:8,char_end:27"->"return new_function,type='return_statement'\nline_star:86,line_end:86|char_star:8,char_end:27";
"class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome',type='class_definition'\nline_star:88,line_end:92|char_star:4,char_end:28"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:80,line_end:97|char_star:4,char_end:32"->"class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome',type='class_definition'\nline_star:88,line_end:92|char_star:4,char_end:28";
"Index,type='identifier'\nline_star:88,line_end:88|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome',type='class_definition'\nline_star:88,line_end:92|char_star:4,char_end:28"->"Index,type='identifier'\nline_star:88,line_end:88|char_star:10,char_end:15";
"(flask.views.View),type='argument_list'\nline_star:88,line_end:88|char_star:15,char_end:33"[shape="box",fillcolor="white",style=filled];
"class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome',type='class_definition'\nline_star:88,line_end:92|char_star:4,char_end:28"->"(flask.views.View),type='argument_list'\nline_star:88,line_end:88|char_star:15,char_end:33";
"flask.views.View,type='attribute'\nline_star:88,line_end:88|char_star:16,char_end:32"[shape="box",fillcolor="white",style=filled];
"(flask.views.View),type='argument_list'\nline_star:88,line_end:88|char_star:15,char_end:33"->"flask.views.View,type='attribute'\nline_star:88,line_end:88|char_star:16,char_end:32";
"flask.views,type='attribute'\nline_star:88,line_end:88|char_star:16,char_end:27"[shape="box",fillcolor="white",style=filled];
"flask.views.View,type='attribute'\nline_star:88,line_end:88|char_star:16,char_end:32"->"flask.views,type='attribute'\nline_star:88,line_end:88|char_star:16,char_end:27";
"flask,type='identifier'\nline_star:88,line_end:88|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:88,line_end:88|char_star:16,char_end:27"->"flask,type='identifier'\nline_star:88,line_end:88|char_star:16,char_end:21";
"views,type='identifier'\nline_star:88,line_end:88|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:88,line_end:88|char_star:16,char_end:27"->"views,type='identifier'\nline_star:88,line_end:88|char_star:22,char_end:27";
"View,type='identifier'\nline_star:88,line_end:88|char_star:28,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"flask.views.View,type='attribute'\nline_star:88,line_end:88|char_star:16,char_end:32"->"View,type='identifier'\nline_star:88,line_end:88|char_star:28,char_end:32";
"type='INFORMATION BLOCK'\nline_star:89,line_end:92|char_star:8,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.View):\n        decorators = [add_x_parachute]\n\n        def dispatch_request(self):\n            return 'Awesome',type='class_definition'\nline_star:88,line_end:92|char_star:4,char_end:28"->"type='INFORMATION BLOCK'\nline_star:89,line_end:92|char_star:8,char_end:28";
"def dispatch_request(self):\n            return 'Awesome',type='function_definition'\nline_star:91,line_end:92|char_star:8,char_end:28"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:89,line_end:92|char_star:8,char_end:28"->"def dispatch_request(self):\n            return 'Awesome',type='function_definition'\nline_star:91,line_end:92|char_star:8,char_end:28";
"dispatch_request,type='identifier'\nline_star:91,line_end:91|char_star:12,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return 'Awesome',type='function_definition'\nline_star:91,line_end:92|char_star:8,char_end:28"->"dispatch_request,type='identifier'\nline_star:91,line_end:91|char_star:12,char_end:28";
"(self),type='parameters'\nline_star:91,line_end:91|char_star:28,char_end:34"[shape="box",fillcolor="white",style=filled];
"def dispatch_request(self):\n            return 'Awesome',type='function_definition'\nline_star:91,line_end:92|char_star:8,char_end:28"->"(self),type='parameters'\nline_star:91,line_end:91|char_star:28,char_end:34";
"self,type='identifier'\nline_star:91,line_end:91|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:91,line_end:91|char_star:28,char_end:34"->"self,type='identifier'\nline_star:91,line_end:91|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:92,line_end:92|char_star:12,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return 'Awesome',type='function_definition'\nline_star:91,line_end:92|char_star:8,char_end:28"->"type='INFORMATION BLOCK'\nline_star:92,line_end:92|char_star:12,char_end:28";
"return 'Awesome',type='return_statement'\nline_star:92,line_end:92|char_star:12,char_end:28"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:92,line_end:92|char_star:12,char_end:28"->"return 'Awesome',type='return_statement'\nline_star:92,line_end:92|char_star:12,char_end:28";
"assert rv.headers['X-Parachute'] == 'awesome',type='assert_statement'\nline_star:96,line_end:96|char_star:4,char_end:49"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:80,line_end:97|char_star:4,char_end:32"->"assert rv.headers['X-Parachute'] == 'awesome',type='assert_statement'\nline_star:96,line_end:96|char_star:4,char_end:49";
"rv.headers['X-Parachute'] == 'awesome',type='comparison_operator'\nline_star:96,line_end:96|char_star:11,char_end:49"[shape="box",fillcolor="white",style=filled];
"assert rv.headers['X-Parachute'] == 'awesome',type='assert_statement'\nline_star:96,line_end:96|char_star:4,char_end:49"->"rv.headers['X-Parachute'] == 'awesome',type='comparison_operator'\nline_star:96,line_end:96|char_star:11,char_end:49";
"rv.headers['X-Parachute'],type='subscript'\nline_star:96,line_end:96|char_star:11,char_end:36"[shape="box",fillcolor="white",style=filled];
"rv.headers['X-Parachute'] == 'awesome',type='comparison_operator'\nline_star:96,line_end:96|char_star:11,char_end:49"->"rv.headers['X-Parachute'],type='subscript'\nline_star:96,line_end:96|char_star:11,char_end:36";
"rv.headers,type='attribute'\nline_star:96,line_end:96|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"rv.headers['X-Parachute'],type='subscript'\nline_star:96,line_end:96|char_star:11,char_end:36"->"rv.headers,type='attribute'\nline_star:96,line_end:96|char_star:11,char_end:21";
"rv,type='identifier'\nline_star:96,line_end:96|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.headers,type='attribute'\nline_star:96,line_end:96|char_star:11,char_end:21"->"rv,type='identifier'\nline_star:96,line_end:96|char_star:11,char_end:13";
"headers,type='identifier'\nline_star:96,line_end:96|char_star:14,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"rv.headers,type='attribute'\nline_star:96,line_end:96|char_star:11,char_end:21"->"headers,type='identifier'\nline_star:96,line_end:96|char_star:14,char_end:21";
"assert rv.data == b'Awesome',type='assert_statement'\nline_star:97,line_end:97|char_star:4,char_end:32"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:80,line_end:97|char_star:4,char_end:32"->"assert rv.data == b'Awesome',type='assert_statement'\nline_star:97,line_end:97|char_star:4,char_end:32";
"rv.data == b'Awesome',type='comparison_operator'\nline_star:97,line_end:97|char_star:11,char_end:32"[shape="box",fillcolor="white",style=filled];
"assert rv.data == b'Awesome',type='assert_statement'\nline_star:97,line_end:97|char_star:4,char_end:32"->"rv.data == b'Awesome',type='comparison_operator'\nline_star:97,line_end:97|char_star:11,char_end:32";
"rv.data,type='attribute'\nline_star:97,line_end:97|char_star:11,char_end:18"[shape="box",fillcolor="white",style=filled];
"rv.data == b'Awesome',type='comparison_operator'\nline_star:97,line_end:97|char_star:11,char_end:32"->"rv.data,type='attribute'\nline_star:97,line_end:97|char_star:11,char_end:18";
"rv,type='identifier'\nline_star:97,line_end:97|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:97,line_end:97|char_star:11,char_end:18"->"rv,type='identifier'\nline_star:97,line_end:97|char_star:11,char_end:13";
"data,type='identifier'\nline_star:97,line_end:97|char_star:14,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:97,line_end:97|char_star:11,char_end:18"->"data,type='identifier'\nline_star:97,line_end:97|char_star:14,char_end:18";
"def test_view_provide_automatic_options_attr():\n    app = flask.Flask(__name__)\n\n    class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index1.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert rv.status_code == 405\n\n    app = flask.Flask(__name__)\n\n    class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index2.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert sorted(rv.allow) == ['OPTIONS']\n\n    app = flask.Flask(__name__)\n\n    class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index3.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert 'OPTIONS' in rv.allow,type='function_definition'\nline_star:100,line_end:137|char_star:0,char_end:32"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_view_provide_automatic_options_attr():\n    app = flask.Flask(__name__)\n\n    class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index1.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert rv.status_code == 405\n\n    app = flask.Flask(__name__)\n\n    class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index2.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert sorted(rv.allow) == ['OPTIONS']\n\n    app = flask.Flask(__name__)\n\n    class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index3.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert 'OPTIONS' in rv.allow,type='function_definition'\nline_star:100,line_end:137|char_star:0,char_end:32";
"test_view_provide_automatic_options_attr,type='identifier'\nline_star:100,line_end:100|char_star:4,char_end:44"[shape="point",fillcolor="#121013",style=filled];
"def test_view_provide_automatic_options_attr():\n    app = flask.Flask(__name__)\n\n    class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index1.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert rv.status_code == 405\n\n    app = flask.Flask(__name__)\n\n    class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index2.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert sorted(rv.allow) == ['OPTIONS']\n\n    app = flask.Flask(__name__)\n\n    class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index3.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert 'OPTIONS' in rv.allow,type='function_definition'\nline_star:100,line_end:137|char_star:0,char_end:32"->"test_view_provide_automatic_options_attr,type='identifier'\nline_star:100,line_end:100|char_star:4,char_end:44";
"type='INFORMATION BLOCK'\nline_star:101,line_end:137|char_star:4,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"def test_view_provide_automatic_options_attr():\n    app = flask.Flask(__name__)\n\n    class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index1.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert rv.status_code == 405\n\n    app = flask.Flask(__name__)\n\n    class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index2.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert sorted(rv.allow) == ['OPTIONS']\n\n    app = flask.Flask(__name__)\n\n    class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!'\n\n    app.add_url_rule('/', view_func=Index3.as_view('index'))\n    c = app.test_client()\n    rv = c.open('/', method='OPTIONS')\n    assert 'OPTIONS' in rv.allow,type='function_definition'\nline_star:100,line_end:137|char_star:0,char_end:32"->"type='INFORMATION BLOCK'\nline_star:101,line_end:137|char_star:4,char_end:32";
"class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:103,line_end:107|char_star:4,char_end:33"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:101,line_end:137|char_star:4,char_end:32"->"class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:103,line_end:107|char_star:4,char_end:33";
"Index1,type='identifier'\nline_star:103,line_end:103|char_star:10,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:103,line_end:107|char_star:4,char_end:33"->"Index1,type='identifier'\nline_star:103,line_end:103|char_star:10,char_end:16";
"(flask.views.View),type='argument_list'\nline_star:103,line_end:103|char_star:16,char_end:34"[shape="box",fillcolor="white",style=filled];
"class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:103,line_end:107|char_star:4,char_end:33"->"(flask.views.View),type='argument_list'\nline_star:103,line_end:103|char_star:16,char_end:34";
"flask.views.View,type='attribute'\nline_star:103,line_end:103|char_star:17,char_end:33"[shape="box",fillcolor="white",style=filled];
"(flask.views.View),type='argument_list'\nline_star:103,line_end:103|char_star:16,char_end:34"->"flask.views.View,type='attribute'\nline_star:103,line_end:103|char_star:17,char_end:33";
"flask.views,type='attribute'\nline_star:103,line_end:103|char_star:17,char_end:28"[shape="box",fillcolor="white",style=filled];
"flask.views.View,type='attribute'\nline_star:103,line_end:103|char_star:17,char_end:33"->"flask.views,type='attribute'\nline_star:103,line_end:103|char_star:17,char_end:28";
"flask,type='identifier'\nline_star:103,line_end:103|char_star:17,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:103,line_end:103|char_star:17,char_end:28"->"flask,type='identifier'\nline_star:103,line_end:103|char_star:17,char_end:22";
"views,type='identifier'\nline_star:103,line_end:103|char_star:23,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:103,line_end:103|char_star:17,char_end:28"->"views,type='identifier'\nline_star:103,line_end:103|char_star:23,char_end:28";
"View,type='identifier'\nline_star:103,line_end:103|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"flask.views.View,type='attribute'\nline_star:103,line_end:103|char_star:17,char_end:33"->"View,type='identifier'\nline_star:103,line_end:103|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:104,line_end:107|char_star:8,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:103,line_end:107|char_star:4,char_end:33"->"type='INFORMATION BLOCK'\nline_star:104,line_end:107|char_star:8,char_end:33";
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:106,line_end:107|char_star:8,char_end:33"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:104,line_end:107|char_star:8,char_end:33"->"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:106,line_end:107|char_star:8,char_end:33";
"dispatch_request,type='identifier'\nline_star:106,line_end:106|char_star:12,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:106,line_end:107|char_star:8,char_end:33"->"dispatch_request,type='identifier'\nline_star:106,line_end:106|char_star:12,char_end:28";
"(self),type='parameters'\nline_star:106,line_end:106|char_star:28,char_end:34"[shape="box",fillcolor="white",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:106,line_end:107|char_star:8,char_end:33"->"(self),type='parameters'\nline_star:106,line_end:106|char_star:28,char_end:34";
"self,type='identifier'\nline_star:106,line_end:106|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:106,line_end:106|char_star:28,char_end:34"->"self,type='identifier'\nline_star:106,line_end:106|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:107,line_end:107|char_star:12,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:106,line_end:107|char_star:8,char_end:33"->"type='INFORMATION BLOCK'\nline_star:107,line_end:107|char_star:12,char_end:33";
"return 'Hello World!',type='return_statement'\nline_star:107,line_end:107|char_star:12,char_end:33"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:107,line_end:107|char_star:12,char_end:33"->"return 'Hello World!',type='return_statement'\nline_star:107,line_end:107|char_star:12,char_end:33";
"assert rv.status_code == 405,type='assert_statement'\nline_star:112,line_end:112|char_star:4,char_end:32"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:101,line_end:137|char_star:4,char_end:32"->"assert rv.status_code == 405,type='assert_statement'\nline_star:112,line_end:112|char_star:4,char_end:32";
"rv.status_code == 405,type='comparison_operator'\nline_star:112,line_end:112|char_star:11,char_end:32"[shape="box",fillcolor="white",style=filled];
"assert rv.status_code == 405,type='assert_statement'\nline_star:112,line_end:112|char_star:4,char_end:32"->"rv.status_code == 405,type='comparison_operator'\nline_star:112,line_end:112|char_star:11,char_end:32";
"rv.status_code,type='attribute'\nline_star:112,line_end:112|char_star:11,char_end:25"[shape="box",fillcolor="white",style=filled];
"rv.status_code == 405,type='comparison_operator'\nline_star:112,line_end:112|char_star:11,char_end:32"->"rv.status_code,type='attribute'\nline_star:112,line_end:112|char_star:11,char_end:25";
"rv,type='identifier'\nline_star:112,line_end:112|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.status_code,type='attribute'\nline_star:112,line_end:112|char_star:11,char_end:25"->"rv,type='identifier'\nline_star:112,line_end:112|char_star:11,char_end:13";
"status_code,type='identifier'\nline_star:112,line_end:112|char_star:14,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"rv.status_code,type='attribute'\nline_star:112,line_end:112|char_star:11,char_end:25"->"status_code,type='identifier'\nline_star:112,line_end:112|char_star:14,char_end:25";
"class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:116,line_end:121|char_star:4,char_end:33"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:101,line_end:137|char_star:4,char_end:32"->"class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:116,line_end:121|char_star:4,char_end:33";
"Index2,type='identifier'\nline_star:116,line_end:116|char_star:10,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:116,line_end:121|char_star:4,char_end:33"->"Index2,type='identifier'\nline_star:116,line_end:116|char_star:10,char_end:16";
"(flask.views.View),type='argument_list'\nline_star:116,line_end:116|char_star:16,char_end:34"[shape="box",fillcolor="white",style=filled];
"class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:116,line_end:121|char_star:4,char_end:33"->"(flask.views.View),type='argument_list'\nline_star:116,line_end:116|char_star:16,char_end:34";
"flask.views.View,type='attribute'\nline_star:116,line_end:116|char_star:17,char_end:33"[shape="box",fillcolor="white",style=filled];
"(flask.views.View),type='argument_list'\nline_star:116,line_end:116|char_star:16,char_end:34"->"flask.views.View,type='attribute'\nline_star:116,line_end:116|char_star:17,char_end:33";
"flask.views,type='attribute'\nline_star:116,line_end:116|char_star:17,char_end:28"[shape="box",fillcolor="white",style=filled];
"flask.views.View,type='attribute'\nline_star:116,line_end:116|char_star:17,char_end:33"->"flask.views,type='attribute'\nline_star:116,line_end:116|char_star:17,char_end:28";
"flask,type='identifier'\nline_star:116,line_end:116|char_star:17,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:116,line_end:116|char_star:17,char_end:28"->"flask,type='identifier'\nline_star:116,line_end:116|char_star:17,char_end:22";
"views,type='identifier'\nline_star:116,line_end:116|char_star:23,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:116,line_end:116|char_star:17,char_end:28"->"views,type='identifier'\nline_star:116,line_end:116|char_star:23,char_end:28";
"View,type='identifier'\nline_star:116,line_end:116|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"flask.views.View,type='attribute'\nline_star:116,line_end:116|char_star:17,char_end:33"->"View,type='identifier'\nline_star:116,line_end:116|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:117,line_end:121|char_star:8,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"class Index2(flask.views.View):\n        methods = ['OPTIONS']\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:116,line_end:121|char_star:4,char_end:33"->"type='INFORMATION BLOCK'\nline_star:117,line_end:121|char_star:8,char_end:33";
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:120,line_end:121|char_star:8,char_end:33"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:117,line_end:121|char_star:8,char_end:33"->"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:120,line_end:121|char_star:8,char_end:33";
"dispatch_request,type='identifier'\nline_star:120,line_end:120|char_star:12,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:120,line_end:121|char_star:8,char_end:33"->"dispatch_request,type='identifier'\nline_star:120,line_end:120|char_star:12,char_end:28";
"(self),type='parameters'\nline_star:120,line_end:120|char_star:28,char_end:34"[shape="box",fillcolor="white",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:120,line_end:121|char_star:8,char_end:33"->"(self),type='parameters'\nline_star:120,line_end:120|char_star:28,char_end:34";
"self,type='identifier'\nline_star:120,line_end:120|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:120,line_end:120|char_star:28,char_end:34"->"self,type='identifier'\nline_star:120,line_end:120|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:121,line_end:121|char_star:12,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:120,line_end:121|char_star:8,char_end:33"->"type='INFORMATION BLOCK'\nline_star:121,line_end:121|char_star:12,char_end:33";
"return 'Hello World!',type='return_statement'\nline_star:121,line_end:121|char_star:12,char_end:33"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:121,line_end:121|char_star:12,char_end:33"->"return 'Hello World!',type='return_statement'\nline_star:121,line_end:121|char_star:12,char_end:33";
"assert sorted(rv.allow) == ['OPTIONS'],type='assert_statement'\nline_star:126,line_end:126|char_star:4,char_end:42"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:101,line_end:137|char_star:4,char_end:32"->"assert sorted(rv.allow) == ['OPTIONS'],type='assert_statement'\nline_star:126,line_end:126|char_star:4,char_end:42";
"sorted(rv.allow) == ['OPTIONS'],type='comparison_operator'\nline_star:126,line_end:126|char_star:11,char_end:42"[shape="box",fillcolor="white",style=filled];
"assert sorted(rv.allow) == ['OPTIONS'],type='assert_statement'\nline_star:126,line_end:126|char_star:4,char_end:42"->"sorted(rv.allow) == ['OPTIONS'],type='comparison_operator'\nline_star:126,line_end:126|char_star:11,char_end:42";
"sorted(rv.allow),type='call'\nline_star:126,line_end:126|char_star:11,char_end:27"[shape="box",fillcolor="white",style=filled];
"sorted(rv.allow) == ['OPTIONS'],type='comparison_operator'\nline_star:126,line_end:126|char_star:11,char_end:42"->"sorted(rv.allow),type='call'\nline_star:126,line_end:126|char_star:11,char_end:27";
"sorted,type='identifier'\nline_star:126,line_end:126|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"sorted(rv.allow),type='call'\nline_star:126,line_end:126|char_star:11,char_end:27"->"sorted,type='identifier'\nline_star:126,line_end:126|char_star:11,char_end:17";
"(rv.allow),type='argument_list'\nline_star:126,line_end:126|char_star:17,char_end:27"[shape="box",fillcolor="white",style=filled];
"sorted(rv.allow),type='call'\nline_star:126,line_end:126|char_star:11,char_end:27"->"(rv.allow),type='argument_list'\nline_star:126,line_end:126|char_star:17,char_end:27";
"rv.allow,type='attribute'\nline_star:126,line_end:126|char_star:18,char_end:26"[shape="box",fillcolor="white",style=filled];
"(rv.allow),type='argument_list'\nline_star:126,line_end:126|char_star:17,char_end:27"->"rv.allow,type='attribute'\nline_star:126,line_end:126|char_star:18,char_end:26";
"rv,type='identifier'\nline_star:126,line_end:126|char_star:18,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"rv.allow,type='attribute'\nline_star:126,line_end:126|char_star:18,char_end:26"->"rv,type='identifier'\nline_star:126,line_end:126|char_star:18,char_end:20";
"allow,type='identifier'\nline_star:126,line_end:126|char_star:21,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"rv.allow,type='attribute'\nline_star:126,line_end:126|char_star:18,char_end:26"->"allow,type='identifier'\nline_star:126,line_end:126|char_star:21,char_end:26";
"['OPTIONS'],type='list'\nline_star:126,line_end:126|char_star:31,char_end:42"[shape="box",fillcolor="white",style=filled];
"sorted(rv.allow) == ['OPTIONS'],type='comparison_operator'\nline_star:126,line_end:126|char_star:11,char_end:42"->"['OPTIONS'],type='list'\nline_star:126,line_end:126|char_star:31,char_end:42";
"class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:130,line_end:132|char_star:4,char_end:33"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:101,line_end:137|char_star:4,char_end:32"->"class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:130,line_end:132|char_star:4,char_end:33";
"Index3,type='identifier'\nline_star:130,line_end:130|char_star:10,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:130,line_end:132|char_star:4,char_end:33"->"Index3,type='identifier'\nline_star:130,line_end:130|char_star:10,char_end:16";
"(flask.views.View),type='argument_list'\nline_star:130,line_end:130|char_star:16,char_end:34"[shape="box",fillcolor="white",style=filled];
"class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:130,line_end:132|char_star:4,char_end:33"->"(flask.views.View),type='argument_list'\nline_star:130,line_end:130|char_star:16,char_end:34";
"flask.views.View,type='attribute'\nline_star:130,line_end:130|char_star:17,char_end:33"[shape="box",fillcolor="white",style=filled];
"(flask.views.View),type='argument_list'\nline_star:130,line_end:130|char_star:16,char_end:34"->"flask.views.View,type='attribute'\nline_star:130,line_end:130|char_star:17,char_end:33";
"flask.views,type='attribute'\nline_star:130,line_end:130|char_star:17,char_end:28"[shape="box",fillcolor="white",style=filled];
"flask.views.View,type='attribute'\nline_star:130,line_end:130|char_star:17,char_end:33"->"flask.views,type='attribute'\nline_star:130,line_end:130|char_star:17,char_end:28";
"flask,type='identifier'\nline_star:130,line_end:130|char_star:17,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:130,line_end:130|char_star:17,char_end:28"->"flask,type='identifier'\nline_star:130,line_end:130|char_star:17,char_end:22";
"views,type='identifier'\nline_star:130,line_end:130|char_star:23,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:130,line_end:130|char_star:17,char_end:28"->"views,type='identifier'\nline_star:130,line_end:130|char_star:23,char_end:28";
"View,type='identifier'\nline_star:130,line_end:130|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"flask.views.View,type='attribute'\nline_star:130,line_end:130|char_star:17,char_end:33"->"View,type='identifier'\nline_star:130,line_end:130|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:131,line_end:132|char_star:8,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"class Index3(flask.views.View):\n        def dispatch_request(self):\n            return 'Hello World!',type='class_definition'\nline_star:130,line_end:132|char_star:4,char_end:33"->"type='INFORMATION BLOCK'\nline_star:131,line_end:132|char_star:8,char_end:33";
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:131,line_end:132|char_star:8,char_end:33"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:131,line_end:132|char_star:8,char_end:33"->"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:131,line_end:132|char_star:8,char_end:33";
"dispatch_request,type='identifier'\nline_star:131,line_end:131|char_star:12,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:131,line_end:132|char_star:8,char_end:33"->"dispatch_request,type='identifier'\nline_star:131,line_end:131|char_star:12,char_end:28";
"(self),type='parameters'\nline_star:131,line_end:131|char_star:28,char_end:34"[shape="box",fillcolor="white",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:131,line_end:132|char_star:8,char_end:33"->"(self),type='parameters'\nline_star:131,line_end:131|char_star:28,char_end:34";
"self,type='identifier'\nline_star:131,line_end:131|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:131,line_end:131|char_star:28,char_end:34"->"self,type='identifier'\nline_star:131,line_end:131|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:132,line_end:132|char_star:12,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return 'Hello World!',type='function_definition'\nline_star:131,line_end:132|char_star:8,char_end:33"->"type='INFORMATION BLOCK'\nline_star:132,line_end:132|char_star:12,char_end:33";
"return 'Hello World!',type='return_statement'\nline_star:132,line_end:132|char_star:12,char_end:33"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:132,line_end:132|char_star:12,char_end:33"->"return 'Hello World!',type='return_statement'\nline_star:132,line_end:132|char_star:12,char_end:33";
"assert 'OPTIONS' in rv.allow,type='assert_statement'\nline_star:137,line_end:137|char_star:4,char_end:32"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:101,line_end:137|char_star:4,char_end:32"->"assert 'OPTIONS' in rv.allow,type='assert_statement'\nline_star:137,line_end:137|char_star:4,char_end:32";
"'OPTIONS' in rv.allow,type='comparison_operator'\nline_star:137,line_end:137|char_star:11,char_end:32"[shape="box",fillcolor="white",style=filled];
"assert 'OPTIONS' in rv.allow,type='assert_statement'\nline_star:137,line_end:137|char_star:4,char_end:32"->"'OPTIONS' in rv.allow,type='comparison_operator'\nline_star:137,line_end:137|char_star:11,char_end:32";
"rv.allow,type='attribute'\nline_star:137,line_end:137|char_star:24,char_end:32"[shape="box",fillcolor="white",style=filled];
"'OPTIONS' in rv.allow,type='comparison_operator'\nline_star:137,line_end:137|char_star:11,char_end:32"->"rv.allow,type='attribute'\nline_star:137,line_end:137|char_star:24,char_end:32";
"rv,type='identifier'\nline_star:137,line_end:137|char_star:24,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"rv.allow,type='attribute'\nline_star:137,line_end:137|char_star:24,char_end:32"->"rv,type='identifier'\nline_star:137,line_end:137|char_star:24,char_end:26";
"allow,type='identifier'\nline_star:137,line_end:137|char_star:27,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"rv.allow,type='attribute'\nline_star:137,line_end:137|char_star:24,char_end:32"->"allow,type='identifier'\nline_star:137,line_end:137|char_star:27,char_end:32";
"def test_implicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'Blub'\n    assert rv.headers['X-Method'] == 'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:140,line_end:151|char_star:0,char_end:43"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_implicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'Blub'\n    assert rv.headers['X-Method'] == 'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:140,line_end:151|char_star:0,char_end:43";
"test_implicit_head,type='identifier'\nline_star:140,line_end:140|char_star:4,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"def test_implicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'Blub'\n    assert rv.headers['X-Method'] == 'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:140,line_end:151|char_star:0,char_end:43"->"test_implicit_head,type='identifier'\nline_star:140,line_end:140|char_star:4,char_end:22";
"(app, client),type='parameters'\nline_star:140,line_end:140|char_star:22,char_end:35"[shape="box",fillcolor="white",style=filled];
"def test_implicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'Blub'\n    assert rv.headers['X-Method'] == 'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:140,line_end:151|char_star:0,char_end:43"->"(app, client),type='parameters'\nline_star:140,line_end:140|char_star:22,char_end:35";
"app,type='identifier'\nline_star:140,line_end:140|char_star:23,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:140,line_end:140|char_star:22,char_end:35"->"app,type='identifier'\nline_star:140,line_end:140|char_star:23,char_end:26";
"client,type='identifier'\nline_star:140,line_end:140|char_star:28,char_end:34"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:140,line_end:140|char_star:22,char_end:35"->"client,type='identifier'\nline_star:140,line_end:140|char_star:28,char_end:34";
"type='INFORMATION BLOCK'\nline_star:141,line_end:151|char_star:4,char_end:43"[shape="point",fillcolor="#121013",style=filled];
"def test_implicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'Blub'\n    assert rv.headers['X-Method'] == 'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:140,line_end:151|char_star:0,char_end:43"->"type='INFORMATION BLOCK'\nline_star:141,line_end:151|char_star:4,char_end:43";
"class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='class_definition'\nline_star:141,line_end:143|char_star:4,char_end:85"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:141,line_end:151|char_star:4,char_end:43"->"class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='class_definition'\nline_star:141,line_end:143|char_star:4,char_end:85";
"Index,type='identifier'\nline_star:141,line_end:141|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='class_definition'\nline_star:141,line_end:143|char_star:4,char_end:85"->"Index,type='identifier'\nline_star:141,line_end:141|char_star:10,char_end:15";
"(flask.views.MethodView),type='argument_list'\nline_star:141,line_end:141|char_star:15,char_end:39"[shape="box",fillcolor="white",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='class_definition'\nline_star:141,line_end:143|char_star:4,char_end:85"->"(flask.views.MethodView),type='argument_list'\nline_star:141,line_end:141|char_star:15,char_end:39";
"flask.views.MethodView,type='attribute'\nline_star:141,line_end:141|char_star:16,char_end:38"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:141,line_end:141|char_star:15,char_end:39"->"flask.views.MethodView,type='attribute'\nline_star:141,line_end:141|char_star:16,char_end:38";
"flask.views,type='attribute'\nline_star:141,line_end:141|char_star:16,char_end:27"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:141,line_end:141|char_star:16,char_end:38"->"flask.views,type='attribute'\nline_star:141,line_end:141|char_star:16,char_end:27";
"flask,type='identifier'\nline_star:141,line_end:141|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:141,line_end:141|char_star:16,char_end:27"->"flask,type='identifier'\nline_star:141,line_end:141|char_star:16,char_end:21";
"views,type='identifier'\nline_star:141,line_end:141|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:141,line_end:141|char_star:16,char_end:27"->"views,type='identifier'\nline_star:141,line_end:141|char_star:22,char_end:27";
"MethodView,type='identifier'\nline_star:141,line_end:141|char_star:28,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:141,line_end:141|char_star:16,char_end:38"->"MethodView,type='identifier'\nline_star:141,line_end:141|char_star:28,char_end:38";
"type='INFORMATION BLOCK'\nline_star:142,line_end:143|char_star:8,char_end:85"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='class_definition'\nline_star:141,line_end:143|char_star:4,char_end:85"->"type='INFORMATION BLOCK'\nline_star:142,line_end:143|char_star:8,char_end:85";
"def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='function_definition'\nline_star:142,line_end:143|char_star:8,char_end:85"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:142,line_end:143|char_star:8,char_end:85"->"def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='function_definition'\nline_star:142,line_end:143|char_star:8,char_end:85";
"get,type='identifier'\nline_star:142,line_end:142|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='function_definition'\nline_star:142,line_end:143|char_star:8,char_end:85"->"get,type='identifier'\nline_star:142,line_end:142|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:142,line_end:142|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='function_definition'\nline_star:142,line_end:143|char_star:8,char_end:85"->"(self),type='parameters'\nline_star:142,line_end:142|char_star:15,char_end:21";
"self,type='identifier'\nline_star:142,line_end:142|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:142,line_end:142|char_star:15,char_end:21"->"self,type='identifier'\nline_star:142,line_end:142|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:143,line_end:143|char_star:12,char_end:85"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='function_definition'\nline_star:142,line_end:143|char_star:8,char_end:85"->"type='INFORMATION BLOCK'\nline_star:143,line_end:143|char_star:12,char_end:85";
"return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='return_statement'\nline_star:143,line_end:143|char_star:12,char_end:85"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:143,line_end:143|char_star:12,char_end:85"->"return flask.Response('Blub', headers={'X-Method': flask.request.method}),type='return_statement'\nline_star:143,line_end:143|char_star:12,char_end:85";
"assert rv.data == b'Blub',type='assert_statement'\nline_star:147,line_end:147|char_star:4,char_end:29"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:141,line_end:151|char_star:4,char_end:43"->"assert rv.data == b'Blub',type='assert_statement'\nline_star:147,line_end:147|char_star:4,char_end:29";
"rv.data == b'Blub',type='comparison_operator'\nline_star:147,line_end:147|char_star:11,char_end:29"[shape="box",fillcolor="white",style=filled];
"assert rv.data == b'Blub',type='assert_statement'\nline_star:147,line_end:147|char_star:4,char_end:29"->"rv.data == b'Blub',type='comparison_operator'\nline_star:147,line_end:147|char_star:11,char_end:29";
"rv.data,type='attribute'\nline_star:147,line_end:147|char_star:11,char_end:18"[shape="box",fillcolor="white",style=filled];
"rv.data == b'Blub',type='comparison_operator'\nline_star:147,line_end:147|char_star:11,char_end:29"->"rv.data,type='attribute'\nline_star:147,line_end:147|char_star:11,char_end:18";
"rv,type='identifier'\nline_star:147,line_end:147|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:147,line_end:147|char_star:11,char_end:18"->"rv,type='identifier'\nline_star:147,line_end:147|char_star:11,char_end:13";
"data,type='identifier'\nline_star:147,line_end:147|char_star:14,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:147,line_end:147|char_star:11,char_end:18"->"data,type='identifier'\nline_star:147,line_end:147|char_star:14,char_end:18";
"assert rv.headers['X-Method'] == 'GET',type='assert_statement'\nline_star:148,line_end:148|char_star:4,char_end:42"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:141,line_end:151|char_star:4,char_end:43"->"assert rv.headers['X-Method'] == 'GET',type='assert_statement'\nline_star:148,line_end:148|char_star:4,char_end:42";
"rv.headers['X-Method'] == 'GET',type='comparison_operator'\nline_star:148,line_end:148|char_star:11,char_end:42"[shape="box",fillcolor="white",style=filled];
"assert rv.headers['X-Method'] == 'GET',type='assert_statement'\nline_star:148,line_end:148|char_star:4,char_end:42"->"rv.headers['X-Method'] == 'GET',type='comparison_operator'\nline_star:148,line_end:148|char_star:11,char_end:42";
"rv.headers['X-Method'],type='subscript'\nline_star:148,line_end:148|char_star:11,char_end:33"[shape="box",fillcolor="white",style=filled];
"rv.headers['X-Method'] == 'GET',type='comparison_operator'\nline_star:148,line_end:148|char_star:11,char_end:42"->"rv.headers['X-Method'],type='subscript'\nline_star:148,line_end:148|char_star:11,char_end:33";
"rv.headers,type='attribute'\nline_star:148,line_end:148|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"rv.headers['X-Method'],type='subscript'\nline_star:148,line_end:148|char_star:11,char_end:33"->"rv.headers,type='attribute'\nline_star:148,line_end:148|char_star:11,char_end:21";
"rv,type='identifier'\nline_star:148,line_end:148|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.headers,type='attribute'\nline_star:148,line_end:148|char_star:11,char_end:21"->"rv,type='identifier'\nline_star:148,line_end:148|char_star:11,char_end:13";
"headers,type='identifier'\nline_star:148,line_end:148|char_star:14,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"rv.headers,type='attribute'\nline_star:148,line_end:148|char_star:11,char_end:21"->"headers,type='identifier'\nline_star:148,line_end:148|char_star:14,char_end:21";
"assert rv.data == b'',type='assert_statement'\nline_star:150,line_end:150|char_star:4,char_end:25"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:141,line_end:151|char_star:4,char_end:43"->"assert rv.data == b'',type='assert_statement'\nline_star:150,line_end:150|char_star:4,char_end:25";
"rv.data == b'',type='comparison_operator'\nline_star:150,line_end:150|char_star:11,char_end:25"[shape="box",fillcolor="white",style=filled];
"assert rv.data == b'',type='assert_statement'\nline_star:150,line_end:150|char_star:4,char_end:25"->"rv.data == b'',type='comparison_operator'\nline_star:150,line_end:150|char_star:11,char_end:25";
"rv.data,type='attribute'\nline_star:150,line_end:150|char_star:11,char_end:18"[shape="box",fillcolor="white",style=filled];
"rv.data == b'',type='comparison_operator'\nline_star:150,line_end:150|char_star:11,char_end:25"->"rv.data,type='attribute'\nline_star:150,line_end:150|char_star:11,char_end:18";
"rv,type='identifier'\nline_star:150,line_end:150|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:150,line_end:150|char_star:11,char_end:18"->"rv,type='identifier'\nline_star:150,line_end:150|char_star:11,char_end:13";
"data,type='identifier'\nline_star:150,line_end:150|char_star:14,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:150,line_end:150|char_star:11,char_end:18"->"data,type='identifier'\nline_star:150,line_end:150|char_star:14,char_end:18";
"assert rv.headers['X-Method'] == 'HEAD',type='assert_statement'\nline_star:151,line_end:151|char_star:4,char_end:43"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:141,line_end:151|char_star:4,char_end:43"->"assert rv.headers['X-Method'] == 'HEAD',type='assert_statement'\nline_star:151,line_end:151|char_star:4,char_end:43";
"rv.headers['X-Method'] == 'HEAD',type='comparison_operator'\nline_star:151,line_end:151|char_star:11,char_end:43"[shape="box",fillcolor="white",style=filled];
"assert rv.headers['X-Method'] == 'HEAD',type='assert_statement'\nline_star:151,line_end:151|char_star:4,char_end:43"->"rv.headers['X-Method'] == 'HEAD',type='comparison_operator'\nline_star:151,line_end:151|char_star:11,char_end:43";
"rv.headers['X-Method'],type='subscript'\nline_star:151,line_end:151|char_star:11,char_end:33"[shape="box",fillcolor="white",style=filled];
"rv.headers['X-Method'] == 'HEAD',type='comparison_operator'\nline_star:151,line_end:151|char_star:11,char_end:43"->"rv.headers['X-Method'],type='subscript'\nline_star:151,line_end:151|char_star:11,char_end:33";
"rv.headers,type='attribute'\nline_star:151,line_end:151|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"rv.headers['X-Method'],type='subscript'\nline_star:151,line_end:151|char_star:11,char_end:33"->"rv.headers,type='attribute'\nline_star:151,line_end:151|char_star:11,char_end:21";
"rv,type='identifier'\nline_star:151,line_end:151|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.headers,type='attribute'\nline_star:151,line_end:151|char_star:11,char_end:21"->"rv,type='identifier'\nline_star:151,line_end:151|char_star:11,char_end:13";
"headers,type='identifier'\nline_star:151,line_end:151|char_star:14,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"rv.headers,type='attribute'\nline_star:151,line_end:151|char_star:11,char_end:21"->"headers,type='identifier'\nline_star:151,line_end:151|char_star:14,char_end:21";
"def test_explicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:154,line_end:167|char_star:0,char_end:43"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_explicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:154,line_end:167|char_star:0,char_end:43";
"test_explicit_head,type='identifier'\nline_star:154,line_end:154|char_star:4,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"def test_explicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:154,line_end:167|char_star:0,char_end:43"->"test_explicit_head,type='identifier'\nline_star:154,line_end:154|char_star:4,char_end:22";
"(app, client),type='parameters'\nline_star:154,line_end:154|char_star:22,char_end:35"[shape="box",fillcolor="white",style=filled];
"def test_explicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:154,line_end:167|char_star:0,char_end:43"->"(app, client),type='parameters'\nline_star:154,line_end:154|char_star:22,char_end:35";
"app,type='identifier'\nline_star:154,line_end:154|char_star:23,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:154,line_end:154|char_star:22,char_end:35"->"app,type='identifier'\nline_star:154,line_end:154|char_star:23,char_end:26";
"client,type='identifier'\nline_star:154,line_end:154|char_star:28,char_end:34"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:154,line_end:154|char_star:22,char_end:35"->"client,type='identifier'\nline_star:154,line_end:154|char_star:28,char_end:34";
"type='INFORMATION BLOCK'\nline_star:155,line_end:167|char_star:4,char_end:43"[shape="point",fillcolor="#121013",style=filled];
"def test_explicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'})\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n    rv = client.get('/')\n    assert rv.data == b'GET'\n    rv = client.head('/')\n    assert rv.data == b''\n    assert rv.headers['X-Method'] == 'HEAD',type='function_definition'\nline_star:154,line_end:167|char_star:0,char_end:43"->"type='INFORMATION BLOCK'\nline_star:155,line_end:167|char_star:4,char_end:43";
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='class_definition'\nline_star:155,line_end:160|char_star:4,char_end:67"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:155,line_end:167|char_star:4,char_end:43"->"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='class_definition'\nline_star:155,line_end:160|char_star:4,char_end:67";
"Index,type='identifier'\nline_star:155,line_end:155|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='class_definition'\nline_star:155,line_end:160|char_star:4,char_end:67"->"Index,type='identifier'\nline_star:155,line_end:155|char_star:10,char_end:15";
"(flask.views.MethodView),type='argument_list'\nline_star:155,line_end:155|char_star:15,char_end:39"[shape="box",fillcolor="white",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='class_definition'\nline_star:155,line_end:160|char_star:4,char_end:67"->"(flask.views.MethodView),type='argument_list'\nline_star:155,line_end:155|char_star:15,char_end:39";
"flask.views.MethodView,type='attribute'\nline_star:155,line_end:155|char_star:16,char_end:38"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:155,line_end:155|char_star:15,char_end:39"->"flask.views.MethodView,type='attribute'\nline_star:155,line_end:155|char_star:16,char_end:38";
"flask.views,type='attribute'\nline_star:155,line_end:155|char_star:16,char_end:27"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:155,line_end:155|char_star:16,char_end:38"->"flask.views,type='attribute'\nline_star:155,line_end:155|char_star:16,char_end:27";
"flask,type='identifier'\nline_star:155,line_end:155|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:155,line_end:155|char_star:16,char_end:27"->"flask,type='identifier'\nline_star:155,line_end:155|char_star:16,char_end:21";
"views,type='identifier'\nline_star:155,line_end:155|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:155,line_end:155|char_star:16,char_end:27"->"views,type='identifier'\nline_star:155,line_end:155|char_star:22,char_end:27";
"MethodView,type='identifier'\nline_star:155,line_end:155|char_star:28,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:155,line_end:155|char_star:16,char_end:38"->"MethodView,type='identifier'\nline_star:155,line_end:155|char_star:28,char_end:38";
"type='INFORMATION BLOCK'\nline_star:156,line_end:160|char_star:8,char_end:67"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n        def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='class_definition'\nline_star:155,line_end:160|char_star:4,char_end:67"->"type='INFORMATION BLOCK'\nline_star:156,line_end:160|char_star:8,char_end:67";
"def get(self):\n            return 'GET',type='function_definition'\nline_star:156,line_end:157|char_star:8,char_end:24"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:156,line_end:160|char_star:8,char_end:67"->"def get(self):\n            return 'GET',type='function_definition'\nline_star:156,line_end:157|char_star:8,char_end:24";
"get,type='identifier'\nline_star:156,line_end:156|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:156,line_end:157|char_star:8,char_end:24"->"get,type='identifier'\nline_star:156,line_end:156|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:156,line_end:156|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:156,line_end:157|char_star:8,char_end:24"->"(self),type='parameters'\nline_star:156,line_end:156|char_star:15,char_end:21";
"self,type='identifier'\nline_star:156,line_end:156|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:156,line_end:156|char_star:15,char_end:21"->"self,type='identifier'\nline_star:156,line_end:156|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:157,line_end:157|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:156,line_end:157|char_star:8,char_end:24"->"type='INFORMATION BLOCK'\nline_star:157,line_end:157|char_star:12,char_end:24";
"return 'GET',type='return_statement'\nline_star:157,line_end:157|char_star:12,char_end:24"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:157,line_end:157|char_star:12,char_end:24"->"return 'GET',type='return_statement'\nline_star:157,line_end:157|char_star:12,char_end:24";
"def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='function_definition'\nline_star:159,line_end:160|char_star:8,char_end:67"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:156,line_end:160|char_star:8,char_end:67"->"def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='function_definition'\nline_star:159,line_end:160|char_star:8,char_end:67";
"head,type='identifier'\nline_star:159,line_end:159|char_star:12,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='function_definition'\nline_star:159,line_end:160|char_star:8,char_end:67"->"head,type='identifier'\nline_star:159,line_end:159|char_star:12,char_end:16";
"(self),type='parameters'\nline_star:159,line_end:159|char_star:16,char_end:22"[shape="box",fillcolor="white",style=filled];
"def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='function_definition'\nline_star:159,line_end:160|char_star:8,char_end:67"->"(self),type='parameters'\nline_star:159,line_end:159|char_star:16,char_end:22";
"self,type='identifier'\nline_star:159,line_end:159|char_star:17,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:159,line_end:159|char_star:16,char_end:22"->"self,type='identifier'\nline_star:159,line_end:159|char_star:17,char_end:21";
"type='INFORMATION BLOCK'\nline_star:160,line_end:160|char_star:12,char_end:67"[shape="point",fillcolor="#121013",style=filled];
"def head(self):\n            return flask.Response('', headers={'X-Method': 'HEAD'}),type='function_definition'\nline_star:159,line_end:160|char_star:8,char_end:67"->"type='INFORMATION BLOCK'\nline_star:160,line_end:160|char_star:12,char_end:67";
"return flask.Response('', headers={'X-Method': 'HEAD'}),type='return_statement'\nline_star:160,line_end:160|char_star:12,char_end:67"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:160,line_end:160|char_star:12,char_end:67"->"return flask.Response('', headers={'X-Method': 'HEAD'}),type='return_statement'\nline_star:160,line_end:160|char_star:12,char_end:67";
"assert rv.data == b'GET',type='assert_statement'\nline_star:164,line_end:164|char_star:4,char_end:28"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:155,line_end:167|char_star:4,char_end:43"->"assert rv.data == b'GET',type='assert_statement'\nline_star:164,line_end:164|char_star:4,char_end:28";
"rv.data == b'GET',type='comparison_operator'\nline_star:164,line_end:164|char_star:11,char_end:28"[shape="box",fillcolor="white",style=filled];
"assert rv.data == b'GET',type='assert_statement'\nline_star:164,line_end:164|char_star:4,char_end:28"->"rv.data == b'GET',type='comparison_operator'\nline_star:164,line_end:164|char_star:11,char_end:28";
"rv.data,type='attribute'\nline_star:164,line_end:164|char_star:11,char_end:18"[shape="box",fillcolor="white",style=filled];
"rv.data == b'GET',type='comparison_operator'\nline_star:164,line_end:164|char_star:11,char_end:28"->"rv.data,type='attribute'\nline_star:164,line_end:164|char_star:11,char_end:18";
"rv,type='identifier'\nline_star:164,line_end:164|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:164,line_end:164|char_star:11,char_end:18"->"rv,type='identifier'\nline_star:164,line_end:164|char_star:11,char_end:13";
"data,type='identifier'\nline_star:164,line_end:164|char_star:14,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:164,line_end:164|char_star:11,char_end:18"->"data,type='identifier'\nline_star:164,line_end:164|char_star:14,char_end:18";
"assert rv.data == b'',type='assert_statement'\nline_star:166,line_end:166|char_star:4,char_end:25"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:155,line_end:167|char_star:4,char_end:43"->"assert rv.data == b'',type='assert_statement'\nline_star:166,line_end:166|char_star:4,char_end:25";
"rv.data == b'',type='comparison_operator'\nline_star:166,line_end:166|char_star:11,char_end:25"[shape="box",fillcolor="white",style=filled];
"assert rv.data == b'',type='assert_statement'\nline_star:166,line_end:166|char_star:4,char_end:25"->"rv.data == b'',type='comparison_operator'\nline_star:166,line_end:166|char_star:11,char_end:25";
"rv.data,type='attribute'\nline_star:166,line_end:166|char_star:11,char_end:18"[shape="box",fillcolor="white",style=filled];
"rv.data == b'',type='comparison_operator'\nline_star:166,line_end:166|char_star:11,char_end:25"->"rv.data,type='attribute'\nline_star:166,line_end:166|char_star:11,char_end:18";
"rv,type='identifier'\nline_star:166,line_end:166|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:166,line_end:166|char_star:11,char_end:18"->"rv,type='identifier'\nline_star:166,line_end:166|char_star:11,char_end:13";
"data,type='identifier'\nline_star:166,line_end:166|char_star:14,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"rv.data,type='attribute'\nline_star:166,line_end:166|char_star:11,char_end:18"->"data,type='identifier'\nline_star:166,line_end:166|char_star:14,char_end:18";
"assert rv.headers['X-Method'] == 'HEAD',type='assert_statement'\nline_star:167,line_end:167|char_star:4,char_end:43"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:155,line_end:167|char_star:4,char_end:43"->"assert rv.headers['X-Method'] == 'HEAD',type='assert_statement'\nline_star:167,line_end:167|char_star:4,char_end:43";
"rv.headers['X-Method'] == 'HEAD',type='comparison_operator'\nline_star:167,line_end:167|char_star:11,char_end:43"[shape="box",fillcolor="white",style=filled];
"assert rv.headers['X-Method'] == 'HEAD',type='assert_statement'\nline_star:167,line_end:167|char_star:4,char_end:43"->"rv.headers['X-Method'] == 'HEAD',type='comparison_operator'\nline_star:167,line_end:167|char_star:11,char_end:43";
"rv.headers['X-Method'],type='subscript'\nline_star:167,line_end:167|char_star:11,char_end:33"[shape="box",fillcolor="white",style=filled];
"rv.headers['X-Method'] == 'HEAD',type='comparison_operator'\nline_star:167,line_end:167|char_star:11,char_end:43"->"rv.headers['X-Method'],type='subscript'\nline_star:167,line_end:167|char_star:11,char_end:33";
"rv.headers,type='attribute'\nline_star:167,line_end:167|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"rv.headers['X-Method'],type='subscript'\nline_star:167,line_end:167|char_star:11,char_end:33"->"rv.headers,type='attribute'\nline_star:167,line_end:167|char_star:11,char_end:21";
"rv,type='identifier'\nline_star:167,line_end:167|char_star:11,char_end:13"[shape="point",fillcolor="#121013",style=filled];
"rv.headers,type='attribute'\nline_star:167,line_end:167|char_star:11,char_end:21"->"rv,type='identifier'\nline_star:167,line_end:167|char_star:11,char_end:13";
"headers,type='identifier'\nline_star:167,line_end:167|char_star:14,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"rv.headers,type='attribute'\nline_star:167,line_end:167|char_star:11,char_end:21"->"headers,type='identifier'\nline_star:167,line_end:167|char_star:14,char_end:21";
"def test_endpoint_override(app):\n    app.debug = True\n\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    # But these tests should still pass. We just log a warning.\n    common_test(app),type='function_definition'\nline_star:170,line_end:185|char_star:0,char_end:20"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_endpoint_override(app):\n    app.debug = True\n\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    # But these tests should still pass. We just log a warning.\n    common_test(app),type='function_definition'\nline_star:170,line_end:185|char_star:0,char_end:20";
"test_endpoint_override,type='identifier'\nline_star:170,line_end:170|char_star:4,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"def test_endpoint_override(app):\n    app.debug = True\n\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    # But these tests should still pass. We just log a warning.\n    common_test(app),type='function_definition'\nline_star:170,line_end:185|char_star:0,char_end:20"->"test_endpoint_override,type='identifier'\nline_star:170,line_end:170|char_star:4,char_end:26";
"(app),type='parameters'\nline_star:170,line_end:170|char_star:26,char_end:31"[shape="box",fillcolor="white",style=filled];
"def test_endpoint_override(app):\n    app.debug = True\n\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    # But these tests should still pass. We just log a warning.\n    common_test(app),type='function_definition'\nline_star:170,line_end:185|char_star:0,char_end:20"->"(app),type='parameters'\nline_star:170,line_end:170|char_star:26,char_end:31";
"app,type='identifier'\nline_star:170,line_end:170|char_star:27,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"(app),type='parameters'\nline_star:170,line_end:170|char_star:26,char_end:31"->"app,type='identifier'\nline_star:170,line_end:170|char_star:27,char_end:30";
"type='INFORMATION BLOCK'\nline_star:171,line_end:185|char_star:4,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"def test_endpoint_override(app):\n    app.debug = True\n\n    class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method\n\n    app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index'))\n\n    # But these tests should still pass. We just log a warning.\n    common_test(app),type='function_definition'\nline_star:170,line_end:185|char_star:0,char_end:20"->"type='INFORMATION BLOCK'\nline_star:171,line_end:185|char_star:4,char_end:20";
"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:173,line_end:177|char_star:4,char_end:39"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:171,line_end:185|char_star:4,char_end:20"->"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:173,line_end:177|char_star:4,char_end:39";
"Index,type='identifier'\nline_star:173,line_end:173|char_star:10,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:173,line_end:177|char_star:4,char_end:39"->"Index,type='identifier'\nline_star:173,line_end:173|char_star:10,char_end:15";
"(flask.views.View),type='argument_list'\nline_star:173,line_end:173|char_star:15,char_end:33"[shape="box",fillcolor="white",style=filled];
"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:173,line_end:177|char_star:4,char_end:39"->"(flask.views.View),type='argument_list'\nline_star:173,line_end:173|char_star:15,char_end:33";
"flask.views.View,type='attribute'\nline_star:173,line_end:173|char_star:16,char_end:32"[shape="box",fillcolor="white",style=filled];
"(flask.views.View),type='argument_list'\nline_star:173,line_end:173|char_star:15,char_end:33"->"flask.views.View,type='attribute'\nline_star:173,line_end:173|char_star:16,char_end:32";
"flask.views,type='attribute'\nline_star:173,line_end:173|char_star:16,char_end:27"[shape="box",fillcolor="white",style=filled];
"flask.views.View,type='attribute'\nline_star:173,line_end:173|char_star:16,char_end:32"->"flask.views,type='attribute'\nline_star:173,line_end:173|char_star:16,char_end:27";
"flask,type='identifier'\nline_star:173,line_end:173|char_star:16,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:173,line_end:173|char_star:16,char_end:27"->"flask,type='identifier'\nline_star:173,line_end:173|char_star:16,char_end:21";
"views,type='identifier'\nline_star:173,line_end:173|char_star:22,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:173,line_end:173|char_star:16,char_end:27"->"views,type='identifier'\nline_star:173,line_end:173|char_star:22,char_end:27";
"View,type='identifier'\nline_star:173,line_end:173|char_star:28,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"flask.views.View,type='attribute'\nline_star:173,line_end:173|char_star:16,char_end:32"->"View,type='identifier'\nline_star:173,line_end:173|char_star:28,char_end:32";
"type='INFORMATION BLOCK'\nline_star:174,line_end:177|char_star:8,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"class Index(flask.views.View):\n        methods = ['GET', 'POST']\n\n        def dispatch_request(self):\n            return flask.request.method,type='class_definition'\nline_star:173,line_end:177|char_star:4,char_end:39"->"type='INFORMATION BLOCK'\nline_star:174,line_end:177|char_star:8,char_end:39";
"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:176,line_end:177|char_star:8,char_end:39"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:174,line_end:177|char_star:8,char_end:39"->"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:176,line_end:177|char_star:8,char_end:39";
"dispatch_request,type='identifier'\nline_star:176,line_end:176|char_star:12,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:176,line_end:177|char_star:8,char_end:39"->"dispatch_request,type='identifier'\nline_star:176,line_end:176|char_star:12,char_end:28";
"(self),type='parameters'\nline_star:176,line_end:176|char_star:28,char_end:34"[shape="box",fillcolor="white",style=filled];
"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:176,line_end:177|char_star:8,char_end:39"->"(self),type='parameters'\nline_star:176,line_end:176|char_star:28,char_end:34";
"self,type='identifier'\nline_star:176,line_end:176|char_star:29,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:176,line_end:176|char_star:28,char_end:34"->"self,type='identifier'\nline_star:176,line_end:176|char_star:29,char_end:33";
"type='INFORMATION BLOCK'\nline_star:177,line_end:177|char_star:12,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"def dispatch_request(self):\n            return flask.request.method,type='function_definition'\nline_star:176,line_end:177|char_star:8,char_end:39"->"type='INFORMATION BLOCK'\nline_star:177,line_end:177|char_star:12,char_end:39";
"return flask.request.method,type='return_statement'\nline_star:177,line_end:177|char_star:12,char_end:39"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:177,line_end:177|char_star:12,char_end:39"->"return flask.request.method,type='return_statement'\nline_star:177,line_end:177|char_star:12,char_end:39";
"with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index')),type='with_statement'\nline_star:181,line_end:182|char_star:4,char_end:63"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:171,line_end:185|char_star:4,char_end:20"->"with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index')),type='with_statement'\nline_star:181,line_end:182|char_star:4,char_end:63";
"pytest.raises(AssertionError),type='with_clause'\nline_star:181,line_end:181|char_star:9,char_end:38"[shape="box",fillcolor="white",style=filled];
"with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index')),type='with_statement'\nline_star:181,line_end:182|char_star:4,char_end:63"->"pytest.raises(AssertionError),type='with_clause'\nline_star:181,line_end:181|char_star:9,char_end:38";
"type='INFORMATION BLOCK'\nline_star:182,line_end:182|char_star:8,char_end:63"[shape="point",fillcolor="#121013",style=filled];
"with pytest.raises(AssertionError):\n        app.add_url_rule('/', view_func=Index.as_view('index')),type='with_statement'\nline_star:181,line_end:182|char_star:4,char_end:63"->"type='INFORMATION BLOCK'\nline_star:182,line_end:182|char_star:8,char_end:63";
"# But these tests should still pass. We just log a warning.,type='comment'\nline_star:184,line_end:184|char_star:4,char_end:63"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:171,line_end:185|char_star:4,char_end:20"->"# But these tests should still pass. We just log a warning.,type='comment'\nline_star:184,line_end:184|char_star:4,char_end:63";
"def test_methods_var_inheritance(app, client):\n    class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND']\n\n    class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND'\n\n    app.add_url_rule('/', view_func=ChildView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.open('/', method='PROPFIND').data == b'PROPFIND'\n    assert ChildView.methods == {'PROPFIND', 'GET'},type='function_definition'\nline_star:188,line_end:203|char_star:0,char_end:51"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_methods_var_inheritance(app, client):\n    class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND']\n\n    class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND'\n\n    app.add_url_rule('/', view_func=ChildView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.open('/', method='PROPFIND').data == b'PROPFIND'\n    assert ChildView.methods == {'PROPFIND', 'GET'},type='function_definition'\nline_star:188,line_end:203|char_star:0,char_end:51";
"test_methods_var_inheritance,type='identifier'\nline_star:188,line_end:188|char_star:4,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"def test_methods_var_inheritance(app, client):\n    class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND']\n\n    class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND'\n\n    app.add_url_rule('/', view_func=ChildView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.open('/', method='PROPFIND').data == b'PROPFIND'\n    assert ChildView.methods == {'PROPFIND', 'GET'},type='function_definition'\nline_star:188,line_end:203|char_star:0,char_end:51"->"test_methods_var_inheritance,type='identifier'\nline_star:188,line_end:188|char_star:4,char_end:32";
"(app, client),type='parameters'\nline_star:188,line_end:188|char_star:32,char_end:45"[shape="box",fillcolor="white",style=filled];
"def test_methods_var_inheritance(app, client):\n    class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND']\n\n    class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND'\n\n    app.add_url_rule('/', view_func=ChildView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.open('/', method='PROPFIND').data == b'PROPFIND'\n    assert ChildView.methods == {'PROPFIND', 'GET'},type='function_definition'\nline_star:188,line_end:203|char_star:0,char_end:51"->"(app, client),type='parameters'\nline_star:188,line_end:188|char_star:32,char_end:45";
"app,type='identifier'\nline_star:188,line_end:188|char_star:33,char_end:36"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:188,line_end:188|char_star:32,char_end:45"->"app,type='identifier'\nline_star:188,line_end:188|char_star:33,char_end:36";
"client,type='identifier'\nline_star:188,line_end:188|char_star:38,char_end:44"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:188,line_end:188|char_star:32,char_end:45"->"client,type='identifier'\nline_star:188,line_end:188|char_star:38,char_end:44";
"type='INFORMATION BLOCK'\nline_star:189,line_end:203|char_star:4,char_end:51"[shape="point",fillcolor="#121013",style=filled];
"def test_methods_var_inheritance(app, client):\n    class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND']\n\n    class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND'\n\n    app.add_url_rule('/', view_func=ChildView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.open('/', method='PROPFIND').data == b'PROPFIND'\n    assert ChildView.methods == {'PROPFIND', 'GET'},type='function_definition'\nline_star:188,line_end:203|char_star:0,char_end:51"->"type='INFORMATION BLOCK'\nline_star:189,line_end:203|char_star:4,char_end:51";
"class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND'],type='class_definition'\nline_star:189,line_end:190|char_star:4,char_end:37"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:189,line_end:203|char_star:4,char_end:51"->"class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND'],type='class_definition'\nline_star:189,line_end:190|char_star:4,char_end:37";
"BaseView,type='identifier'\nline_star:189,line_end:189|char_star:10,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND'],type='class_definition'\nline_star:189,line_end:190|char_star:4,char_end:37"->"BaseView,type='identifier'\nline_star:189,line_end:189|char_star:10,char_end:18";
"(flask.views.MethodView),type='argument_list'\nline_star:189,line_end:189|char_star:18,char_end:42"[shape="box",fillcolor="white",style=filled];
"class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND'],type='class_definition'\nline_star:189,line_end:190|char_star:4,char_end:37"->"(flask.views.MethodView),type='argument_list'\nline_star:189,line_end:189|char_star:18,char_end:42";
"flask.views.MethodView,type='attribute'\nline_star:189,line_end:189|char_star:19,char_end:41"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:189,line_end:189|char_star:18,char_end:42"->"flask.views.MethodView,type='attribute'\nline_star:189,line_end:189|char_star:19,char_end:41";
"flask.views,type='attribute'\nline_star:189,line_end:189|char_star:19,char_end:30"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:189,line_end:189|char_star:19,char_end:41"->"flask.views,type='attribute'\nline_star:189,line_end:189|char_star:19,char_end:30";
"flask,type='identifier'\nline_star:189,line_end:189|char_star:19,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:189,line_end:189|char_star:19,char_end:30"->"flask,type='identifier'\nline_star:189,line_end:189|char_star:19,char_end:24";
"views,type='identifier'\nline_star:189,line_end:189|char_star:25,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:189,line_end:189|char_star:19,char_end:30"->"views,type='identifier'\nline_star:189,line_end:189|char_star:25,char_end:30";
"MethodView,type='identifier'\nline_star:189,line_end:189|char_star:31,char_end:41"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:189,line_end:189|char_star:19,char_end:41"->"MethodView,type='identifier'\nline_star:189,line_end:189|char_star:31,char_end:41";
"type='INFORMATION BLOCK'\nline_star:190,line_end:190|char_star:8,char_end:37"[shape="point",fillcolor="#121013",style=filled];
"class BaseView(flask.views.MethodView):\n        methods = ['GET', 'PROPFIND'],type='class_definition'\nline_star:189,line_end:190|char_star:4,char_end:37"->"type='INFORMATION BLOCK'\nline_star:190,line_end:190|char_star:8,char_end:37";
"class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND',type='class_definition'\nline_star:192,line_end:197|char_star:4,char_end:29"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:189,line_end:203|char_star:4,char_end:51"->"class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND',type='class_definition'\nline_star:192,line_end:197|char_star:4,char_end:29";
"ChildView,type='identifier'\nline_star:192,line_end:192|char_star:10,char_end:19"[shape="point",fillcolor="#121013",style=filled];
"class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND',type='class_definition'\nline_star:192,line_end:197|char_star:4,char_end:29"->"ChildView,type='identifier'\nline_star:192,line_end:192|char_star:10,char_end:19";
"(BaseView),type='argument_list'\nline_star:192,line_end:192|char_star:19,char_end:29"[shape="box",fillcolor="white",style=filled];
"class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND',type='class_definition'\nline_star:192,line_end:197|char_star:4,char_end:29"->"(BaseView),type='argument_list'\nline_star:192,line_end:192|char_star:19,char_end:29";
"BaseView,type='identifier'\nline_star:192,line_end:192|char_star:20,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"(BaseView),type='argument_list'\nline_star:192,line_end:192|char_star:19,char_end:29"->"BaseView,type='identifier'\nline_star:192,line_end:192|char_star:20,char_end:28";
"type='INFORMATION BLOCK'\nline_star:193,line_end:197|char_star:8,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"class ChildView(BaseView):\n        def get(self):\n            return 'GET'\n\n        def propfind(self):\n            return 'PROPFIND',type='class_definition'\nline_star:192,line_end:197|char_star:4,char_end:29"->"type='INFORMATION BLOCK'\nline_star:193,line_end:197|char_star:8,char_end:29";
"def get(self):\n            return 'GET',type='function_definition'\nline_star:193,line_end:194|char_star:8,char_end:24"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:193,line_end:197|char_star:8,char_end:29"->"def get(self):\n            return 'GET',type='function_definition'\nline_star:193,line_end:194|char_star:8,char_end:24";
"get,type='identifier'\nline_star:193,line_end:193|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:193,line_end:194|char_star:8,char_end:24"->"get,type='identifier'\nline_star:193,line_end:193|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:193,line_end:193|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:193,line_end:194|char_star:8,char_end:24"->"(self),type='parameters'\nline_star:193,line_end:193|char_star:15,char_end:21";
"self,type='identifier'\nline_star:193,line_end:193|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:193,line_end:193|char_star:15,char_end:21"->"self,type='identifier'\nline_star:193,line_end:193|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:194,line_end:194|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:193,line_end:194|char_star:8,char_end:24"->"type='INFORMATION BLOCK'\nline_star:194,line_end:194|char_star:12,char_end:24";
"return 'GET',type='return_statement'\nline_star:194,line_end:194|char_star:12,char_end:24"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:194,line_end:194|char_star:12,char_end:24"->"return 'GET',type='return_statement'\nline_star:194,line_end:194|char_star:12,char_end:24";
"def propfind(self):\n            return 'PROPFIND',type='function_definition'\nline_star:196,line_end:197|char_star:8,char_end:29"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:193,line_end:197|char_star:8,char_end:29"->"def propfind(self):\n            return 'PROPFIND',type='function_definition'\nline_star:196,line_end:197|char_star:8,char_end:29";
"propfind,type='identifier'\nline_star:196,line_end:196|char_star:12,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"def propfind(self):\n            return 'PROPFIND',type='function_definition'\nline_star:196,line_end:197|char_star:8,char_end:29"->"propfind,type='identifier'\nline_star:196,line_end:196|char_star:12,char_end:20";
"(self),type='parameters'\nline_star:196,line_end:196|char_star:20,char_end:26"[shape="box",fillcolor="white",style=filled];
"def propfind(self):\n            return 'PROPFIND',type='function_definition'\nline_star:196,line_end:197|char_star:8,char_end:29"->"(self),type='parameters'\nline_star:196,line_end:196|char_star:20,char_end:26";
"self,type='identifier'\nline_star:196,line_end:196|char_star:21,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:196,line_end:196|char_star:20,char_end:26"->"self,type='identifier'\nline_star:196,line_end:196|char_star:21,char_end:25";
"type='INFORMATION BLOCK'\nline_star:197,line_end:197|char_star:12,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"def propfind(self):\n            return 'PROPFIND',type='function_definition'\nline_star:196,line_end:197|char_star:8,char_end:29"->"type='INFORMATION BLOCK'\nline_star:197,line_end:197|char_star:12,char_end:29";
"return 'PROPFIND',type='return_statement'\nline_star:197,line_end:197|char_star:12,char_end:29"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:197,line_end:197|char_star:12,char_end:29"->"return 'PROPFIND',type='return_statement'\nline_star:197,line_end:197|char_star:12,char_end:29";
"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:201,line_end:201|char_star:4,char_end:41"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:189,line_end:203|char_star:4,char_end:51"->"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:201,line_end:201|char_star:4,char_end:41";
"client.get('/').data == b'GET',type='comparison_operator'\nline_star:201,line_end:201|char_star:11,char_end:41"[shape="box",fillcolor="white",style=filled];
"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:201,line_end:201|char_star:4,char_end:41"->"client.get('/').data == b'GET',type='comparison_operator'\nline_star:201,line_end:201|char_star:11,char_end:41";
"client.get('/').data,type='attribute'\nline_star:201,line_end:201|char_star:11,char_end:31"[shape="box",fillcolor="white",style=filled];
"client.get('/').data == b'GET',type='comparison_operator'\nline_star:201,line_end:201|char_star:11,char_end:41"->"client.get('/').data,type='attribute'\nline_star:201,line_end:201|char_star:11,char_end:31";
"client.get('/'),type='call'\nline_star:201,line_end:201|char_star:11,char_end:26"[shape="box",fillcolor="white",style=filled];
"client.get('/').data,type='attribute'\nline_star:201,line_end:201|char_star:11,char_end:31"->"client.get('/'),type='call'\nline_star:201,line_end:201|char_star:11,char_end:26";
"client.get,type='attribute'\nline_star:201,line_end:201|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"client.get('/'),type='call'\nline_star:201,line_end:201|char_star:11,char_end:26"->"client.get,type='attribute'\nline_star:201,line_end:201|char_star:11,char_end:21";
"client,type='identifier'\nline_star:201,line_end:201|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"client.get,type='attribute'\nline_star:201,line_end:201|char_star:11,char_end:21"->"client,type='identifier'\nline_star:201,line_end:201|char_star:11,char_end:17";
"get,type='identifier'\nline_star:201,line_end:201|char_star:18,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"client.get,type='attribute'\nline_star:201,line_end:201|char_star:11,char_end:21"->"get,type='identifier'\nline_star:201,line_end:201|char_star:18,char_end:21";
"('/'),type='argument_list'\nline_star:201,line_end:201|char_star:21,char_end:26"[shape="box",fillcolor="white",style=filled];
"client.get('/'),type='call'\nline_star:201,line_end:201|char_star:11,char_end:26"->"('/'),type='argument_list'\nline_star:201,line_end:201|char_star:21,char_end:26";
"data,type='identifier'\nline_star:201,line_end:201|char_star:27,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"client.get('/').data,type='attribute'\nline_star:201,line_end:201|char_star:11,char_end:31"->"data,type='identifier'\nline_star:201,line_end:201|char_star:27,char_end:31";
"assert client.open('/', method='PROPFIND').data == b'PROPFIND',type='assert_statement'\nline_star:202,line_end:202|char_star:4,char_end:66"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:189,line_end:203|char_star:4,char_end:51"->"assert client.open('/', method='PROPFIND').data == b'PROPFIND',type='assert_statement'\nline_star:202,line_end:202|char_star:4,char_end:66";
"client.open('/', method='PROPFIND').data == b'PROPFIND',type='comparison_operator'\nline_star:202,line_end:202|char_star:11,char_end:66"[shape="box",fillcolor="white",style=filled];
"assert client.open('/', method='PROPFIND').data == b'PROPFIND',type='assert_statement'\nline_star:202,line_end:202|char_star:4,char_end:66"->"client.open('/', method='PROPFIND').data == b'PROPFIND',type='comparison_operator'\nline_star:202,line_end:202|char_star:11,char_end:66";
"client.open('/', method='PROPFIND').data,type='attribute'\nline_star:202,line_end:202|char_star:11,char_end:51"[shape="box",fillcolor="white",style=filled];
"client.open('/', method='PROPFIND').data == b'PROPFIND',type='comparison_operator'\nline_star:202,line_end:202|char_star:11,char_end:66"->"client.open('/', method='PROPFIND').data,type='attribute'\nline_star:202,line_end:202|char_star:11,char_end:51";
"client.open('/', method='PROPFIND'),type='call'\nline_star:202,line_end:202|char_star:11,char_end:46"[shape="box",fillcolor="white",style=filled];
"client.open('/', method='PROPFIND').data,type='attribute'\nline_star:202,line_end:202|char_star:11,char_end:51"->"client.open('/', method='PROPFIND'),type='call'\nline_star:202,line_end:202|char_star:11,char_end:46";
"client.open,type='attribute'\nline_star:202,line_end:202|char_star:11,char_end:22"[shape="box",fillcolor="white",style=filled];
"client.open('/', method='PROPFIND'),type='call'\nline_star:202,line_end:202|char_star:11,char_end:46"->"client.open,type='attribute'\nline_star:202,line_end:202|char_star:11,char_end:22";
"client,type='identifier'\nline_star:202,line_end:202|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"client.open,type='attribute'\nline_star:202,line_end:202|char_star:11,char_end:22"->"client,type='identifier'\nline_star:202,line_end:202|char_star:11,char_end:17";
"open,type='identifier'\nline_star:202,line_end:202|char_star:18,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"client.open,type='attribute'\nline_star:202,line_end:202|char_star:11,char_end:22"->"open,type='identifier'\nline_star:202,line_end:202|char_star:18,char_end:22";
"('/', method='PROPFIND'),type='argument_list'\nline_star:202,line_end:202|char_star:22,char_end:46"[shape="box",fillcolor="white",style=filled];
"client.open('/', method='PROPFIND'),type='call'\nline_star:202,line_end:202|char_star:11,char_end:46"->"('/', method='PROPFIND'),type='argument_list'\nline_star:202,line_end:202|char_star:22,char_end:46";
"method='PROPFIND',type='keyword_argument'\nline_star:202,line_end:202|char_star:28,char_end:45"[shape="box",fillcolor="white",style=filled];
"('/', method='PROPFIND'),type='argument_list'\nline_star:202,line_end:202|char_star:22,char_end:46"->"method='PROPFIND',type='keyword_argument'\nline_star:202,line_end:202|char_star:28,char_end:45";
"method,type='identifier'\nline_star:202,line_end:202|char_star:28,char_end:34"[shape="point",fillcolor="#121013",style=filled];
"method='PROPFIND',type='keyword_argument'\nline_star:202,line_end:202|char_star:28,char_end:45"->"method,type='identifier'\nline_star:202,line_end:202|char_star:28,char_end:34";
"data,type='identifier'\nline_star:202,line_end:202|char_star:47,char_end:51"[shape="point",fillcolor="#121013",style=filled];
"client.open('/', method='PROPFIND').data,type='attribute'\nline_star:202,line_end:202|char_star:11,char_end:51"->"data,type='identifier'\nline_star:202,line_end:202|char_star:47,char_end:51";
"assert ChildView.methods == {'PROPFIND', 'GET'},type='assert_statement'\nline_star:203,line_end:203|char_star:4,char_end:51"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:189,line_end:203|char_star:4,char_end:51"->"assert ChildView.methods == {'PROPFIND', 'GET'},type='assert_statement'\nline_star:203,line_end:203|char_star:4,char_end:51";
"ChildView.methods == {'PROPFIND', 'GET'},type='comparison_operator'\nline_star:203,line_end:203|char_star:11,char_end:51"[shape="box",fillcolor="white",style=filled];
"assert ChildView.methods == {'PROPFIND', 'GET'},type='assert_statement'\nline_star:203,line_end:203|char_star:4,char_end:51"->"ChildView.methods == {'PROPFIND', 'GET'},type='comparison_operator'\nline_star:203,line_end:203|char_star:11,char_end:51";
"ChildView.methods,type='attribute'\nline_star:203,line_end:203|char_star:11,char_end:28"[shape="box",fillcolor="white",style=filled];
"ChildView.methods == {'PROPFIND', 'GET'},type='comparison_operator'\nline_star:203,line_end:203|char_star:11,char_end:51"->"ChildView.methods,type='attribute'\nline_star:203,line_end:203|char_star:11,char_end:28";
"ChildView,type='identifier'\nline_star:203,line_end:203|char_star:11,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"ChildView.methods,type='attribute'\nline_star:203,line_end:203|char_star:11,char_end:28"->"ChildView,type='identifier'\nline_star:203,line_end:203|char_star:11,char_end:20";
"methods,type='identifier'\nline_star:203,line_end:203|char_star:21,char_end:28"[shape="point",fillcolor="#121013",style=filled];
"ChildView.methods,type='attribute'\nline_star:203,line_end:203|char_star:11,char_end:28"->"methods,type='identifier'\nline_star:203,line_end:203|char_star:21,char_end:28";
"{'PROPFIND', 'GET'},type='set'\nline_star:203,line_end:203|char_star:32,char_end:51"[shape="box",fillcolor="white",style=filled];
"ChildView.methods == {'PROPFIND', 'GET'},type='comparison_operator'\nline_star:203,line_end:203|char_star:11,char_end:51"->"{'PROPFIND', 'GET'},type='set'\nline_star:203,line_end:203|char_star:32,char_end:51";
"{,type='{'\nline_star:203,line_end:203|char_star:32,char_end:33"[shape="box",fillcolor="white",style=filled];
"{'PROPFIND', 'GET'},type='set'\nline_star:203,line_end:203|char_star:32,char_end:51"->"{,type='{'\nline_star:203,line_end:203|char_star:32,char_end:33";
"},type='}'\nline_star:203,line_end:203|char_star:50,char_end:51"[shape="box",fillcolor="white",style=filled];
"{'PROPFIND', 'GET'},type='set'\nline_star:203,line_end:203|char_star:32,char_end:51"->"},type='}'\nline_star:203,line_end:203|char_star:50,char_end:51";
"def test_multiple_inheritance(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE'\n\n    class GetDeleteView(GetView, DeleteView):\n        pass\n\n    app.add_url_rule('/', view_func=GetDeleteView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.delete('/').data == b'DELETE'\n    assert sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='function_definition'\nline_star:206,line_end:222|char_star:0,char_end:61"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_multiple_inheritance(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE'\n\n    class GetDeleteView(GetView, DeleteView):\n        pass\n\n    app.add_url_rule('/', view_func=GetDeleteView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.delete('/').data == b'DELETE'\n    assert sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='function_definition'\nline_star:206,line_end:222|char_star:0,char_end:61";
"test_multiple_inheritance,type='identifier'\nline_star:206,line_end:206|char_star:4,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"def test_multiple_inheritance(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE'\n\n    class GetDeleteView(GetView, DeleteView):\n        pass\n\n    app.add_url_rule('/', view_func=GetDeleteView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.delete('/').data == b'DELETE'\n    assert sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='function_definition'\nline_star:206,line_end:222|char_star:0,char_end:61"->"test_multiple_inheritance,type='identifier'\nline_star:206,line_end:206|char_star:4,char_end:29";
"(app, client),type='parameters'\nline_star:206,line_end:206|char_star:29,char_end:42"[shape="box",fillcolor="white",style=filled];
"def test_multiple_inheritance(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE'\n\n    class GetDeleteView(GetView, DeleteView):\n        pass\n\n    app.add_url_rule('/', view_func=GetDeleteView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.delete('/').data == b'DELETE'\n    assert sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='function_definition'\nline_star:206,line_end:222|char_star:0,char_end:61"->"(app, client),type='parameters'\nline_star:206,line_end:206|char_star:29,char_end:42";
"app,type='identifier'\nline_star:206,line_end:206|char_star:30,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:206,line_end:206|char_star:29,char_end:42"->"app,type='identifier'\nline_star:206,line_end:206|char_star:30,char_end:33";
"client,type='identifier'\nline_star:206,line_end:206|char_star:35,char_end:41"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:206,line_end:206|char_star:29,char_end:42"->"client,type='identifier'\nline_star:206,line_end:206|char_star:35,char_end:41";
"type='INFORMATION BLOCK'\nline_star:207,line_end:222|char_star:4,char_end:61"[shape="point",fillcolor="#121013",style=filled];
"def test_multiple_inheritance(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE'\n\n    class GetDeleteView(GetView, DeleteView):\n        pass\n\n    app.add_url_rule('/', view_func=GetDeleteView.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.delete('/').data == b'DELETE'\n    assert sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='function_definition'\nline_star:206,line_end:222|char_star:0,char_end:61"->"type='INFORMATION BLOCK'\nline_star:207,line_end:222|char_star:4,char_end:61";
"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:207,line_end:209|char_star:4,char_end:24"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:207,line_end:222|char_star:4,char_end:61"->"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:207,line_end:209|char_star:4,char_end:24";
"GetView,type='identifier'\nline_star:207,line_end:207|char_star:10,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:207,line_end:209|char_star:4,char_end:24"->"GetView,type='identifier'\nline_star:207,line_end:207|char_star:10,char_end:17";
"(flask.views.MethodView),type='argument_list'\nline_star:207,line_end:207|char_star:17,char_end:41"[shape="box",fillcolor="white",style=filled];
"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:207,line_end:209|char_star:4,char_end:24"->"(flask.views.MethodView),type='argument_list'\nline_star:207,line_end:207|char_star:17,char_end:41";
"flask.views.MethodView,type='attribute'\nline_star:207,line_end:207|char_star:18,char_end:40"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:207,line_end:207|char_star:17,char_end:41"->"flask.views.MethodView,type='attribute'\nline_star:207,line_end:207|char_star:18,char_end:40";
"flask.views,type='attribute'\nline_star:207,line_end:207|char_star:18,char_end:29"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:207,line_end:207|char_star:18,char_end:40"->"flask.views,type='attribute'\nline_star:207,line_end:207|char_star:18,char_end:29";
"flask,type='identifier'\nline_star:207,line_end:207|char_star:18,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:207,line_end:207|char_star:18,char_end:29"->"flask,type='identifier'\nline_star:207,line_end:207|char_star:18,char_end:23";
"views,type='identifier'\nline_star:207,line_end:207|char_star:24,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:207,line_end:207|char_star:18,char_end:29"->"views,type='identifier'\nline_star:207,line_end:207|char_star:24,char_end:29";
"MethodView,type='identifier'\nline_star:207,line_end:207|char_star:30,char_end:40"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:207,line_end:207|char_star:18,char_end:40"->"MethodView,type='identifier'\nline_star:207,line_end:207|char_star:30,char_end:40";
"type='INFORMATION BLOCK'\nline_star:208,line_end:209|char_star:8,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:207,line_end:209|char_star:4,char_end:24"->"type='INFORMATION BLOCK'\nline_star:208,line_end:209|char_star:8,char_end:24";
"def get(self):\n            return 'GET',type='function_definition'\nline_star:208,line_end:209|char_star:8,char_end:24"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:208,line_end:209|char_star:8,char_end:24"->"def get(self):\n            return 'GET',type='function_definition'\nline_star:208,line_end:209|char_star:8,char_end:24";
"get,type='identifier'\nline_star:208,line_end:208|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:208,line_end:209|char_star:8,char_end:24"->"get,type='identifier'\nline_star:208,line_end:208|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:208,line_end:208|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:208,line_end:209|char_star:8,char_end:24"->"(self),type='parameters'\nline_star:208,line_end:208|char_star:15,char_end:21";
"self,type='identifier'\nline_star:208,line_end:208|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:208,line_end:208|char_star:15,char_end:21"->"self,type='identifier'\nline_star:208,line_end:208|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:209,line_end:209|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:208,line_end:209|char_star:8,char_end:24"->"type='INFORMATION BLOCK'\nline_star:209,line_end:209|char_star:12,char_end:24";
"return 'GET',type='return_statement'\nline_star:209,line_end:209|char_star:12,char_end:24"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:209,line_end:209|char_star:12,char_end:24"->"return 'GET',type='return_statement'\nline_star:209,line_end:209|char_star:12,char_end:24";
"class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:211,line_end:213|char_star:4,char_end:27"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:207,line_end:222|char_star:4,char_end:61"->"class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:211,line_end:213|char_star:4,char_end:27";
"DeleteView,type='identifier'\nline_star:211,line_end:211|char_star:10,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:211,line_end:213|char_star:4,char_end:27"->"DeleteView,type='identifier'\nline_star:211,line_end:211|char_star:10,char_end:20";
"(flask.views.MethodView),type='argument_list'\nline_star:211,line_end:211|char_star:20,char_end:44"[shape="box",fillcolor="white",style=filled];
"class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:211,line_end:213|char_star:4,char_end:27"->"(flask.views.MethodView),type='argument_list'\nline_star:211,line_end:211|char_star:20,char_end:44";
"flask.views.MethodView,type='attribute'\nline_star:211,line_end:211|char_star:21,char_end:43"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:211,line_end:211|char_star:20,char_end:44"->"flask.views.MethodView,type='attribute'\nline_star:211,line_end:211|char_star:21,char_end:43";
"flask.views,type='attribute'\nline_star:211,line_end:211|char_star:21,char_end:32"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:211,line_end:211|char_star:21,char_end:43"->"flask.views,type='attribute'\nline_star:211,line_end:211|char_star:21,char_end:32";
"flask,type='identifier'\nline_star:211,line_end:211|char_star:21,char_end:26"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:211,line_end:211|char_star:21,char_end:32"->"flask,type='identifier'\nline_star:211,line_end:211|char_star:21,char_end:26";
"views,type='identifier'\nline_star:211,line_end:211|char_star:27,char_end:32"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:211,line_end:211|char_star:21,char_end:32"->"views,type='identifier'\nline_star:211,line_end:211|char_star:27,char_end:32";
"MethodView,type='identifier'\nline_star:211,line_end:211|char_star:33,char_end:43"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:211,line_end:211|char_star:21,char_end:43"->"MethodView,type='identifier'\nline_star:211,line_end:211|char_star:33,char_end:43";
"type='INFORMATION BLOCK'\nline_star:212,line_end:213|char_star:8,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"class DeleteView(flask.views.MethodView):\n        def delete(self):\n            return 'DELETE',type='class_definition'\nline_star:211,line_end:213|char_star:4,char_end:27"->"type='INFORMATION BLOCK'\nline_star:212,line_end:213|char_star:8,char_end:27";
"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:212,line_end:213|char_star:8,char_end:27"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:212,line_end:213|char_star:8,char_end:27"->"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:212,line_end:213|char_star:8,char_end:27";
"delete,type='identifier'\nline_star:212,line_end:212|char_star:12,char_end:18"[shape="point",fillcolor="#121013",style=filled];
"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:212,line_end:213|char_star:8,char_end:27"->"delete,type='identifier'\nline_star:212,line_end:212|char_star:12,char_end:18";
"(self),type='parameters'\nline_star:212,line_end:212|char_star:18,char_end:24"[shape="box",fillcolor="white",style=filled];
"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:212,line_end:213|char_star:8,char_end:27"->"(self),type='parameters'\nline_star:212,line_end:212|char_star:18,char_end:24";
"self,type='identifier'\nline_star:212,line_end:212|char_star:19,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:212,line_end:212|char_star:18,char_end:24"->"self,type='identifier'\nline_star:212,line_end:212|char_star:19,char_end:23";
"type='INFORMATION BLOCK'\nline_star:213,line_end:213|char_star:12,char_end:27"[shape="point",fillcolor="#121013",style=filled];
"def delete(self):\n            return 'DELETE',type='function_definition'\nline_star:212,line_end:213|char_star:8,char_end:27"->"type='INFORMATION BLOCK'\nline_star:213,line_end:213|char_star:12,char_end:27";
"return 'DELETE',type='return_statement'\nline_star:213,line_end:213|char_star:12,char_end:27"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:213,line_end:213|char_star:12,char_end:27"->"return 'DELETE',type='return_statement'\nline_star:213,line_end:213|char_star:12,char_end:27";
"class GetDeleteView(GetView, DeleteView):\n        pass,type='class_definition'\nline_star:215,line_end:216|char_star:4,char_end:12"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:207,line_end:222|char_star:4,char_end:61"->"class GetDeleteView(GetView, DeleteView):\n        pass,type='class_definition'\nline_star:215,line_end:216|char_star:4,char_end:12";
"GetDeleteView,type='identifier'\nline_star:215,line_end:215|char_star:10,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"class GetDeleteView(GetView, DeleteView):\n        pass,type='class_definition'\nline_star:215,line_end:216|char_star:4,char_end:12"->"GetDeleteView,type='identifier'\nline_star:215,line_end:215|char_star:10,char_end:23";
"(GetView, DeleteView),type='argument_list'\nline_star:215,line_end:215|char_star:23,char_end:44"[shape="box",fillcolor="white",style=filled];
"class GetDeleteView(GetView, DeleteView):\n        pass,type='class_definition'\nline_star:215,line_end:216|char_star:4,char_end:12"->"(GetView, DeleteView),type='argument_list'\nline_star:215,line_end:215|char_star:23,char_end:44";
"GetView,type='identifier'\nline_star:215,line_end:215|char_star:24,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"(GetView, DeleteView),type='argument_list'\nline_star:215,line_end:215|char_star:23,char_end:44"->"GetView,type='identifier'\nline_star:215,line_end:215|char_star:24,char_end:31";
"DeleteView,type='identifier'\nline_star:215,line_end:215|char_star:33,char_end:43"[shape="point",fillcolor="#121013",style=filled];
"(GetView, DeleteView),type='argument_list'\nline_star:215,line_end:215|char_star:23,char_end:44"->"DeleteView,type='identifier'\nline_star:215,line_end:215|char_star:33,char_end:43";
"type='INFORMATION BLOCK'\nline_star:216,line_end:216|char_star:8,char_end:12"[shape="point",fillcolor="#121013",style=filled];
"class GetDeleteView(GetView, DeleteView):\n        pass,type='class_definition'\nline_star:215,line_end:216|char_star:4,char_end:12"->"type='INFORMATION BLOCK'\nline_star:216,line_end:216|char_star:8,char_end:12";
"pass,type='pass_statement'\nline_star:216,line_end:216|char_star:8,char_end:12"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:216,line_end:216|char_star:8,char_end:12"->"pass,type='pass_statement'\nline_star:216,line_end:216|char_star:8,char_end:12";
"pass,type='pass'\nline_star:216,line_end:216|char_star:8,char_end:12"[shape="box",fillcolor="white",style=filled];
"pass,type='pass_statement'\nline_star:216,line_end:216|char_star:8,char_end:12"->"pass,type='pass'\nline_star:216,line_end:216|char_star:8,char_end:12";
"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:220,line_end:220|char_star:4,char_end:41"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:207,line_end:222|char_star:4,char_end:61"->"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:220,line_end:220|char_star:4,char_end:41";
"client.get('/').data == b'GET',type='comparison_operator'\nline_star:220,line_end:220|char_star:11,char_end:41"[shape="box",fillcolor="white",style=filled];
"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:220,line_end:220|char_star:4,char_end:41"->"client.get('/').data == b'GET',type='comparison_operator'\nline_star:220,line_end:220|char_star:11,char_end:41";
"client.get('/').data,type='attribute'\nline_star:220,line_end:220|char_star:11,char_end:31"[shape="box",fillcolor="white",style=filled];
"client.get('/').data == b'GET',type='comparison_operator'\nline_star:220,line_end:220|char_star:11,char_end:41"->"client.get('/').data,type='attribute'\nline_star:220,line_end:220|char_star:11,char_end:31";
"client.get('/'),type='call'\nline_star:220,line_end:220|char_star:11,char_end:26"[shape="box",fillcolor="white",style=filled];
"client.get('/').data,type='attribute'\nline_star:220,line_end:220|char_star:11,char_end:31"->"client.get('/'),type='call'\nline_star:220,line_end:220|char_star:11,char_end:26";
"client.get,type='attribute'\nline_star:220,line_end:220|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"client.get('/'),type='call'\nline_star:220,line_end:220|char_star:11,char_end:26"->"client.get,type='attribute'\nline_star:220,line_end:220|char_star:11,char_end:21";
"client,type='identifier'\nline_star:220,line_end:220|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"client.get,type='attribute'\nline_star:220,line_end:220|char_star:11,char_end:21"->"client,type='identifier'\nline_star:220,line_end:220|char_star:11,char_end:17";
"get,type='identifier'\nline_star:220,line_end:220|char_star:18,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"client.get,type='attribute'\nline_star:220,line_end:220|char_star:11,char_end:21"->"get,type='identifier'\nline_star:220,line_end:220|char_star:18,char_end:21";
"('/'),type='argument_list'\nline_star:220,line_end:220|char_star:21,char_end:26"[shape="box",fillcolor="white",style=filled];
"client.get('/'),type='call'\nline_star:220,line_end:220|char_star:11,char_end:26"->"('/'),type='argument_list'\nline_star:220,line_end:220|char_star:21,char_end:26";
"data,type='identifier'\nline_star:220,line_end:220|char_star:27,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"client.get('/').data,type='attribute'\nline_star:220,line_end:220|char_star:11,char_end:31"->"data,type='identifier'\nline_star:220,line_end:220|char_star:27,char_end:31";
"assert client.delete('/').data == b'DELETE',type='assert_statement'\nline_star:221,line_end:221|char_star:4,char_end:47"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:207,line_end:222|char_star:4,char_end:61"->"assert client.delete('/').data == b'DELETE',type='assert_statement'\nline_star:221,line_end:221|char_star:4,char_end:47";
"client.delete('/').data == b'DELETE',type='comparison_operator'\nline_star:221,line_end:221|char_star:11,char_end:47"[shape="box",fillcolor="white",style=filled];
"assert client.delete('/').data == b'DELETE',type='assert_statement'\nline_star:221,line_end:221|char_star:4,char_end:47"->"client.delete('/').data == b'DELETE',type='comparison_operator'\nline_star:221,line_end:221|char_star:11,char_end:47";
"client.delete('/').data,type='attribute'\nline_star:221,line_end:221|char_star:11,char_end:34"[shape="box",fillcolor="white",style=filled];
"client.delete('/').data == b'DELETE',type='comparison_operator'\nline_star:221,line_end:221|char_star:11,char_end:47"->"client.delete('/').data,type='attribute'\nline_star:221,line_end:221|char_star:11,char_end:34";
"client.delete('/'),type='call'\nline_star:221,line_end:221|char_star:11,char_end:29"[shape="box",fillcolor="white",style=filled];
"client.delete('/').data,type='attribute'\nline_star:221,line_end:221|char_star:11,char_end:34"->"client.delete('/'),type='call'\nline_star:221,line_end:221|char_star:11,char_end:29";
"client.delete,type='attribute'\nline_star:221,line_end:221|char_star:11,char_end:24"[shape="box",fillcolor="white",style=filled];
"client.delete('/'),type='call'\nline_star:221,line_end:221|char_star:11,char_end:29"->"client.delete,type='attribute'\nline_star:221,line_end:221|char_star:11,char_end:24";
"client,type='identifier'\nline_star:221,line_end:221|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"client.delete,type='attribute'\nline_star:221,line_end:221|char_star:11,char_end:24"->"client,type='identifier'\nline_star:221,line_end:221|char_star:11,char_end:17";
"delete,type='identifier'\nline_star:221,line_end:221|char_star:18,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"client.delete,type='attribute'\nline_star:221,line_end:221|char_star:11,char_end:24"->"delete,type='identifier'\nline_star:221,line_end:221|char_star:18,char_end:24";
"('/'),type='argument_list'\nline_star:221,line_end:221|char_star:24,char_end:29"[shape="box",fillcolor="white",style=filled];
"client.delete('/'),type='call'\nline_star:221,line_end:221|char_star:11,char_end:29"->"('/'),type='argument_list'\nline_star:221,line_end:221|char_star:24,char_end:29";
"data,type='identifier'\nline_star:221,line_end:221|char_star:30,char_end:34"[shape="point",fillcolor="#121013",style=filled];
"client.delete('/').data,type='attribute'\nline_star:221,line_end:221|char_star:11,char_end:34"->"data,type='identifier'\nline_star:221,line_end:221|char_star:30,char_end:34";
"assert sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='assert_statement'\nline_star:222,line_end:222|char_star:4,char_end:61"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:207,line_end:222|char_star:4,char_end:61"->"assert sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='assert_statement'\nline_star:222,line_end:222|char_star:4,char_end:61";
"sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='comparison_operator'\nline_star:222,line_end:222|char_star:11,char_end:61"[shape="box",fillcolor="white",style=filled];
"assert sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='assert_statement'\nline_star:222,line_end:222|char_star:4,char_end:61"->"sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='comparison_operator'\nline_star:222,line_end:222|char_star:11,char_end:61";
"sorted(GetDeleteView.methods),type='call'\nline_star:222,line_end:222|char_star:11,char_end:40"[shape="box",fillcolor="white",style=filled];
"sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='comparison_operator'\nline_star:222,line_end:222|char_star:11,char_end:61"->"sorted(GetDeleteView.methods),type='call'\nline_star:222,line_end:222|char_star:11,char_end:40";
"sorted,type='identifier'\nline_star:222,line_end:222|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"sorted(GetDeleteView.methods),type='call'\nline_star:222,line_end:222|char_star:11,char_end:40"->"sorted,type='identifier'\nline_star:222,line_end:222|char_star:11,char_end:17";
"(GetDeleteView.methods),type='argument_list'\nline_star:222,line_end:222|char_star:17,char_end:40"[shape="box",fillcolor="white",style=filled];
"sorted(GetDeleteView.methods),type='call'\nline_star:222,line_end:222|char_star:11,char_end:40"->"(GetDeleteView.methods),type='argument_list'\nline_star:222,line_end:222|char_star:17,char_end:40";
"GetDeleteView.methods,type='attribute'\nline_star:222,line_end:222|char_star:18,char_end:39"[shape="box",fillcolor="white",style=filled];
"(GetDeleteView.methods),type='argument_list'\nline_star:222,line_end:222|char_star:17,char_end:40"->"GetDeleteView.methods,type='attribute'\nline_star:222,line_end:222|char_star:18,char_end:39";
"GetDeleteView,type='identifier'\nline_star:222,line_end:222|char_star:18,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"GetDeleteView.methods,type='attribute'\nline_star:222,line_end:222|char_star:18,char_end:39"->"GetDeleteView,type='identifier'\nline_star:222,line_end:222|char_star:18,char_end:31";
"methods,type='identifier'\nline_star:222,line_end:222|char_star:32,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"GetDeleteView.methods,type='attribute'\nline_star:222,line_end:222|char_star:18,char_end:39"->"methods,type='identifier'\nline_star:222,line_end:222|char_star:32,char_end:39";
"['DELETE', 'GET'],type='list'\nline_star:222,line_end:222|char_star:44,char_end:61"[shape="box",fillcolor="white",style=filled];
"sorted(GetDeleteView.methods) == ['DELETE', 'GET'],type='comparison_operator'\nline_star:222,line_end:222|char_star:11,char_end:61"->"['DELETE', 'GET'],type='list'\nline_star:222,line_end:222|char_star:44,char_end:61";
"def test_remove_method_from_parent(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST'\n\n    class View(GetView, OtherView):\n        methods = ['GET']\n\n    app.add_url_rule('/', view_func=View.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.post('/').status_code == 405\n    assert sorted(View.methods) == ['GET'],type='function_definition'\nline_star:225,line_end:241|char_star:0,char_end:42"[shape="box",fillcolor="#cee6b4",style=filled];
"MODULE"->"def test_remove_method_from_parent(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST'\n\n    class View(GetView, OtherView):\n        methods = ['GET']\n\n    app.add_url_rule('/', view_func=View.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.post('/').status_code == 405\n    assert sorted(View.methods) == ['GET'],type='function_definition'\nline_star:225,line_end:241|char_star:0,char_end:42";
"test_remove_method_from_parent,type='identifier'\nline_star:225,line_end:225|char_star:4,char_end:34"[shape="point",fillcolor="#121013",style=filled];
"def test_remove_method_from_parent(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST'\n\n    class View(GetView, OtherView):\n        methods = ['GET']\n\n    app.add_url_rule('/', view_func=View.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.post('/').status_code == 405\n    assert sorted(View.methods) == ['GET'],type='function_definition'\nline_star:225,line_end:241|char_star:0,char_end:42"->"test_remove_method_from_parent,type='identifier'\nline_star:225,line_end:225|char_star:4,char_end:34";
"(app, client),type='parameters'\nline_star:225,line_end:225|char_star:34,char_end:47"[shape="box",fillcolor="white",style=filled];
"def test_remove_method_from_parent(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST'\n\n    class View(GetView, OtherView):\n        methods = ['GET']\n\n    app.add_url_rule('/', view_func=View.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.post('/').status_code == 405\n    assert sorted(View.methods) == ['GET'],type='function_definition'\nline_star:225,line_end:241|char_star:0,char_end:42"->"(app, client),type='parameters'\nline_star:225,line_end:225|char_star:34,char_end:47";
"app,type='identifier'\nline_star:225,line_end:225|char_star:35,char_end:38"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:225,line_end:225|char_star:34,char_end:47"->"app,type='identifier'\nline_star:225,line_end:225|char_star:35,char_end:38";
"client,type='identifier'\nline_star:225,line_end:225|char_star:40,char_end:46"[shape="point",fillcolor="#121013",style=filled];
"(app, client),type='parameters'\nline_star:225,line_end:225|char_star:34,char_end:47"->"client,type='identifier'\nline_star:225,line_end:225|char_star:40,char_end:46";
"type='INFORMATION BLOCK'\nline_star:226,line_end:241|char_star:4,char_end:42"[shape="point",fillcolor="#121013",style=filled];
"def test_remove_method_from_parent(app, client):\n    class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET'\n\n    class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST'\n\n    class View(GetView, OtherView):\n        methods = ['GET']\n\n    app.add_url_rule('/', view_func=View.as_view('index'))\n\n    assert client.get('/').data == b'GET'\n    assert client.post('/').status_code == 405\n    assert sorted(View.methods) == ['GET'],type='function_definition'\nline_star:225,line_end:241|char_star:0,char_end:42"->"type='INFORMATION BLOCK'\nline_star:226,line_end:241|char_star:4,char_end:42";
"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:226,line_end:228|char_star:4,char_end:24"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:226,line_end:241|char_star:4,char_end:42"->"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:226,line_end:228|char_star:4,char_end:24";
"GetView,type='identifier'\nline_star:226,line_end:226|char_star:10,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:226,line_end:228|char_star:4,char_end:24"->"GetView,type='identifier'\nline_star:226,line_end:226|char_star:10,char_end:17";
"(flask.views.MethodView),type='argument_list'\nline_star:226,line_end:226|char_star:17,char_end:41"[shape="box",fillcolor="white",style=filled];
"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:226,line_end:228|char_star:4,char_end:24"->"(flask.views.MethodView),type='argument_list'\nline_star:226,line_end:226|char_star:17,char_end:41";
"flask.views.MethodView,type='attribute'\nline_star:226,line_end:226|char_star:18,char_end:40"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:226,line_end:226|char_star:17,char_end:41"->"flask.views.MethodView,type='attribute'\nline_star:226,line_end:226|char_star:18,char_end:40";
"flask.views,type='attribute'\nline_star:226,line_end:226|char_star:18,char_end:29"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:226,line_end:226|char_star:18,char_end:40"->"flask.views,type='attribute'\nline_star:226,line_end:226|char_star:18,char_end:29";
"flask,type='identifier'\nline_star:226,line_end:226|char_star:18,char_end:23"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:226,line_end:226|char_star:18,char_end:29"->"flask,type='identifier'\nline_star:226,line_end:226|char_star:18,char_end:23";
"views,type='identifier'\nline_star:226,line_end:226|char_star:24,char_end:29"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:226,line_end:226|char_star:18,char_end:29"->"views,type='identifier'\nline_star:226,line_end:226|char_star:24,char_end:29";
"MethodView,type='identifier'\nline_star:226,line_end:226|char_star:30,char_end:40"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:226,line_end:226|char_star:18,char_end:40"->"MethodView,type='identifier'\nline_star:226,line_end:226|char_star:30,char_end:40";
"type='INFORMATION BLOCK'\nline_star:227,line_end:228|char_star:8,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"class GetView(flask.views.MethodView):\n        def get(self):\n            return 'GET',type='class_definition'\nline_star:226,line_end:228|char_star:4,char_end:24"->"type='INFORMATION BLOCK'\nline_star:227,line_end:228|char_star:8,char_end:24";
"def get(self):\n            return 'GET',type='function_definition'\nline_star:227,line_end:228|char_star:8,char_end:24"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:227,line_end:228|char_star:8,char_end:24"->"def get(self):\n            return 'GET',type='function_definition'\nline_star:227,line_end:228|char_star:8,char_end:24";
"get,type='identifier'\nline_star:227,line_end:227|char_star:12,char_end:15"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:227,line_end:228|char_star:8,char_end:24"->"get,type='identifier'\nline_star:227,line_end:227|char_star:12,char_end:15";
"(self),type='parameters'\nline_star:227,line_end:227|char_star:15,char_end:21"[shape="box",fillcolor="white",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:227,line_end:228|char_star:8,char_end:24"->"(self),type='parameters'\nline_star:227,line_end:227|char_star:15,char_end:21";
"self,type='identifier'\nline_star:227,line_end:227|char_star:16,char_end:20"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:227,line_end:227|char_star:15,char_end:21"->"self,type='identifier'\nline_star:227,line_end:227|char_star:16,char_end:20";
"type='INFORMATION BLOCK'\nline_star:228,line_end:228|char_star:12,char_end:24"[shape="point",fillcolor="#121013",style=filled];
"def get(self):\n            return 'GET',type='function_definition'\nline_star:227,line_end:228|char_star:8,char_end:24"->"type='INFORMATION BLOCK'\nline_star:228,line_end:228|char_star:12,char_end:24";
"return 'GET',type='return_statement'\nline_star:228,line_end:228|char_star:12,char_end:24"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:228,line_end:228|char_star:12,char_end:24"->"return 'GET',type='return_statement'\nline_star:228,line_end:228|char_star:12,char_end:24";
"class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:230,line_end:232|char_star:4,char_end:25"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:226,line_end:241|char_star:4,char_end:42"->"class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:230,line_end:232|char_star:4,char_end:25";
"OtherView,type='identifier'\nline_star:230,line_end:230|char_star:10,char_end:19"[shape="point",fillcolor="#121013",style=filled];
"class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:230,line_end:232|char_star:4,char_end:25"->"OtherView,type='identifier'\nline_star:230,line_end:230|char_star:10,char_end:19";
"(flask.views.MethodView),type='argument_list'\nline_star:230,line_end:230|char_star:19,char_end:43"[shape="box",fillcolor="white",style=filled];
"class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:230,line_end:232|char_star:4,char_end:25"->"(flask.views.MethodView),type='argument_list'\nline_star:230,line_end:230|char_star:19,char_end:43";
"flask.views.MethodView,type='attribute'\nline_star:230,line_end:230|char_star:20,char_end:42"[shape="box",fillcolor="white",style=filled];
"(flask.views.MethodView),type='argument_list'\nline_star:230,line_end:230|char_star:19,char_end:43"->"flask.views.MethodView,type='attribute'\nline_star:230,line_end:230|char_star:20,char_end:42";
"flask.views,type='attribute'\nline_star:230,line_end:230|char_star:20,char_end:31"[shape="box",fillcolor="white",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:230,line_end:230|char_star:20,char_end:42"->"flask.views,type='attribute'\nline_star:230,line_end:230|char_star:20,char_end:31";
"flask,type='identifier'\nline_star:230,line_end:230|char_star:20,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:230,line_end:230|char_star:20,char_end:31"->"flask,type='identifier'\nline_star:230,line_end:230|char_star:20,char_end:25";
"views,type='identifier'\nline_star:230,line_end:230|char_star:26,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"flask.views,type='attribute'\nline_star:230,line_end:230|char_star:20,char_end:31"->"views,type='identifier'\nline_star:230,line_end:230|char_star:26,char_end:31";
"MethodView,type='identifier'\nline_star:230,line_end:230|char_star:32,char_end:42"[shape="point",fillcolor="#121013",style=filled];
"flask.views.MethodView,type='attribute'\nline_star:230,line_end:230|char_star:20,char_end:42"->"MethodView,type='identifier'\nline_star:230,line_end:230|char_star:32,char_end:42";
"type='INFORMATION BLOCK'\nline_star:231,line_end:232|char_star:8,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"class OtherView(flask.views.MethodView):\n        def post(self):\n            return 'POST',type='class_definition'\nline_star:230,line_end:232|char_star:4,char_end:25"->"type='INFORMATION BLOCK'\nline_star:231,line_end:232|char_star:8,char_end:25";
"def post(self):\n            return 'POST',type='function_definition'\nline_star:231,line_end:232|char_star:8,char_end:25"[shape="box",fillcolor="#cee6b4",style=filled];
"type='INFORMATION BLOCK'\nline_star:231,line_end:232|char_star:8,char_end:25"->"def post(self):\n            return 'POST',type='function_definition'\nline_star:231,line_end:232|char_star:8,char_end:25";
"post,type='identifier'\nline_star:231,line_end:231|char_star:12,char_end:16"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:231,line_end:232|char_star:8,char_end:25"->"post,type='identifier'\nline_star:231,line_end:231|char_star:12,char_end:16";
"(self),type='parameters'\nline_star:231,line_end:231|char_star:16,char_end:22"[shape="box",fillcolor="white",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:231,line_end:232|char_star:8,char_end:25"->"(self),type='parameters'\nline_star:231,line_end:231|char_star:16,char_end:22";
"self,type='identifier'\nline_star:231,line_end:231|char_star:17,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"(self),type='parameters'\nline_star:231,line_end:231|char_star:16,char_end:22"->"self,type='identifier'\nline_star:231,line_end:231|char_star:17,char_end:21";
"type='INFORMATION BLOCK'\nline_star:232,line_end:232|char_star:12,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"def post(self):\n            return 'POST',type='function_definition'\nline_star:231,line_end:232|char_star:8,char_end:25"->"type='INFORMATION BLOCK'\nline_star:232,line_end:232|char_star:12,char_end:25";
"return 'POST',type='return_statement'\nline_star:232,line_end:232|char_star:12,char_end:25"[shape="box",fillcolor="#f0c929",style=filled];
"type='INFORMATION BLOCK'\nline_star:232,line_end:232|char_star:12,char_end:25"->"return 'POST',type='return_statement'\nline_star:232,line_end:232|char_star:12,char_end:25";
"class View(GetView, OtherView):\n        methods = ['GET'],type='class_definition'\nline_star:234,line_end:235|char_star:4,char_end:25"[shape="box",fillcolor="#ffdf91",style=filled];
"type='INFORMATION BLOCK'\nline_star:226,line_end:241|char_star:4,char_end:42"->"class View(GetView, OtherView):\n        methods = ['GET'],type='class_definition'\nline_star:234,line_end:235|char_star:4,char_end:25";
"View,type='identifier'\nline_star:234,line_end:234|char_star:10,char_end:14"[shape="point",fillcolor="#121013",style=filled];
"class View(GetView, OtherView):\n        methods = ['GET'],type='class_definition'\nline_star:234,line_end:235|char_star:4,char_end:25"->"View,type='identifier'\nline_star:234,line_end:234|char_star:10,char_end:14";
"(GetView, OtherView),type='argument_list'\nline_star:234,line_end:234|char_star:14,char_end:34"[shape="box",fillcolor="white",style=filled];
"class View(GetView, OtherView):\n        methods = ['GET'],type='class_definition'\nline_star:234,line_end:235|char_star:4,char_end:25"->"(GetView, OtherView),type='argument_list'\nline_star:234,line_end:234|char_star:14,char_end:34";
"GetView,type='identifier'\nline_star:234,line_end:234|char_star:15,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"(GetView, OtherView),type='argument_list'\nline_star:234,line_end:234|char_star:14,char_end:34"->"GetView,type='identifier'\nline_star:234,line_end:234|char_star:15,char_end:22";
"OtherView,type='identifier'\nline_star:234,line_end:234|char_star:24,char_end:33"[shape="point",fillcolor="#121013",style=filled];
"(GetView, OtherView),type='argument_list'\nline_star:234,line_end:234|char_star:14,char_end:34"->"OtherView,type='identifier'\nline_star:234,line_end:234|char_star:24,char_end:33";
"type='INFORMATION BLOCK'\nline_star:235,line_end:235|char_star:8,char_end:25"[shape="point",fillcolor="#121013",style=filled];
"class View(GetView, OtherView):\n        methods = ['GET'],type='class_definition'\nline_star:234,line_end:235|char_star:4,char_end:25"->"type='INFORMATION BLOCK'\nline_star:235,line_end:235|char_star:8,char_end:25";
"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:239,line_end:239|char_star:4,char_end:41"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:226,line_end:241|char_star:4,char_end:42"->"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:239,line_end:239|char_star:4,char_end:41";
"client.get('/').data == b'GET',type='comparison_operator'\nline_star:239,line_end:239|char_star:11,char_end:41"[shape="box",fillcolor="white",style=filled];
"assert client.get('/').data == b'GET',type='assert_statement'\nline_star:239,line_end:239|char_star:4,char_end:41"->"client.get('/').data == b'GET',type='comparison_operator'\nline_star:239,line_end:239|char_star:11,char_end:41";
"client.get('/').data,type='attribute'\nline_star:239,line_end:239|char_star:11,char_end:31"[shape="box",fillcolor="white",style=filled];
"client.get('/').data == b'GET',type='comparison_operator'\nline_star:239,line_end:239|char_star:11,char_end:41"->"client.get('/').data,type='attribute'\nline_star:239,line_end:239|char_star:11,char_end:31";
"client.get('/'),type='call'\nline_star:239,line_end:239|char_star:11,char_end:26"[shape="box",fillcolor="white",style=filled];
"client.get('/').data,type='attribute'\nline_star:239,line_end:239|char_star:11,char_end:31"->"client.get('/'),type='call'\nline_star:239,line_end:239|char_star:11,char_end:26";
"client.get,type='attribute'\nline_star:239,line_end:239|char_star:11,char_end:21"[shape="box",fillcolor="white",style=filled];
"client.get('/'),type='call'\nline_star:239,line_end:239|char_star:11,char_end:26"->"client.get,type='attribute'\nline_star:239,line_end:239|char_star:11,char_end:21";
"client,type='identifier'\nline_star:239,line_end:239|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"client.get,type='attribute'\nline_star:239,line_end:239|char_star:11,char_end:21"->"client,type='identifier'\nline_star:239,line_end:239|char_star:11,char_end:17";
"get,type='identifier'\nline_star:239,line_end:239|char_star:18,char_end:21"[shape="point",fillcolor="#121013",style=filled];
"client.get,type='attribute'\nline_star:239,line_end:239|char_star:11,char_end:21"->"get,type='identifier'\nline_star:239,line_end:239|char_star:18,char_end:21";
"('/'),type='argument_list'\nline_star:239,line_end:239|char_star:21,char_end:26"[shape="box",fillcolor="white",style=filled];
"client.get('/'),type='call'\nline_star:239,line_end:239|char_star:11,char_end:26"->"('/'),type='argument_list'\nline_star:239,line_end:239|char_star:21,char_end:26";
"data,type='identifier'\nline_star:239,line_end:239|char_star:27,char_end:31"[shape="point",fillcolor="#121013",style=filled];
"client.get('/').data,type='attribute'\nline_star:239,line_end:239|char_star:11,char_end:31"->"data,type='identifier'\nline_star:239,line_end:239|char_star:27,char_end:31";
"assert client.post('/').status_code == 405,type='assert_statement'\nline_star:240,line_end:240|char_star:4,char_end:46"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:226,line_end:241|char_star:4,char_end:42"->"assert client.post('/').status_code == 405,type='assert_statement'\nline_star:240,line_end:240|char_star:4,char_end:46";
"client.post('/').status_code == 405,type='comparison_operator'\nline_star:240,line_end:240|char_star:11,char_end:46"[shape="box",fillcolor="white",style=filled];
"assert client.post('/').status_code == 405,type='assert_statement'\nline_star:240,line_end:240|char_star:4,char_end:46"->"client.post('/').status_code == 405,type='comparison_operator'\nline_star:240,line_end:240|char_star:11,char_end:46";
"client.post('/').status_code,type='attribute'\nline_star:240,line_end:240|char_star:11,char_end:39"[shape="box",fillcolor="white",style=filled];
"client.post('/').status_code == 405,type='comparison_operator'\nline_star:240,line_end:240|char_star:11,char_end:46"->"client.post('/').status_code,type='attribute'\nline_star:240,line_end:240|char_star:11,char_end:39";
"client.post('/'),type='call'\nline_star:240,line_end:240|char_star:11,char_end:27"[shape="box",fillcolor="white",style=filled];
"client.post('/').status_code,type='attribute'\nline_star:240,line_end:240|char_star:11,char_end:39"->"client.post('/'),type='call'\nline_star:240,line_end:240|char_star:11,char_end:27";
"client.post,type='attribute'\nline_star:240,line_end:240|char_star:11,char_end:22"[shape="box",fillcolor="white",style=filled];
"client.post('/'),type='call'\nline_star:240,line_end:240|char_star:11,char_end:27"->"client.post,type='attribute'\nline_star:240,line_end:240|char_star:11,char_end:22";
"client,type='identifier'\nline_star:240,line_end:240|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"client.post,type='attribute'\nline_star:240,line_end:240|char_star:11,char_end:22"->"client,type='identifier'\nline_star:240,line_end:240|char_star:11,char_end:17";
"post,type='identifier'\nline_star:240,line_end:240|char_star:18,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"client.post,type='attribute'\nline_star:240,line_end:240|char_star:11,char_end:22"->"post,type='identifier'\nline_star:240,line_end:240|char_star:18,char_end:22";
"('/'),type='argument_list'\nline_star:240,line_end:240|char_star:22,char_end:27"[shape="box",fillcolor="white",style=filled];
"client.post('/'),type='call'\nline_star:240,line_end:240|char_star:11,char_end:27"->"('/'),type='argument_list'\nline_star:240,line_end:240|char_star:22,char_end:27";
"status_code,type='identifier'\nline_star:240,line_end:240|char_star:28,char_end:39"[shape="point",fillcolor="#121013",style=filled];
"client.post('/').status_code,type='attribute'\nline_star:240,line_end:240|char_star:11,char_end:39"->"status_code,type='identifier'\nline_star:240,line_end:240|char_star:28,char_end:39";
"assert sorted(View.methods) == ['GET'],type='assert_statement'\nline_star:241,line_end:241|char_star:4,char_end:42"[shape="box",fillcolor="white",style=filled];
"type='INFORMATION BLOCK'\nline_star:226,line_end:241|char_star:4,char_end:42"->"assert sorted(View.methods) == ['GET'],type='assert_statement'\nline_star:241,line_end:241|char_star:4,char_end:42";
"sorted(View.methods) == ['GET'],type='comparison_operator'\nline_star:241,line_end:241|char_star:11,char_end:42"[shape="box",fillcolor="white",style=filled];
"assert sorted(View.methods) == ['GET'],type='assert_statement'\nline_star:241,line_end:241|char_star:4,char_end:42"->"sorted(View.methods) == ['GET'],type='comparison_operator'\nline_star:241,line_end:241|char_star:11,char_end:42";
"sorted(View.methods),type='call'\nline_star:241,line_end:241|char_star:11,char_end:31"[shape="box",fillcolor="white",style=filled];
"sorted(View.methods) == ['GET'],type='comparison_operator'\nline_star:241,line_end:241|char_star:11,char_end:42"->"sorted(View.methods),type='call'\nline_star:241,line_end:241|char_star:11,char_end:31";
"sorted,type='identifier'\nline_star:241,line_end:241|char_star:11,char_end:17"[shape="point",fillcolor="#121013",style=filled];
"sorted(View.methods),type='call'\nline_star:241,line_end:241|char_star:11,char_end:31"->"sorted,type='identifier'\nline_star:241,line_end:241|char_star:11,char_end:17";
"(View.methods),type='argument_list'\nline_star:241,line_end:241|char_star:17,char_end:31"[shape="box",fillcolor="white",style=filled];
"sorted(View.methods),type='call'\nline_star:241,line_end:241|char_star:11,char_end:31"->"(View.methods),type='argument_list'\nline_star:241,line_end:241|char_star:17,char_end:31";
"View.methods,type='attribute'\nline_star:241,line_end:241|char_star:18,char_end:30"[shape="box",fillcolor="white",style=filled];
"(View.methods),type='argument_list'\nline_star:241,line_end:241|char_star:17,char_end:31"->"View.methods,type='attribute'\nline_star:241,line_end:241|char_star:18,char_end:30";
"View,type='identifier'\nline_star:241,line_end:241|char_star:18,char_end:22"[shape="point",fillcolor="#121013",style=filled];
"View.methods,type='attribute'\nline_star:241,line_end:241|char_star:18,char_end:30"->"View,type='identifier'\nline_star:241,line_end:241|char_star:18,char_end:22";
"methods,type='identifier'\nline_star:241,line_end:241|char_star:23,char_end:30"[shape="point",fillcolor="#121013",style=filled];
"View.methods,type='attribute'\nline_star:241,line_end:241|char_star:18,char_end:30"->"methods,type='identifier'\nline_star:241,line_end:241|char_star:23,char_end:30";
"['GET'],type='list'\nline_star:241,line_end:241|char_star:35,char_end:42"[shape="box",fillcolor="white",style=filled];
"sorted(View.methods) == ['GET'],type='comparison_operator'\nline_star:241,line_end:241|char_star:11,char_end:42"->"['GET'],type='list'\nline_star:241,line_end:241|char_star:35,char_end:42";
"import pytest\nfrom werkzeug.http import parse_set_header\nimport flask.view"[shape="box",fillcolor="#f48b29",style=filled];
"MODULE"->"import pytest\nfrom werkzeug.http import parse_set_header\nimport flask.view"
}
